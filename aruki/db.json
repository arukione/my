{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/了解更多.html","path":"了解更多.html","modified":0,"renderable":1},{"_id":"themes/next/source/路由器配置.html","path":"路由器配置.html","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple_touch_icon.png","path":"images/apple_touch_icon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/character_information_sql.png","path":"images/character_information_sql.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/small.png","path":"images/small.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/medium.ico","path":"images/medium.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/天翼验证码训练集图片.png","path":"images/天翼验证码训练集图片.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/character_information.sql","path":"repositories/character_information.sql","modified":0,"renderable":1},{"_id":"themes/next/source/images/数据的逻辑结构.png","path":"images/数据的逻辑结构.png","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/t7s_character_information.json","path":"repositories/t7s_character_information.json","modified":0,"renderable":1},{"_id":"themes/next/source/ssr/ssr","path":"ssr/ssr","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/t7s_character_info_get.py","path":"repositories/t7s_character_info_get.py","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/微信.jpg","path":"images/路由器/微信.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/路由器1.jpg","path":"images/路由器/路由器1.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/路由器2.jpg","path":"images/路由器/路由器2.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/路由器3.jpg","path":"images/路由器/路由器3.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/路由器4.jpg","path":"images/路由器/路由器4.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/表情包/像素瘫倒.jpg","path":"images/表情包/像素瘫倒.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/表情包/别打了.jpg","path":"images/表情包/别打了.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/404/404壁纸.jpg","path":"404/404壁纸.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/十三微信.jpg","path":"images/路由器/十三微信.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/machine learning/反向传播算法.zip","path":"repositories/machine learning/反向传播算法.zip","modified":0,"renderable":1},{"_id":"themes/next/source/404/ApacheCN的github.png","path":"404/ApacheCN的github.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/路由器微信.jpg","path":"images/路由器/路由器微信.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/路由器壁纸.jpg","path":"images/路由器/路由器壁纸.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/machine learning/梯度下降算法.zip","path":"repositories/machine learning/梯度下降算法.zip","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/machine learning/支持向量机(SVM)和sorfmax分类.zip","path":"repositories/machine learning/支持向量机(SVM)和sorfmax分类.zip","modified":0,"renderable":1},{"_id":"themes/next/source/404/myblog.png","path":"404/myblog.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/machine learning/图像分类算法讲解和KNN网络实现.zip","path":"repositories/machine learning/图像分类算法讲解和KNN网络实现.zip","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/machine learning/卷积神经网络原理以及实现.zip","path":"repositories/machine learning/卷积神经网络原理以及实现.zip","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/machine learning/建立神经网络模型.zip","path":"repositories/machine learning/建立神经网络模型.zip","modified":0,"renderable":1},{"_id":"themes/next/source/repositories/machine learning/machine learning.7z","path":"repositories/machine learning/machine learning.7z","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/网络图1.png","path":"images/路由器/网络图1.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/网络图2.png","path":"images/路由器/网络图2.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/网络图3.png","path":"images/路由器/网络图3.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/路由器/网络断开.png","path":"images/路由器/网络断开.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/background.jpg","path":"images/background.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"440ddcd92585f97aa09ec6414ee6c46599ff9ea3","modified":1568529369636},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1568529369695},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1568529369697},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1568529369703},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1568529369691},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1568529369700},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1568529369705},{"_id":"themes/next/README.md","hash":"efcdc4b0ca791c3fc64afa28c8721e137f2d11ea","modified":1568529369722},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1568529369713},{"_id":"themes/next/README.cn.md","hash":"b878b73f3fcdef47849453c94420871903d487b3","modified":1568529369717},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1568529369729},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1568529369709},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1568529370057},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1568529369733},{"_id":"themes/next/_config.yml","hash":"ff8bcb467820acb541f8f77950889f8d8ac18d27","modified":1568538309974},{"_id":"source/_posts/Welcome.md","hash":"ad433b199723fcdf939f30a25fd53eb8b4d2121f","modified":1568539156765},{"_id":"source/_posts/MySQL安装到登陆的问题.md","hash":"a6e64586541333406502e826cd2df9957025f21e","modified":1568529369640},{"_id":"source/_posts/python程序打包成exe文件.md","hash":"25a76b762a54bec8597652073206deba84bf30b5","modified":1568562096838},{"_id":"source/_posts/使用Hexo-NexT时遇到的问题.md","hash":"ea9cd2a955fc501d7ce512b379dd986f34e40624","modified":1568529369652},{"_id":"source/_posts/城院智能路由器.md","hash":"390d123bb6ca9a6329f23e3ff1cf7fc5b0c0bc33","modified":1568722128716},{"_id":"source/_posts/天翼校园网验证码识别.md","hash":"934203d08ed7e81a65f5d8f6b5d742b24266e7f3","modified":1568529369659},{"_id":"source/about/index.md","hash":"e7bb60a66306fe74eca8a4557ef79d9895b5c085","modified":1568529369678},{"_id":"source/categories/index.md","hash":"719b3518e1cd58622bb7656a473e035dc2e27342","modified":1568529369682},{"_id":"source/tags/index.md","hash":"48abe581a74ac86f5f54bb23c2eece8561c65538","modified":1568529369687},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1568529369744},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1568529369751},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1568529369738},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1568529369741},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1568529369762},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1568529369747},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1568529369754},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1568529369766},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1568529369769},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1568529369757},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1568529369773},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1568529369787},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1568529369780},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1568529369777},{"_id":"source/_posts/我的学习旅程.md","hash":"148d6895fd65d8eaade0c8b9d2cfa3689d80dd53","modified":1568529369663},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1568529369784},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1568529369791},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1568529370038},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1568529370038},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1568529370038},{"_id":"themes/next/layout/_layout.swig","hash":"685c2233e37cfa440aadddd0bab8ba04c456a6cf","modified":1568531533910},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1568529370057},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1568529370068},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1568529370068},{"_id":"source/_posts/数据结构基础.md","hash":"02af889fc2d306f6bc5270cb6f72dca29d197d16","modified":1568562029161},{"_id":"themes/next/layout/page.swig","hash":"7e61fc6a31989cc4535b060a23417846c612c0b7","modified":1568529370047},{"_id":"source/_posts/机器学习资源分享.md","hash":"15bf3237ba5d22e6658693c3f12df54d3712a5ac","modified":1568562040417},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1568529370047},{"_id":"themes/next/source/404.html","hash":"ea0baf33e7883ea8419456a22ec9f998d9c52617","modified":1568529370108},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1568529371787},{"_id":"themes/next/source/了解更多.html","hash":"e694be6ffeb5d9b5dcba7ca6201ec97e2a95806d","modified":1568529371780},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1568529370047},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1568529371793},{"_id":"themes/next/source/路由器配置.html","hash":"df3c4f28141005ba1b4982b6e1d1b880f78c6b1a","modified":1568537612377},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1568529371789},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529370563},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1568529369795},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1568529369798},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1568529369812},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1568529369809},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1568529369819},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1568529369822},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1568529369825},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1568529369830},{"_id":"themes/next/layout/_macro/post.swig","hash":"afbe5342c51e1f40a5c1f8a0f6a1529dab7f1a9c","modified":1568529369816},{"_id":"themes/next/layout/_partials/footer.swig","hash":"95cf833585b0631f128930bd71bb07e57913c5df","modified":1568529369833},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1568529369853},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1568529369856},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1568529369860},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1568529369849},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1568529369887},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1568529369889},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1568529369978},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1568529369988},{"_id":"themes/next/layout/_partials/head.swig","hash":"ecda36642351025489669b41a8ef01fab5e69151","modified":1568530835085},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1568529369997},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1568529370008},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1568529369906},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1568529370081},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1568529370085},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1568529370087},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1568529370092},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1568529370095},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1568529369997},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1568529370099},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1568529370106},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1568529370103},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1568529370108},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1568529369988},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1568529370558},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1568529370565},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1568529369997},{"_id":"themes/next/source/images/avatar.jpg","hash":"dd5cd39c5e4b4288d21bc827d235ad0620e44ad8","modified":1568529370571},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1568529370579},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1568529370587},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1568529370593},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1568529370598},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1568529370616},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1568529370601},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1568529370619},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1568529370610},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1568529370605},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1568529370622},{"_id":"themes/next/source/images/apple_touch_icon.png","hash":"1ea01e0d3dcbed2b47e43f8b426777bf948b5d79","modified":1568529370568},{"_id":"themes/next/source/images/character_information_sql.png","hash":"c88786622b5b88cfdc6200e86abcd16e6e51f632","modified":1568529370612},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1568529370638},{"_id":"themes/next/source/images/small.png","hash":"723cb914f617b4d6b2aad8198441379be7fa2aaa","modified":1568529370638},{"_id":"themes/next/source/images/medium.ico","hash":"4cbca054b8c9e6af168d133b60335d8c321b444e","modified":1568529370622},{"_id":"themes/next/source/images/天翼验证码训练集图片.png","hash":"b12dc1b92b3fe2a460806229ba7f3fa995315e9f","modified":1568529370657},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1568529370627},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1568529370627},{"_id":"themes/next/source/repositories/character_information.sql","hash":"61db353eb93200991e5bbff925d980ec205469cb","modified":1568529371229},{"_id":"themes/next/source/images/数据的逻辑结构.png","hash":"4cb0fba6d03d0da73a0ee42daff490f6f1452083","modified":1568529370664},{"_id":"themes/next/source/repositories/t7s_character_information.json","hash":"b9f57cef1f04874a1951a64448459fbe4f1a5ce0","modified":1568529371771},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529369900},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529369901},{"_id":"themes/next/source/ssr/ssr","hash":"711ca68027b3e8f4c1b1aad91f1fc9822bf49587","modified":1568529371777},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529370439},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529370441},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529370447},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529370546},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568529370556},{"_id":"themes/next/source/repositories/t7s_character_info_get.py","hash":"e478531d154113d46c170a033af3944674cb6a7f","modified":1568529371768},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1568529369841},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1568529369871},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1568529369846},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1568529369865},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1568529369878},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1568529369874},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1568529369868},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1568529369880},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1568529369897},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1568529369903},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1568529369894},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1568529369912},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1568529369883},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"16cb23818909f57dac1a5ada66869971c33d7bd8","modified":1568529369919},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1568529369926},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1568529369923},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1568529369914},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1568529369936},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1568529369931},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1568529369933},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1568529369940},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1568529369929},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1568529369948},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1568529369917},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1568529369948},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1568529369958},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1568529369958},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1568529369968},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1568529369940},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1568529369978},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1568529369968},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1568529369968},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1568529369978},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1568529370018},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1568529369958},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"aabc23ba4d205eeaf18cdf7c01d9a43ec8e4bc4c","modified":1568728865637},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1568529370028},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1568529370028},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1568529370437},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1568529370444},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1568529370537},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1568529370442},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1568529370018},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1568529370537},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"a18674dc4e6704cd837163d8ad93c2c3db069fd5","modified":1568529370548},{"_id":"themes/next/source/css/_variables/base.styl","hash":"023429863589fac92177a13371cd4f5d1d76b807","modified":1568618819124},{"_id":"themes/next/source/images/路由器/微信.jpg","hash":"91181e38c59124468a979bd97c6c2750ade91f24","modified":1568529370660},{"_id":"themes/next/source/images/路由器/路由器1.jpg","hash":"979e59c4c66a3caf59d71dc4299b01c9438fa20e","modified":1568529370678},{"_id":"themes/next/source/images/路由器/路由器2.jpg","hash":"788c08806b7ac612d42943ee1e1fd6370e54cffe","modified":1568529370678},{"_id":"themes/next/source/images/路由器/路由器3.jpg","hash":"f6f00267e4584c48184841142b93d791aee18039","modified":1568529370678},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1568529370708},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1568529370708},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1568529370717},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1568529370717},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1568529370717},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1568529370727},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1568529370738},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1568529370727},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1568529370738},{"_id":"themes/next/source/images/路由器/路由器4.jpg","hash":"feade1f68c7e08eb2600a7ce261842f1f7e6cae8","modified":1568529370688},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1568529370748},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1568529370748},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1568529370797},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1568529370842},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1568529370918},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1568529370831},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1568529370927},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1568529370837},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1568529370844},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1568529370948},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1568529370918},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1568529370958},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1568529370961},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1568529371050},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1568529370918},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1568529370948},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1568529371092},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1568529371061},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1568529371064},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1568529371072},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1568529371069},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1568529370953},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1568529371100},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1568529371107},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1568529371088},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1568529371097},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1568529371112},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1568529371115},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1568529371103},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1568529371118},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1568529371121},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1568529371120},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1568529371121},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1568529371076},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1568529371127},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1568529371079},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1568529371127},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1568529371127},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1568529371142},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1568529371150},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1568529371153},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1568529371191},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1568529371194},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1568529371207},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1568529371127},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1568529371085},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1568529371214},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1568529371220},{"_id":"themes/next/source/images/表情包/像素瘫倒.jpg","hash":"354ad9daf9f62c970fb59604270be7e6e85308ba","modified":1568529370672},{"_id":"themes/next/source/images/表情包/别打了.jpg","hash":"3a568a5f02ffa9b7876cc07e18f43147b07ad0aa","modified":1568529370672},{"_id":"themes/next/source/404/404壁纸.jpg","hash":"810a2868b287fde4918c502054bcf1b51ae8231b","modified":1568529370127},{"_id":"themes/next/source/images/路由器/十三微信.jpg","hash":"0a7c3fbb07fadc60ee7116ae83a20ef73225fc5d","modified":1568529370651},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1568529371056},{"_id":"themes/next/source/repositories/machine learning/反向传播算法.zip","hash":"b82a8f0f57c87d7cba33fbda821180aa4bb6413a","modified":1568529371555},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1568529370018},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1568529370178},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1568529370188},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1568529370008},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1568529370188},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1568529370201},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1568529370198},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1568529370415},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1568529370247},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1568529370345},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1568529370411},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1568529370422},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1568529370425},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1568529370417},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1568529370420},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1568529370454},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1568529370427},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1568529370456},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"ee13a72ea4b04a17aeefb40f76caa8065d1d2682","modified":1568529370450},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1568529370457},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1568529370457},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1568529370467},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1568529370457},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1568529370508},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1568529370467},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1568529370498},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1568529370498},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1568529370508},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1568529370498},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1568529370522},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1568529370518},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"a2d5559c371f7f5a2457b3d3390b433cddbe0ffa","modified":1568529370518},{"_id":"themes/next/source/404/ApacheCN的github.png","hash":"f2f1914a1bd876c8ec13735c7f8e9e6e1aeadd5c","modified":1568529370138},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1568529370527},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1568529370527},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1568529370738},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"07649fe87ee2bdf5487c7a261b85f598439fa347","modified":1568529370527},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1568529370849},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1568529370856},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1568529370797},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1568529370862},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1568529370867},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1568529370871},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1568529370872},{"_id":"themes/next/source/images/路由器/路由器微信.jpg","hash":"80560e5c900026b5b6f7da8197c7360d9a3a811d","modified":1568529370708},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1568529370777},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1568529370791},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1568529370898},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1568529370965},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1568529370969},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1568529370972},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1568529370907},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1568529370927},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1568529370938},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1568529371187},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1568529371183},{"_id":"themes/next/source/images/路由器/路由器壁纸.jpg","hash":"810a2868b287fde4918c502054bcf1b51ae8231b","modified":1568529370698},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1568529370791},{"_id":"themes/next/source/repositories/machine learning/梯度下降算法.zip","hash":"68a05deac0ee58bd16e4efd2d89a1095c157c8f3","modified":1568529371764},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1568529370907},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1568529371207},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1568529371037},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1568529370207},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1568529370228},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7bbb007798a473c76c9d4017375216f9226a9b59","modified":1568625193280},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1568529370231},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1568529370216},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"01d5107b5110052553da550957ca2d0fb8366cea","modified":1568620563752},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1568529370220},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1568529370234},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1568529370240},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1568529370240},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1568529370247},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1568529370224},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1568529370247},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1568529370258},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1568529370247},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1568529370240},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"be3a88492524a4585e7f48fba3d92aa7ca349bed","modified":1568621627333},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1568529370258},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1568529370267},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1568529370267},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1568529370267},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"abc55e86b1b6753564849e32795d9e3e4cad5f41","modified":1568623069494},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1568529370277},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1568529370289},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1568529370277},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1568529370289},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1568529370298},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1568529370308},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1568529370308},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"d44ce58349dec065eb193e1382b2b33c8cc4d873","modified":1568617656803},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1568529370298},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1568529370318},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"560ffdebafd2198ca5664def527b2333ee7e7ed1","modified":1568728970810},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1568529370318},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1568529370328},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1568529370328},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1568529370328},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1568529370352},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1568529370358},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1568529370338},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1568529371046},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1568529370342},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1568529370361},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1568529370363},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1568529370354},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1568529370368},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1568529370377},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1568529370371},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1568529370373},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1568529370381},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1568529370383},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1568529370386},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1568529370388},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1568529370393},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1568529370396},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1568529370399},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1568529370407},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1568529370478},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1568529370401},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1568529370405},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1568529370508},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1568529370478},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1568529370757},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1568529370757},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1568529370767},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1568529370767},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1568529370777},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1568529370877},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1568529370888},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1568529370877},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1568529370898},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1568529370891},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1568529370898},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1568529370996},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1568529370985},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1568529371030},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1568529370818},{"_id":"themes/next/source/repositories/machine learning/支持向量机(SVM)和sorfmax分类.zip","hash":"03609935faa28b3a267681bb613e7d11ab3b3651","modified":1568529371752},{"_id":"themes/next/source/404/myblog.png","hash":"5d1f2a05c445bb5edd3ed45251cf46842903c8bc","modified":1568529370178},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1568529371021},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1568529371178},{"_id":"themes/next/source/repositories/machine learning/图像分类算法讲解和KNN网络实现.zip","hash":"ec58a401b0804ce77f63852dfb332143f77ef4db","modified":1568529371614},{"_id":"themes/next/source/repositories/machine learning/卷积神经网络原理以及实现.zip","hash":"b2e876e1ecba41ab8093feedf88da51650c4fe02","modified":1568529371548},{"_id":"themes/next/source/images/background.png","hash":"b4730e711603403f89c7ad699ee6479f09bd9764","modified":1568562996000},{"_id":"themes/next/source/repositories/machine learning/建立神经网络模型.zip","hash":"1210d1b26f79f350eae34912e0963321ef0ee6f9","modified":1568529371729},{"_id":"themes/next/source/repositories/machine learning/machine learning.7z","hash":"5b082d39c7f11c8745986a534dbc6dbe07c8adb8","modified":1568529371469},{"_id":"public/atom.xml","hash":"4c18180db46d5ebeb171ab91884c7a3d0679e457","modified":1568783796120},{"_id":"public/search.xml","hash":"88b8a5d0ddd3572157dab69962a5a8fca07ceaa6","modified":1568783796120},{"_id":"public/categories/index.html","hash":"559063c08337ec8ec2f4d0128ccb9433a1702e12","modified":1568783798750},{"_id":"public/about/index.html","hash":"b0a47f9f8bec797de91c217f1f26633ceabf76d0","modified":1568783798747},{"_id":"public/tags/index.html","hash":"5ced13e8fe7d4249976115c1f08bbb4807e993c4","modified":1568783798130},{"_id":"public/2019/09/15/Welcome/index.html","hash":"dd66cbb234db8e4ab1bd0f3cccb6c2619c0e9fe2","modified":1568783798743},{"_id":"public/2019/09/11/数据结构基础/index.html","hash":"f11b9451825277159dd28347e3b14d1b4e25ca13","modified":1568783798746},{"_id":"public/2019/08/26/城院智能路由器/index.html","hash":"bccdca1203125079d845b88bbfa1ba409ddf22bf","modified":1568783798747},{"_id":"public/2019/06/02/python程序打包成exe文件/index.html","hash":"71019c406d665b2ee20fb94563691f9ffd751c35","modified":1568783798747},{"_id":"public/2019/05/25/天翼校园网验证码识别/index.html","hash":"f74e56b16ae79d865ea895ef28bf828d35e01d44","modified":1568783798747},{"_id":"public/2019/04/08/MySQL安装到登陆的问题/index.html","hash":"e90ce85a2a72153f81ab148b64b0a6c37df1fe37","modified":1568783798747},{"_id":"public/2019/04/04/我的学习旅程/index.html","hash":"7b85e633c2efe9e4c0e4a16c44eccb18801f9f6e","modified":1568783798747},{"_id":"public/2019/04/04/机器学习资源分享/index.html","hash":"e5ec72106bf0cdab70df80861d8dbab5fedf23ad","modified":1568783798747},{"_id":"public/2019/03/29/使用Hexo-NexT时遇到的问题/index.html","hash":"c2c318fadc7cd8bfe04fbda8329d1e61d8028132","modified":1568783798747},{"_id":"public/archives/index.html","hash":"a2e6cd82b6cdc23eed96db5f1d156c3101e67cb6","modified":1568783798747},{"_id":"public/archives/2019/index.html","hash":"3fc6f9df5789af2fdcef59a6d9d145455faab9d6","modified":1568783798747},{"_id":"public/archives/2019/03/index.html","hash":"202162ac16a3a0e7177673c546962a864a6d378e","modified":1568783798747},{"_id":"public/archives/2019/04/index.html","hash":"a41f2877ed415db3f5960bc97b14e81ce7a250e4","modified":1568783798747},{"_id":"public/archives/2019/05/index.html","hash":"da1af26efa413502a0cc9c8f3191b5907c4658d2","modified":1568783798750},{"_id":"public/archives/2019/06/index.html","hash":"00b12970bb885d7b86d36224551ccdfe305f6194","modified":1568783798751},{"_id":"public/archives/2019/08/index.html","hash":"954814cf03978fa18344a62bd78dc4ac50729212","modified":1568783798751},{"_id":"public/archives/2019/09/index.html","hash":"a75e32232e10f3644b0eb1865c58d433c9e5e537","modified":1568783798751},{"_id":"public/categories/数据库/index.html","hash":"f9de66935055bcf850f90491c0473da0c1df28de","modified":1568783798750},{"_id":"public/categories/前端建设/index.html","hash":"b36c8ce9549874f174321c05d2262740b1ebb29e","modified":1568783798750},{"_id":"public/categories/AI/index.html","hash":"507632399a76d72783ec745d87c1dcbfa329e51c","modified":1568783798751},{"_id":"public/categories/学习旅程/index.html","hash":"1cf0548beae3d1838bfd471840a39a801950357c","modified":1568783798751},{"_id":"public/index.html","hash":"db198c50893cbed281d09c55b4d98ebb9d8cf83c","modified":1568783798750},{"_id":"public/tags/MySQL/index.html","hash":"caefe42df72412eb267d42beade2b6b8fc80cc46","modified":1568783798751},{"_id":"public/tags/windows命令/index.html","hash":"3cdc86622f4b0f252e090ab8c1c1f78676ca3a5d","modified":1568783798751},{"_id":"public/tags/Python/index.html","hash":"7e23718666a592fa81aa8a53148601d43202f0fa","modified":1568783798752},{"_id":"public/tags/博客建设/index.html","hash":"d76e02800980770ea836a76b9f69ad7f7396d24e","modified":1568783798751},{"_id":"public/tags/Hexo-NexT/index.html","hash":"5ac953ef4b5bccf3dd1da69ec604d4421e229d21","modified":1568783798752},{"_id":"public/tags/神经网络/index.html","hash":"aa78b59752c9cdcabc5a369da490165035e347a5","modified":1568783798752},{"_id":"public/tags/编程学习/index.html","hash":"003e801be5501ab0b4b77c2b355fe86cc25854e7","modified":1568783798751},{"_id":"public/tags/编程学习-神经网络-机器学习/index.html","hash":"0a2dee92241d3fd4ba9bb6e51515b47bbcfe2ef2","modified":1568783798751},{"_id":"public/tags/编程学习-数据结构/index.html","hash":"d40e32232abab7ba5015a3190b967cea9ae1bd5c","modified":1568783798751},{"_id":"public/categories/Python/index.html","hash":"adadd0ad4eadce70844877b8a9d6df98a21b7ca2","modified":1568783798751},{"_id":"public/live2dw/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1568729074763},{"_id":"public/live2dw/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1568729074763},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1568729074763},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"77b9cffc61987bd179b7ba289eb1e5296d8ef345","modified":1568729074763},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1568729074964},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"94121cfcd4d0911a8314ab98efa7440dbabafe37","modified":1568729075072},{"_id":"public/live2dw/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1568729075155},{"_id":"public/live2dw/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1568729075147},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1568729075538},{"_id":"public/images/background.png","hash":"b4730e711603403f89c7ad699ee6479f09bd9764","modified":1568647248428},{"_id":"public/CNAME","hash":"440ddcd92585f97aa09ec6414ee6c46599ff9ea3","modified":1568729074231},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1568729074231},{"_id":"public/images/avatar.jpg","hash":"dd5cd39c5e4b4288d21bc827d235ad0620e44ad8","modified":1568729074231},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1568729074231},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1568729074231},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1568729074231},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1568729074231},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1568729074231},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1568729074231},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1568729074231},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1568729074231},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1568729074231},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1568729074231},{"_id":"public/images/apple_touch_icon.png","hash":"1ea01e0d3dcbed2b47e43f8b426777bf948b5d79","modified":1568729074231},{"_id":"public/images/medium.ico","hash":"4cbca054b8c9e6af168d133b60335d8c321b444e","modified":1568729074231},{"_id":"public/images/character_information_sql.png","hash":"c88786622b5b88cfdc6200e86abcd16e6e51f632","modified":1568729074231},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1568729074231},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1568729074231},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1568729074231},{"_id":"public/repositories/character_information.sql","hash":"61db353eb93200991e5bbff925d980ec205469cb","modified":1568729074231},{"_id":"public/images/small.png","hash":"723cb914f617b4d6b2aad8198441379be7fa2aaa","modified":1568729074231},{"_id":"public/ssr/ssr","hash":"711ca68027b3e8f4c1b1aad91f1fc9822bf49587","modified":1568729074231},{"_id":"public/images/天翼验证码训练集图片.png","hash":"b12dc1b92b3fe2a460806229ba7f3fa995315e9f","modified":1568729074231},{"_id":"public/images/路由器/微信.jpg","hash":"91181e38c59124468a979bd97c6c2750ade91f24","modified":1568729074231},{"_id":"public/repositories/t7s_character_info_get.py","hash":"e478531d154113d46c170a033af3944674cb6a7f","modified":1568729074231},{"_id":"public/images/路由器/路由器1.jpg","hash":"979e59c4c66a3caf59d71dc4299b01c9438fa20e","modified":1568729074231},{"_id":"public/images/路由器/路由器2.jpg","hash":"788c08806b7ac612d42943ee1e1fd6370e54cffe","modified":1568729074232},{"_id":"public/images/数据的逻辑结构.png","hash":"4cb0fba6d03d0da73a0ee42daff490f6f1452083","modified":1568729074231},{"_id":"public/images/路由器/路由器3.jpg","hash":"f6f00267e4584c48184841142b93d791aee18039","modified":1568729074232},{"_id":"public/images/路由器/路由器4.jpg","hash":"feade1f68c7e08eb2600a7ce261842f1f7e6cae8","modified":1568729074232},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1568729074232},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1568729074232},{"_id":"public/images/表情包/像素瘫倒.jpg","hash":"354ad9daf9f62c970fb59604270be7e6e85308ba","modified":1568729074232},{"_id":"public/images/表情包/别打了.jpg","hash":"3a568a5f02ffa9b7876cc07e18f43147b07ad0aa","modified":1568729074232},{"_id":"public/images/路由器/十三微信.jpg","hash":"0a7c3fbb07fadc60ee7116ae83a20ef73225fc5d","modified":1568729074232},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1568729074232},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1568729074232},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1568729074232},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1568729074645},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1568729074761},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1568729074749},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1568729074762},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1568729074762},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1568729074762},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1568729074762},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1568729074762},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1568729074763},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1568729074763},{"_id":"public/repositories/machine learning/反向传播算法.zip","hash":"b82a8f0f57c87d7cba33fbda821180aa4bb6413a","modified":1568729074762},{"_id":"public/images/路由器/路由器微信.jpg","hash":"80560e5c900026b5b6f7da8197c7360d9a3a811d","modified":1568729074964},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1568729074964},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1568729074964},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1568729074911},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1568729074961},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1568729074962},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1568729074962},{"_id":"public/js/src/affix.js","hash":"8973d53bac3a0455bb41219a2192aee9439eb674","modified":1568729074963},{"_id":"public/js/src/algolia-search.js","hash":"2515ad3ec04c27dc4f51985106592f407f733f28","modified":1568729074963},{"_id":"public/js/src/exturl.js","hash":"3561d8c8fcf2bb033a67ce7395deef75ec851727","modified":1568729074963},{"_id":"public/js/src/bootstrap.js","hash":"5374af42e5d6f3c582369718207cef41e200a178","modified":1568729074963},{"_id":"public/js/src/hook-duoshuo.js","hash":"d807a9ee7d1f15deb179fc9f7ad0780a7904d4a3","modified":1568729074963},{"_id":"public/js/src/js.cookie.js","hash":"90ef51bac2635caf9beb8f925149614e6561df17","modified":1568729074963},{"_id":"public/js/src/scroll-cookie.js","hash":"102d7751446d43c25605dad3673468175474fec3","modified":1568729074963},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1568729074963},{"_id":"public/js/src/post-details.js","hash":"fab869492aa403a3488121e07c50d6960f884c1f","modified":1568729074963},{"_id":"public/js/src/scrollspy.js","hash":"9d6aa4675983a11353c631d17c11111c495d410a","modified":1568729074963},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1568729074963},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"0840a3851681eecee80d5d51c001ebd3247aa9e3","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1568729074963},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1568729074963},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"76aabb62a16adaf37affa06efaf12be463caaa32","modified":1568729074964},{"_id":"public/js/src/schemes/pisces.js","hash":"5a662803ca1b71c098ef47edf195d768534c6a68","modified":1568729074964},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1568729075071},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"8095d3edf9c6874f98beced795a3a6c80136e968","modified":1568729075071},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"154ab16ee10f20eef35bca871bb0961fbf44d0fe","modified":1568729075071},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"f463477a1237d73efa76250701f182be73c4d1a6","modified":1568729075071},{"_id":"public/了解更多.html","hash":"be75c26c64818ee54eb06567036502d4b7a2611d","modified":1568729074964},{"_id":"public/404.html","hash":"f835af20038f4b539ab303fda8ca84356145dde4","modified":1568729074964},{"_id":"public/路由器配置.html","hash":"d07fa2434e4b98093d9a74a7d06301cf8b2b3084","modified":1568729074964},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"034a5a91a2c321faa45883c918cbe939a5a988a4","modified":1568729074964},{"_id":"public/lib/jquery_lazyload/README.html","hash":"cab7ca8724dcc7b0fef6c8a3aca6a35ae09f491c","modified":1568729074964},{"_id":"public/lib/fastclick/README.html","hash":"947b02e4281a7dcf3e8fe82a8a33c9aa965cc310","modified":1568729074964},{"_id":"public/404/404壁纸.jpg","hash":"810a2868b287fde4918c502054bcf1b51ae8231b","modified":1568729074964},{"_id":"public/images/路由器/路由器壁纸.jpg","hash":"810a2868b287fde4918c502054bcf1b51ae8231b","modified":1568729075081},{"_id":"public/repositories/machine learning/梯度下降算法.zip","hash":"68a05deac0ee58bd16e4efd2d89a1095c157c8f3","modified":1568729075081},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1568729075071},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1568729075072},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1568729075081},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568729074998},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"198856d1000b536d13136e9c878c37f2e2acee46","modified":1568729075080},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"f07293b2a12af1c2cc9901239a746bb8cf418dc8","modified":1568729075080},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"38acc0a5e94ae5b1338300de3b6d342f62a6c87a","modified":1568729075080},{"_id":"public/js/src/motion.js","hash":"63aa369356eb468692e410b09acf425c97aba651","modified":1568729075070},{"_id":"public/js/src/utils.js","hash":"5cca3b877d8d020300f6d09dedde658baffcf7b8","modified":1568729075070},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"3fd43f271c28d95080a4eaeb05d7c572bb47c995","modified":1568729075071},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1568729075071},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1568729075071},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1568729075071},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1568729075081},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"2197459b9f165a666c015a320c7d7d9e2b6bda36","modified":1568729075081},{"_id":"public/css/main.css","hash":"1acd29db564b1d15958323ea4ef8fb2b1400b880","modified":1568729075071},{"_id":"public/404/ApacheCN的github.png","hash":"f2f1914a1bd876c8ec13735c7f8e9e6e1aeadd5c","modified":1568729075071},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9c32d4596898d3d89052eb2a097b7a2a3eb57941","modified":1568729075081},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1568729075084},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"08f2d8cbfa3f7de5b60c6a5d737a4cf74952f2c5","modified":1568729075155},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1568729075155},{"_id":"public/lib/velocity/velocity.ui.js","hash":"d7d6c8d326de6f1b5b91bc7b2ddef658725738da","modified":1568729075154},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1568729075155},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1568729075155},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1568729075155},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1568729075155},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1568729075155},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"2838d625166468b68c26d75980b7e3eb546133d3","modified":1568729075303},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1568729075303},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1568729075537},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"fe2ab2b0559b55393a3eb40d121eaf8d62322fab","modified":1568729075303},{"_id":"public/repositories/t7s_character_information.json","hash":"76931997a0c3656c9db48c541ca456c8eb40a5ba","modified":1568729075303},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"17060f802e629332d840981d17bef3586723c43b","modified":1568729075422},{"_id":"public/lib/Han/dist/han.css","hash":"6ead3921e76de75533a5385ffe01d42976b648af","modified":1568729075423},{"_id":"public/repositories/machine learning/支持向量机(SVM)和sorfmax分类.zip","hash":"03609935faa28b3a267681bb613e7d11ab3b3651","modified":1568729075423},{"_id":"public/lib/Han/dist/han.js","hash":"428c116d74ffa0ec694f160ccb1bae1a6f4bb435","modified":1568729075740},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1568729075577},{"_id":"public/404/myblog.png","hash":"5d1f2a05c445bb5edd3ed45251cf46842903c8bc","modified":1568729075861},{"_id":"public/repositories/machine learning/图像分类算法讲解和KNN网络实现.zip","hash":"ec58a401b0804ce77f63852dfb332143f77ef4db","modified":1568729075871},{"_id":"public/lib/velocity/velocity.js","hash":"216c6aea0a912c236744f5d59cdad07f5a05857b","modified":1568729075995},{"_id":"public/repositories/machine learning/卷积神经网络原理以及实现.zip","hash":"b2e876e1ecba41ab8093feedf88da51650c4fe02","modified":1568729075897},{"_id":"public/repositories/machine learning/建立神经网络模型.zip","hash":"1210d1b26f79f350eae34912e0963321ef0ee6f9","modified":1568729075999},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1568729076007},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1568729076128},{"_id":"public/repositories/machine learning/machine learning.7z","hash":"5b082d39c7f11c8745986a534dbc6dbe07c8adb8","modified":1568729076192},{"_id":"source/_posts/城院网络断开原因分析.md","hash":"828a46a45a177b8d42a87659b89761329a7cd136","modified":1568783782756},{"_id":"themes/next/source/images/路由器/网络图1.png","hash":"6c3dcaaf37afe3dda3c4525a38105eadd17465ff","modified":1568725234993},{"_id":"themes/next/source/images/路由器/网络图2.png","hash":"42ced0c78326ac85e0c4a63e14c1745b7f51d563","modified":1568725593311},{"_id":"themes/next/source/images/路由器/网络图3.png","hash":"9eb3ab3f06a5c9db755b97686e47925ea32fe14c","modified":1568726005016},{"_id":"themes/next/source/images/路由器/网络断开.png","hash":"86f0bb4f9c82ac9c07d1cdaced520f68a0283f1d","modified":1568722899405},{"_id":"public/2019/09/17/城院网络断开原因分析/index.html","hash":"8e62c98d9399024c5101182cb3745e2617a7a078","modified":1568783798743},{"_id":"public/categories/其它文章/index.html","hash":"75123f9a7801e7dcd604883fca4697b11b041f19","modified":1568783798751},{"_id":"public/tags/东莞理工学院城市学院/index.html","hash":"ae81ee6e0ae019771be7cb56469e0e1061200c9e","modified":1568783798751},{"_id":"public/images/路由器/网络断开.png","hash":"86f0bb4f9c82ac9c07d1cdaced520f68a0283f1d","modified":1568729074763},{"_id":"public/images/路由器/网络图1.png","hash":"6c3dcaaf37afe3dda3c4525a38105eadd17465ff","modified":1568729074763},{"_id":"public/images/路由器/网络图3.png","hash":"9eb3ab3f06a5c9db755b97686e47925ea32fe14c","modified":1568729074763},{"_id":"public/images/路由器/网络图2.png","hash":"42ced0c78326ac85e0c4a63e14c1745b7f51d563","modified":1568729074763},{"_id":"themes/next/source/images/background.jpg","hash":"cd9424934cc91c6d57b8b428a324da93eb8ea760","modified":1568728821770},{"_id":"public/images/background.jpg","hash":"cd9424934cc91c6d57b8b428a324da93eb8ea760","modified":1568729074964}],"Category":[{"name":"数据库","_id":"ck0l54ifl000600vvs8g31rnd"},{"name":"前端建设","_id":"ck0l54ify000b00vvhsmkzb05"},{"name":"AI","_id":"ck0l54ifz000e00vvj8g8ajil"},{"name":"学习旅程","_id":"ck0l54iji000u00vv8ozixls9"},{"name":"-学习旅程","_id":"ck0l54im3001000vvl22pzeo8"},{"name":"Python","_id":"ck0l5dfwr001a00vvjpefd78v"},{"name":"其它文章","_id":"ck0nvw0ni000190vvg8afy3dj"}],"Data":[],"Page":[{"title":"关于","date":"2019-03-29T11:08:21.000Z","_content":"\n\n### 个人介绍\n **目前正在学习人工智能相关的知识。**\n **学习过程难免会遇到各种各样问题，我会在这里记录自己的的学习成果，分享一些学到的知识，发一些相关问题的解决方式，希望可以帮到大家。**\n **喜欢听歌的可以去我的网易云看看T7S各小组合的歌单**\n **有问题或者建议欢迎在评论区留言或者联系我**","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-03-29 19:08:21\n---\n\n\n### 个人介绍\n **目前正在学习人工智能相关的知识。**\n **学习过程难免会遇到各种各样问题，我会在这里记录自己的的学习成果，分享一些学到的知识，发一些相关问题的解决方式，希望可以帮到大家。**\n **喜欢听歌的可以去我的网易云看看T7S各小组合的歌单**\n **有问题或者建议欢迎在评论区留言或者联系我**","updated":"2019-09-15T06:36:09.678Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck0l54if9000100vvq40bzku8","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><h3 id=\"个人介绍\"><a href=\"#个人介绍\" class=\"headerlink\" title=\"个人介绍\"></a>个人介绍</h3><p><strong>目前正在学习人工智能相关的知识。</strong><br><strong>学习过程难免会遇到各种各样问题，我会在这里记录自己的的学习成果，分享一些学到的知识，发一些相关问题的解决方式，希望可以帮到大家。</strong><br><strong>喜欢听歌的可以去我的网易云看看T7S各小组合的歌单</strong><br><strong>有问题或者建议欢迎在评论区留言或者联系我</strong></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><h3 id=\"个人介绍\"><a href=\"#个人介绍\" class=\"headerlink\" title=\"个人介绍\"></a>个人介绍</h3><p><strong>目前正在学习人工智能相关的知识。</strong><br><strong>学习过程难免会遇到各种各样问题，我会在这里记录自己的的学习成果，分享一些学到的知识，发一些相关问题的解决方式，希望可以帮到大家。</strong><br><strong>喜欢听歌的可以去我的网易云看看T7S各小组合的歌单</strong><br><strong>有问题或者建议欢迎在评论区留言或者联系我</strong></p><!-- rebuild by neat -->"},{"title":"分类","date":"2019-03-28T16:00:00.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-03-29 \ntype: \"categories\"\n---\n","updated":"2019-09-15T06:36:09.682Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck0l54ifc000300vvo2y191bg","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->"},{"title":"标签","date":"2019-03-28T16:00:00.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-03-29\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-09-15T06:36:09.687Z","path":"tags/index.html","layout":"page","_id":"ck0l54iff000500vvfeybxhun","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->"}],"Post":[{"title":"Welcome","top":1,"_content":"\n**欢迎来到ARUKI' BLOG,你可以在这里寻找对您有帮助的文章。**\n**目前博客仍在建设中，如果对本博客有任何意见，欢迎联系我并提出您的问题！！**\n\n**Welcome to my blog! You can find articles that useful for you.**\n**At present, the blog is still under construction, if you have any comments on this blog, please contact me and raise your questions!!**\n\n**ようこそ　ARUKI' BLOG、ここで君の役に立つ文章を探すことができます。**\n**现在、ブログ建设中ですが、もしこのブログに何か意见があれば、私を连络して问题を提出してくだいさい! !**\n","source":"_posts/Welcome.md","raw":"---\ntitle: Welcome\ntop: 1\n---\n\n**欢迎来到ARUKI' BLOG,你可以在这里寻找对您有帮助的文章。**\n**目前博客仍在建设中，如果对本博客有任何意见，欢迎联系我并提出您的问题！！**\n\n**Welcome to my blog! You can find articles that useful for you.**\n**At present, the blog is still under construction, if you have any comments on this blog, please contact me and raise your questions!!**\n\n**ようこそ　ARUKI' BLOG、ここで君の役に立つ文章を探すことができます。**\n**现在、ブログ建设中ですが、もしこのブログに何か意见があれば、私を连络して问题を提出してくだいさい! !**\n","slug":"Welcome","published":1,"date":"2019-09-15T06:36:09.644Z","updated":"2019-09-15T09:19:16.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0l54if3000000vvg8cem328","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><p><strong>欢迎来到ARUKI’ BLOG,你可以在这里寻找对您有帮助的文章。</strong><br><strong>目前博客仍在建设中，如果对本博客有任何意见，欢迎联系我并提出您的问题！！</strong></p><p><strong>Welcome to my blog! You can find articles that useful for you.</strong><br><strong>At present, the blog is still under construction, if you have any comments on this blog, please contact me and raise your questions!!</strong></p><p><strong>ようこそ　ARUKI’ BLOG、ここで君の役に立つ文章を探すことができます。</strong><br><strong>现在、ブログ建设中ですが、もしこのブログに何か意见があれば、私を连络して问题を提出してくだいさい! !</strong></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><p><strong>欢迎来到ARUKI’ BLOG,你可以在这里寻找对您有帮助的文章。</strong><br><strong>目前博客仍在建设中，如果对本博客有任何意见，欢迎联系我并提出您的问题！！</strong></p><p><strong>Welcome to my blog! You can find articles that useful for you.</strong><br><strong>At present, the blog is still under construction, if you have any comments on this blog, please contact me and raise your questions!!</strong></p><p><strong>ようこそ　ARUKI’ BLOG、ここで君の役に立つ文章を探すことができます。</strong><br><strong>现在、ブログ建设中ですが、もしこのブログに何か意见があれば、私を连络して问题を提出してくだいさい! !</strong></p><!-- rebuild by neat -->"},{"title":"MySQL安装到登陆的问题","date":"2019-04-07T16:00:00.000Z","top":9809592,"_content":"{% note warning %} \n**经过一晚上的折腾，我终于登陆进数据库了！！这期间遇到了不少问题，虽然网上有很多解决方案，但要找到适用的真的不容易，每个问题都花了很长时间去尝试那些指令，绕了很多弯路才解决。**\n{% endnote %}\n\n### 端口冲突\n**安装完遇到的第一个问题就是，没办法打开mysql服务，删了安装目录下的date文件夹重新用`mysqld --initialize`初始化，重新配置my.ini文件都没用。**\n**之后用`mysqld --console`查了错误信息发现了端口被占用了：**\n>**[ERROR] Can't start server: Bind on TCP/IP port: Address already in use**\n>**[ERROR] Do you already have another mysqld server running on port: 3306 ?**\n\n**因为我这边的命令行无法识别`netstat -nltp|grep mysql`，到后面才用`netstat  -aon|findstr 3306`查到了占用3306端口的进程，记住了进程后面的PID号，用`taskkil /f /pid 对应的PID号`把进程给杀了才解决问题**\n\n### 无法登陆\n**耗了一些时间后，我用`net start mysql`开启了数据库后，用`mysql -uroot -密码`尝试登陆，结果又报了一个这样的错误**\n>**mysql: [ERROR] mysql: unknown option '-R'.**\n\n**于是用`mysql -uroot -p`后再输入密码,才知道原先输入密码前也要加个p，也就是`mysql -uroot -p密码`。**\n**但是接下来又报了一个错误**\n>**mysql: [Warning] Using a password on the command line interface can be insecure.**\n>**ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)**\n\n**查了一下发现是密码错误，因为我输入的是安装时的密码，但是初始化的时候密码重置了，所以密码错了，所以我又绕了一次弯路，把date删了重新初始化了一遍，把初始化输出的临时密码记了下来**\n>**[Note] A temporary password is generated for root@localhost: TKk51x#bOi0S**\n**之后就可以成功登陆了**\n\n### 修改密码\n**登陆后没办法使用其他语句，说是必须修改一下密码，而且自动生成的密码太难记了，我想改回自己的密码，但是在网上查了很多指令都用不成功，错误提示的ALTER USER语句也不知道怎么用，所以又上网馊了一下，还看了一下官方文档，总结就是看不懂【**\n**查到最后终于发现了一个可以用的语句**\n>`alter user 'root'@'localhost' identified by 'password';`\n\n**这下问题终于解决了，可以开始进一步学习了。**\n\n{% note info %} \n**虽然遇到了很多问题，但是也知道了很多MySQL和命令行的语句，有些没派上用场就是了，至少折腾了一夜一些有用的语句都变熟悉了。**\n{% endnote %}","source":"_posts/MySQL安装到登陆的问题.md","raw":"---\ntitle: MySQL安装到登陆的问题\ndate: 2019-4-8\ntags: \n    - MySQL\n    - windows命令\ncategories: 数据库\ntop: 9809592\n---\n{% note warning %} \n**经过一晚上的折腾，我终于登陆进数据库了！！这期间遇到了不少问题，虽然网上有很多解决方案，但要找到适用的真的不容易，每个问题都花了很长时间去尝试那些指令，绕了很多弯路才解决。**\n{% endnote %}\n\n### 端口冲突\n**安装完遇到的第一个问题就是，没办法打开mysql服务，删了安装目录下的date文件夹重新用`mysqld --initialize`初始化，重新配置my.ini文件都没用。**\n**之后用`mysqld --console`查了错误信息发现了端口被占用了：**\n>**[ERROR] Can't start server: Bind on TCP/IP port: Address already in use**\n>**[ERROR] Do you already have another mysqld server running on port: 3306 ?**\n\n**因为我这边的命令行无法识别`netstat -nltp|grep mysql`，到后面才用`netstat  -aon|findstr 3306`查到了占用3306端口的进程，记住了进程后面的PID号，用`taskkil /f /pid 对应的PID号`把进程给杀了才解决问题**\n\n### 无法登陆\n**耗了一些时间后，我用`net start mysql`开启了数据库后，用`mysql -uroot -密码`尝试登陆，结果又报了一个这样的错误**\n>**mysql: [ERROR] mysql: unknown option '-R'.**\n\n**于是用`mysql -uroot -p`后再输入密码,才知道原先输入密码前也要加个p，也就是`mysql -uroot -p密码`。**\n**但是接下来又报了一个错误**\n>**mysql: [Warning] Using a password on the command line interface can be insecure.**\n>**ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)**\n\n**查了一下发现是密码错误，因为我输入的是安装时的密码，但是初始化的时候密码重置了，所以密码错了，所以我又绕了一次弯路，把date删了重新初始化了一遍，把初始化输出的临时密码记了下来**\n>**[Note] A temporary password is generated for root@localhost: TKk51x#bOi0S**\n**之后就可以成功登陆了**\n\n### 修改密码\n**登陆后没办法使用其他语句，说是必须修改一下密码，而且自动生成的密码太难记了，我想改回自己的密码，但是在网上查了很多指令都用不成功，错误提示的ALTER USER语句也不知道怎么用，所以又上网馊了一下，还看了一下官方文档，总结就是看不懂【**\n**查到最后终于发现了一个可以用的语句**\n>`alter user 'root'@'localhost' identified by 'password';`\n\n**这下问题终于解决了，可以开始进一步学习了。**\n\n{% note info %} \n**虽然遇到了很多问题，但是也知道了很多MySQL和命令行的语句，有些没派上用场就是了，至少折腾了一夜一些有用的语句都变熟悉了。**\n{% endnote %}","slug":"MySQL安装到登陆的问题","published":1,"updated":"2019-09-15T06:36:09.640Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0l54ifa000200vvzgkpexmt","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><div class=\"note warning\"><p><strong>经过一晚上的折腾，我终于登陆进数据库了！！这期间遇到了不少问题，虽然网上有很多解决方案，但要找到适用的真的不容易，每个问题都花了很长时间去尝试那些指令，绕了很多弯路才解决。</strong></p></div><h3 id=\"端口冲突\"><a href=\"#端口冲突\" class=\"headerlink\" title=\"端口冲突\"></a>端口冲突</h3><p><strong>安装完遇到的第一个问题就是，没办法打开mysql服务，删了安装目录下的date文件夹重新用<code>mysqld --initialize</code>初始化，重新配置my.ini文件都没用。</strong><br><strong>之后用<code>mysqld --console</code>查了错误信息发现了端口被占用了：</strong></p><blockquote><p><strong>[ERROR] Can’t start server: Bind on TCP/IP port: Address already in use</strong><br><strong>[ERROR] Do you already have another mysqld server running on port: 3306 ?</strong></p></blockquote><p><strong>因为我这边的命令行无法识别<code>netstat -nltp|grep mysql</code>，到后面才用<code>netstat -aon|findstr 3306</code>查到了占用3306端口的进程，记住了进程后面的PID号，用<code>taskkil /f /pid 对应的PID号</code>把进程给杀了才解决问题</strong></p><h3 id=\"无法登陆\"><a href=\"#无法登陆\" class=\"headerlink\" title=\"无法登陆\"></a>无法登陆</h3><p><strong>耗了一些时间后，我用<code>net start mysql</code>开启了数据库后，用<code>mysql -uroot -密码</code>尝试登陆，结果又报了一个这样的错误</strong></p><blockquote><p><strong>mysql: [ERROR] mysql: unknown option ‘-R’.</strong></p></blockquote><p><strong>于是用<code>mysql -uroot -p</code>后再输入密码,才知道原先输入密码前也要加个p，也就是<code>mysql -uroot -p密码</code>。</strong><br><strong>但是接下来又报了一个错误</strong></p><blockquote><p><strong>mysql: [Warning] Using a password on the command line interface can be insecure.</strong><br><strong>ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: YES)</strong></p></blockquote><p><strong>查了一下发现是密码错误，因为我输入的是安装时的密码，但是初始化的时候密码重置了，所以密码错了，所以我又绕了一次弯路，把date删了重新初始化了一遍，把初始化输出的临时密码记了下来</strong></p><blockquote><p><strong>[Note] A temporary password is generated for root@localhost: TKk51x#bOi0S</strong><br><strong>之后就可以成功登陆了</strong></p></blockquote><h3 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h3><p><strong>登陆后没办法使用其他语句，说是必须修改一下密码，而且自动生成的密码太难记了，我想改回自己的密码，但是在网上查了很多指令都用不成功，错误提示的ALTER USER语句也不知道怎么用，所以又上网馊了一下，还看了一下官方文档，总结就是看不懂【</strong><br><strong>查到最后终于发现了一个可以用的语句</strong></p><blockquote><p><code>alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;password&#39;;</code></p></blockquote><p><strong>这下问题终于解决了，可以开始进一步学习了。</strong></p><div class=\"note info\"><p><strong>虽然遇到了很多问题，但是也知道了很多MySQL和命令行的语句，有些没派上用场就是了，至少折腾了一夜一些有用的语句都变熟悉了。</strong></p></div><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><div class=\"note warning\"><p><strong>经过一晚上的折腾，我终于登陆进数据库了！！这期间遇到了不少问题，虽然网上有很多解决方案，但要找到适用的真的不容易，每个问题都花了很长时间去尝试那些指令，绕了很多弯路才解决。</strong></p></div><h3 id=\"端口冲突\"><a href=\"#端口冲突\" class=\"headerlink\" title=\"端口冲突\"></a>端口冲突</h3><p><strong>安装完遇到的第一个问题就是，没办法打开mysql服务，删了安装目录下的date文件夹重新用<code>mysqld --initialize</code>初始化，重新配置my.ini文件都没用。</strong><br><strong>之后用<code>mysqld --console</code>查了错误信息发现了端口被占用了：</strong></p><blockquote><p><strong>[ERROR] Can’t start server: Bind on TCP/IP port: Address already in use</strong><br><strong>[ERROR] Do you already have another mysqld server running on port: 3306 ?</strong></p></blockquote><p><strong>因为我这边的命令行无法识别<code>netstat -nltp|grep mysql</code>，到后面才用<code>netstat -aon|findstr 3306</code>查到了占用3306端口的进程，记住了进程后面的PID号，用<code>taskkil /f /pid 对应的PID号</code>把进程给杀了才解决问题</strong></p><h3 id=\"无法登陆\"><a href=\"#无法登陆\" class=\"headerlink\" title=\"无法登陆\"></a>无法登陆</h3><p><strong>耗了一些时间后，我用<code>net start mysql</code>开启了数据库后，用<code>mysql -uroot -密码</code>尝试登陆，结果又报了一个这样的错误</strong></p><blockquote><p><strong>mysql: [ERROR] mysql: unknown option ‘-R’.</strong></p></blockquote><p><strong>于是用<code>mysql -uroot -p</code>后再输入密码,才知道原先输入密码前也要加个p，也就是<code>mysql -uroot -p密码</code>。</strong><br><strong>但是接下来又报了一个错误</strong></p><blockquote><p><strong>mysql: [Warning] Using a password on the command line interface can be insecure.</strong><br><strong>ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: YES)</strong></p></blockquote><p><strong>查了一下发现是密码错误，因为我输入的是安装时的密码，但是初始化的时候密码重置了，所以密码错了，所以我又绕了一次弯路，把date删了重新初始化了一遍，把初始化输出的临时密码记了下来</strong></p><blockquote><p><strong>[Note] A temporary password is generated for root@localhost: TKk51x#bOi0S</strong><br><strong>之后就可以成功登陆了</strong></p></blockquote><h3 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h3><p><strong>登陆后没办法使用其他语句，说是必须修改一下密码，而且自动生成的密码太难记了，我想改回自己的密码，但是在网上查了很多指令都用不成功，错误提示的ALTER USER语句也不知道怎么用，所以又上网馊了一下，还看了一下官方文档，总结就是看不懂【</strong><br><strong>查到最后终于发现了一个可以用的语句</strong></p><blockquote><p><code>alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;password&#39;;</code></p></blockquote><p><strong>这下问题终于解决了，可以开始进一步学习了。</strong></p><div class=\"note info\"><p><strong>虽然遇到了很多问题，但是也知道了很多MySQL和命令行的语句，有些没派上用场就是了，至少折腾了一夜一些有用的语句都变熟悉了。</strong></p></div><!-- rebuild by neat -->"},{"title":"Python程序打包成exe可执行文件","date":"2019-06-01T16:00:00.000Z","top":9809398,"_content":"\n### 本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\n\n### **实现步骤：**\n\n**首先要安装Pyinstaller包，在命令行窗口使用pip指令就可以完成：**\n`pip install pyinstaller`\n**安装成功后就可以进行打包了**\n**首先在命令行进入要打包的python程序的目录下面**\n**接着使用**   `pyinstaller file.py`   **就可以打包了(file.py是指你要打包的python文件)**\n**这个指令也可以附带其他属性：**\n{% note info %} \n**-F  表示生成单个可执行文件**\n\n**-D  创建一个目录，包含exe文件和依赖很多文件（默认选项）**\n\n**-w  表示去掉控制台窗口，这样执行exe文件的时候不会出现窗口，但会在后台运行，用命令行还是可以看见执行情况的**\n\n**-c  使用控制台，无界面(默认)；**\n\n**-p  表示你自己自定义需要加载的类路径**\n\n**-i  表示可执行文件的图标。**\n{% endnote %}\n**例如我要生成一个带图标的exe文件，没有其他依赖文件的，那么就是使用指令：**\n`pyinstaller -F -i image.ico file.py`   **（image.ico表示图标的路径，file.py表示要打包的python文件）**\n**打包后会生成dict文件夹和buid文件夹还有一个.spec文件，其中dict就是放置我们要的exe文件的文件夹，其他两个是生成exe文件的过程中的中间产物，可以删掉。**\n**pyinstaller打包的时候会自动把其他依赖的包和其他python文件引入，所以不用担心调用的问题。**\n**但是其他要使用到的文件并不会被添加进去，例如要使用的图片或者文档，所以要自己把文件添加到打包完的exe文件的目录下面相应的路径，否则会出现闪退或者文件执行失败。**\n**另外就是，如果py文件的编码是utf8，但是文件里面又有中文的话，那么使用windows的命令行打包会出现编码错误。**\n**解决的方法就是先使用chcp指令进入其他编码的命令行**\n{% note info %} \n**以下是几种常用的编码:**\n**GBK(一般情况下为默认编码) 936**\n**美国英语 437**\n**utf-8 65001**\n{% endnote %}\n**在这里我们要使用utf-8的编码，所以使用命令:**\n`chcp 65001`\n**设置编码后再进行打包就不会出现编码错误的情况了**\n\n**最后就是，第一次打包出来的程序经常会出现各种问题，建议在命令行执行exe文件，这样可以看到报错的内容，以便结合情况解决问题。**","source":"_posts/python程序打包成exe文件.md","raw":"---\ntitle: Python程序打包成exe可执行文件\ndate: 2019-6-2\ntags: Python\ncategories: Python\ntop: 9809398\n---\n\n### 本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\n\n### **实现步骤：**\n\n**首先要安装Pyinstaller包，在命令行窗口使用pip指令就可以完成：**\n`pip install pyinstaller`\n**安装成功后就可以进行打包了**\n**首先在命令行进入要打包的python程序的目录下面**\n**接着使用**   `pyinstaller file.py`   **就可以打包了(file.py是指你要打包的python文件)**\n**这个指令也可以附带其他属性：**\n{% note info %} \n**-F  表示生成单个可执行文件**\n\n**-D  创建一个目录，包含exe文件和依赖很多文件（默认选项）**\n\n**-w  表示去掉控制台窗口，这样执行exe文件的时候不会出现窗口，但会在后台运行，用命令行还是可以看见执行情况的**\n\n**-c  使用控制台，无界面(默认)；**\n\n**-p  表示你自己自定义需要加载的类路径**\n\n**-i  表示可执行文件的图标。**\n{% endnote %}\n**例如我要生成一个带图标的exe文件，没有其他依赖文件的，那么就是使用指令：**\n`pyinstaller -F -i image.ico file.py`   **（image.ico表示图标的路径，file.py表示要打包的python文件）**\n**打包后会生成dict文件夹和buid文件夹还有一个.spec文件，其中dict就是放置我们要的exe文件的文件夹，其他两个是生成exe文件的过程中的中间产物，可以删掉。**\n**pyinstaller打包的时候会自动把其他依赖的包和其他python文件引入，所以不用担心调用的问题。**\n**但是其他要使用到的文件并不会被添加进去，例如要使用的图片或者文档，所以要自己把文件添加到打包完的exe文件的目录下面相应的路径，否则会出现闪退或者文件执行失败。**\n**另外就是，如果py文件的编码是utf8，但是文件里面又有中文的话，那么使用windows的命令行打包会出现编码错误。**\n**解决的方法就是先使用chcp指令进入其他编码的命令行**\n{% note info %} \n**以下是几种常用的编码:**\n**GBK(一般情况下为默认编码) 936**\n**美国英语 437**\n**utf-8 65001**\n{% endnote %}\n**在这里我们要使用utf-8的编码，所以使用命令:**\n`chcp 65001`\n**设置编码后再进行打包就不会出现编码错误的情况了**\n\n**最后就是，第一次打包出来的程序经常会出现各种问题，建议在命令行执行exe文件，这样可以看到报错的内容，以便结合情况解决问题。**","slug":"python程序打包成exe文件","published":1,"updated":"2019-09-15T15:41:36.838Z","_id":"ck0l54ife000400vvi48h0b57","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- build time:Sun Sep 15 2019 23:42:01 GMT+0800 (GMT+08:00) --><h3 id=\"本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\"><a href=\"#本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\" class=\"headerlink\" title=\"本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\"></a>本教程是使用Pyinstaller来将Python程序打包成exe可执行文件</h3><h3 id=\"实现步骤：\"><a href=\"#实现步骤：\" class=\"headerlink\" title=\"实现步骤：\"></a><strong>实现步骤：</strong></h3><p><strong>首先要安装Pyinstaller包，在命令行窗口使用pip指令就可以完成：</strong><br><code>pip install pyinstaller</code><br><strong>安装成功后就可以进行打包了</strong><br><strong>首先在命令行进入要打包的python程序的目录下面</strong><br><strong>接着使用</strong> <code>pyinstaller file.py</code> <strong>就可以打包了(file.py是指你要打包的python文件)</strong><br><strong>这个指令也可以附带其他属性：</strong><br></p><div class=\"note info\"><p><strong>-F 表示生成单个可执行文件</strong></p><p><strong>-D 创建一个目录，包含exe文件和依赖很多文件（默认选项）</strong></p><p><strong>-w 表示去掉控制台窗口，这样执行exe文件的时候不会出现窗口，但会在后台运行，用命令行还是可以看见执行情况的</strong></p><p><strong>-c 使用控制台，无界面(默认)；</strong></p><p><strong>-p 表示你自己自定义需要加载的类路径</strong></p><p><strong>-i 表示可执行文件的图标。</strong></p></div><br><strong>例如我要生成一个带图标的exe文件，没有其他依赖文件的，那么就是使用指令：</strong><br><code>pyinstaller -F -i image.ico file.py</code> <strong>（image.ico表示图标的路径，file.py表示要打包的python文件）</strong><br><strong>打包后会生成dict文件夹和buid文件夹还有一个.spec文件，其中dict就是放置我们要的exe文件的文件夹，其他两个是生成exe文件的过程中的中间产物，可以删掉。</strong><br><strong>pyinstaller打包的时候会自动把其他依赖的包和其他python文件引入，所以不用担心调用的问题。</strong><br><strong>但是其他要使用到的文件并不会被添加进去，例如要使用的图片或者文档，所以要自己把文件添加到打包完的exe文件的目录下面相应的路径，否则会出现闪退或者文件执行失败。</strong><br><strong>另外就是，如果py文件的编码是utf8，但是文件里面又有中文的话，那么使用windows的命令行打包会出现编码错误。</strong><br><strong>解决的方法就是先使用chcp指令进入其他编码的命令行</strong><br><div class=\"note info\"><p><strong>以下是几种常用的编码:</strong><br><strong>GBK(一般情况下为默认编码) 936</strong><br><strong>美国英语 437</strong><br><strong>utf-8 65001</strong></p></div><br><strong>在这里我们要使用utf-8的编码，所以使用命令:</strong><br><code>chcp 65001</code><br><strong>设置编码后再进行打包就不会出现编码错误的情况了</strong><p></p><p><strong>最后就是，第一次打包出来的程序经常会出现各种问题，建议在命令行执行exe文件，这样可以看到报错的内容，以便结合情况解决问题。</strong></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:42:01 GMT+0800 (GMT+08:00) --><h3 id=\"本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\"><a href=\"#本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\" class=\"headerlink\" title=\"本教程是使用Pyinstaller来将Python程序打包成exe可执行文件\"></a>本教程是使用Pyinstaller来将Python程序打包成exe可执行文件</h3><h3 id=\"实现步骤：\"><a href=\"#实现步骤：\" class=\"headerlink\" title=\"实现步骤：\"></a><strong>实现步骤：</strong></h3><p><strong>首先要安装Pyinstaller包，在命令行窗口使用pip指令就可以完成：</strong><br><code>pip install pyinstaller</code><br><strong>安装成功后就可以进行打包了</strong><br><strong>首先在命令行进入要打包的python程序的目录下面</strong><br><strong>接着使用</strong> <code>pyinstaller file.py</code> <strong>就可以打包了(file.py是指你要打包的python文件)</strong><br><strong>这个指令也可以附带其他属性：</strong><br></p><div class=\"note info\"><p><strong>-F 表示生成单个可执行文件</strong></p><p><strong>-D 创建一个目录，包含exe文件和依赖很多文件（默认选项）</strong></p><p><strong>-w 表示去掉控制台窗口，这样执行exe文件的时候不会出现窗口，但会在后台运行，用命令行还是可以看见执行情况的</strong></p><p><strong>-c 使用控制台，无界面(默认)；</strong></p><p><strong>-p 表示你自己自定义需要加载的类路径</strong></p><p><strong>-i 表示可执行文件的图标。</strong></p></div><br><strong>例如我要生成一个带图标的exe文件，没有其他依赖文件的，那么就是使用指令：</strong><br><code>pyinstaller -F -i image.ico file.py</code> <strong>（image.ico表示图标的路径，file.py表示要打包的python文件）</strong><br><strong>打包后会生成dict文件夹和buid文件夹还有一个.spec文件，其中dict就是放置我们要的exe文件的文件夹，其他两个是生成exe文件的过程中的中间产物，可以删掉。</strong><br><strong>pyinstaller打包的时候会自动把其他依赖的包和其他python文件引入，所以不用担心调用的问题。</strong><br><strong>但是其他要使用到的文件并不会被添加进去，例如要使用的图片或者文档，所以要自己把文件添加到打包完的exe文件的目录下面相应的路径，否则会出现闪退或者文件执行失败。</strong><br><strong>另外就是，如果py文件的编码是utf8，但是文件里面又有中文的话，那么使用windows的命令行打包会出现编码错误。</strong><br><strong>解决的方法就是先使用chcp指令进入其他编码的命令行</strong><br><div class=\"note info\"><p><strong>以下是几种常用的编码:</strong><br><strong>GBK(一般情况下为默认编码) 936</strong><br><strong>美国英语 437</strong><br><strong>utf-8 65001</strong></p></div><br><strong>在这里我们要使用utf-8的编码，所以使用命令:</strong><br><code>chcp 65001</code><br><strong>设置编码后再进行打包就不会出现编码错误的情况了</strong><p></p><p><strong>最后就是，第一次打包出来的程序经常会出现各种问题，建议在命令行执行exe文件，这样可以看到报错的内容，以便结合情况解决问题。</strong></p><!-- rebuild by neat -->"},{"title":"使用Hexo-NexT时遇到的问题","date":"2019-03-28T16:00:00.000Z","top":9809671,"_content":"# 部署到github显示的网页和本地测试的网页不一样\n\n<font size=\"4\">\n之前设置了网页的背景图片还有側框的边角，同时添加了右上角的github跳转图标和阅读全文的设置。\n但是在在本地测试完，部署到github时，发现只有github图标和阅读全文的设置生效了，背景图片和边角设置没有体现出来。\n这是因为github部署的时候缓存加载比较慢，有时候要过一段时间才会显示出你想要的效果，用`hexo clean`清除一下public文件夹,再重新部署用`hexo g -d`部署一下，多刷新几次就行了。\n</font><br /> \n\n# 生成了空白的html文件\n\n<font size=\"4\">\n第一次遇到这个问题的时候，我是直接重新搭建了这个博客的，毕竟一直不知道怎么解决，明明上一步操作还是没问题的，下一步页面突然就崩溃了。\n后来这个博客又遇到了一次，好在我找到了解决方法：\n如果找不到index.html文件（在生成的public文件夹里面）的话，要先用`npm ls --depth 0`检查一下插件情况,如果插件缺失了deploy和generator这两个插件的话就要用`npm install`重新安装插件。\n{% note warning %} **如果是有html文件，但文件是空白的。那么你就要检查你刚刚修改的配置了，如果你修改一个文件里某一个配置下的某一项，但那一个配置忘记打开的话就会导致这样的情况。** {% endnote %}\n\n例如我在主题配置文件里的友情链接links下增加了网易云音乐这一个选项，但是links前面原先有一个#号，我没有删除打开的话，生成的index.html文件就是空白的。\n而我就是遇到了这种情况，当时不知道是修改了哪一个配置，忘记把#号删了，结果就没有成功生成页面，发现了之后把#号删了就恢复正常了。\n</font><br /> \n\n# hexo语句发生错误 Template render error: (unknown path)\n\n<font size=\"4\">\n在我写完另外一篇文章后，打算测试一下，发现无论是hexo g还是hexo s都会报错，于是移除了那篇文章，重新尝试了一下发现可以了。\n在网上看到似乎不能用}}这样的符号，我回去看那篇文章时发现我有一个}误删了，这才的导致解析不通过。\n结合之前生成空白html的经历，我发现只要文件里面有一点语法错误都会出现很大问题，如果某次操作突然出错了，记得去检查你最近的修改和文章有没有语法错误。\n</font><br /> \n\n# 左下角多了一个undefined\n\n<font size=\"4\">\n最新版本的看板娘，在layout/_layout.swig的`</body>`前加上{ { live2d() } }，会产生一个默认的看板娘。\n如果在_config.yml文件中只设置一个，这就会产生冲突，导致有一个无法定义，所以会在页面多出一个undefined语句。\n在最新版本要把`</body>`前的{ { live2d() } }删除，这样才不会出错。\n</font><br /> \n\n# 文件过大push不了\n\n<font size=\"4\">\n更新404页面的时候，我这404里面插入了一个视频，然后在上传的时候发现github不支持超过100M的文件，所以我把视频删了，重新部署一遍博客。\n但每次部署都会继续上传我删掉的那个视频，为什么呢？\n我已经把404文件夹里面的视频删了，也把public文件夹里面的视频删了，我还检查了一遍.deploy_git下面的文件夹，都没发现那个视频了。\n上网重新查了一下hexo的部署方式才知道，执行hexo d，就会把这个public文件夹的东西完完整整拷贝到.deploy_git文件夹里。\n想起了之前部署失败，应该是.deploy_git文件夹里面还保留了之前没push的信息，才会导致现在也部署不了。\n解决方法就是执行`hexo cl`清除一下缓存，或者直接把.deploy_git文件夹删了，\n这样重新部署就没问题了。\n顺便一提，其实那个视频我还是插进去了，只不过用了另外一种方法...\n</font><br /> \n","source":"_posts/使用Hexo-NexT时遇到的问题.md","raw":"---\ntitle: 使用Hexo-NexT时遇到的问题\ndate: 2019-3-29\ntags: \n    - 博客建设\n    - Hexo-NexT\ncategories: 前端建设\ntop: 9809671\n---\n# 部署到github显示的网页和本地测试的网页不一样\n\n<font size=\"4\">\n之前设置了网页的背景图片还有側框的边角，同时添加了右上角的github跳转图标和阅读全文的设置。\n但是在在本地测试完，部署到github时，发现只有github图标和阅读全文的设置生效了，背景图片和边角设置没有体现出来。\n这是因为github部署的时候缓存加载比较慢，有时候要过一段时间才会显示出你想要的效果，用`hexo clean`清除一下public文件夹,再重新部署用`hexo g -d`部署一下，多刷新几次就行了。\n</font><br /> \n\n# 生成了空白的html文件\n\n<font size=\"4\">\n第一次遇到这个问题的时候，我是直接重新搭建了这个博客的，毕竟一直不知道怎么解决，明明上一步操作还是没问题的，下一步页面突然就崩溃了。\n后来这个博客又遇到了一次，好在我找到了解决方法：\n如果找不到index.html文件（在生成的public文件夹里面）的话，要先用`npm ls --depth 0`检查一下插件情况,如果插件缺失了deploy和generator这两个插件的话就要用`npm install`重新安装插件。\n{% note warning %} **如果是有html文件，但文件是空白的。那么你就要检查你刚刚修改的配置了，如果你修改一个文件里某一个配置下的某一项，但那一个配置忘记打开的话就会导致这样的情况。** {% endnote %}\n\n例如我在主题配置文件里的友情链接links下增加了网易云音乐这一个选项，但是links前面原先有一个#号，我没有删除打开的话，生成的index.html文件就是空白的。\n而我就是遇到了这种情况，当时不知道是修改了哪一个配置，忘记把#号删了，结果就没有成功生成页面，发现了之后把#号删了就恢复正常了。\n</font><br /> \n\n# hexo语句发生错误 Template render error: (unknown path)\n\n<font size=\"4\">\n在我写完另外一篇文章后，打算测试一下，发现无论是hexo g还是hexo s都会报错，于是移除了那篇文章，重新尝试了一下发现可以了。\n在网上看到似乎不能用}}这样的符号，我回去看那篇文章时发现我有一个}误删了，这才的导致解析不通过。\n结合之前生成空白html的经历，我发现只要文件里面有一点语法错误都会出现很大问题，如果某次操作突然出错了，记得去检查你最近的修改和文章有没有语法错误。\n</font><br /> \n\n# 左下角多了一个undefined\n\n<font size=\"4\">\n最新版本的看板娘，在layout/_layout.swig的`</body>`前加上{ { live2d() } }，会产生一个默认的看板娘。\n如果在_config.yml文件中只设置一个，这就会产生冲突，导致有一个无法定义，所以会在页面多出一个undefined语句。\n在最新版本要把`</body>`前的{ { live2d() } }删除，这样才不会出错。\n</font><br /> \n\n# 文件过大push不了\n\n<font size=\"4\">\n更新404页面的时候，我这404里面插入了一个视频，然后在上传的时候发现github不支持超过100M的文件，所以我把视频删了，重新部署一遍博客。\n但每次部署都会继续上传我删掉的那个视频，为什么呢？\n我已经把404文件夹里面的视频删了，也把public文件夹里面的视频删了，我还检查了一遍.deploy_git下面的文件夹，都没发现那个视频了。\n上网重新查了一下hexo的部署方式才知道，执行hexo d，就会把这个public文件夹的东西完完整整拷贝到.deploy_git文件夹里。\n想起了之前部署失败，应该是.deploy_git文件夹里面还保留了之前没push的信息，才会导致现在也部署不了。\n解决方法就是执行`hexo cl`清除一下缓存，或者直接把.deploy_git文件夹删了，\n这样重新部署就没问题了。\n顺便一提，其实那个视频我还是插进去了，只不过用了另外一种方法...\n</font><br /> \n","slug":"使用Hexo-NexT时遇到的问题","published":1,"updated":"2019-09-15T06:36:09.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0l54ifs000800vv38qtbnj1","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><h1 id=\"部署到github显示的网页和本地测试的网页不一样\"><a href=\"#部署到github显示的网页和本地测试的网页不一样\" class=\"headerlink\" title=\"部署到github显示的网页和本地测试的网页不一样\"></a>部署到github显示的网页和本地测试的网页不一样</h1><p><font size=\"4\"><br>之前设置了网页的背景图片还有側框的边角，同时添加了右上角的github跳转图标和阅读全文的设置。<br>但是在在本地测试完，部署到github时，发现只有github图标和阅读全文的设置生效了，背景图片和边角设置没有体现出来。<br>这是因为github部署的时候缓存加载比较慢，有时候要过一段时间才会显示出你想要的效果，用<code>hexo clean</code>清除一下public文件夹,再重新部署用<code>hexo g -d</code>部署一下，多刷新几次就行了。<br></font><br></p><h1 id=\"生成了空白的html文件\"><a href=\"#生成了空白的html文件\" class=\"headerlink\" title=\"生成了空白的html文件\"></a>生成了空白的html文件</h1><p><font size=\"4\"><br>第一次遇到这个问题的时候，我是直接重新搭建了这个博客的，毕竟一直不知道怎么解决，明明上一步操作还是没问题的，下一步页面突然就崩溃了。<br>后来这个博客又遇到了一次，好在我找到了解决方法：<br>如果找不到index.html文件（在生成的public文件夹里面）的话，要先用<code>npm ls --depth 0</code>检查一下插件情况,如果插件缺失了deploy和generator这两个插件的话就要用<code>npm install</code>重新安装插件。<br><div class=\"note warning\"><p><strong>如果是有html文件，但文件是空白的。那么你就要检查你刚刚修改的配置了，如果你修改一个文件里某一个配置下的某一项，但那一个配置忘记打开的话就会导致这样的情况。</strong></p></div></font></p><p>例如我在主题配置文件里的友情链接links下增加了网易云音乐这一个选项，但是links前面原先有一个#号，我没有删除打开的话，生成的index.html文件就是空白的。<br>而我就是遇到了这种情况，当时不知道是修改了哪一个配置，忘记把#号删了，结果就没有成功生成页面，发现了之后把#号删了就恢复正常了。<br><br></p><h1 id=\"hexo语句发生错误-Template-render-error-unknown-path\"><a href=\"#hexo语句发生错误-Template-render-error-unknown-path\" class=\"headerlink\" title=\"hexo语句发生错误 Template render error: (unknown path)\"></a>hexo语句发生错误 Template render error: (unknown path)</h1><p><font size=\"4\"><br>在我写完另外一篇文章后，打算测试一下，发现无论是hexo g还是hexo s都会报错，于是移除了那篇文章，重新尝试了一下发现可以了。<br>在网上看到似乎不能用}}这样的符号，我回去看那篇文章时发现我有一个}误删了，这才的导致解析不通过。<br>结合之前生成空白html的经历，我发现只要文件里面有一点语法错误都会出现很大问题，如果某次操作突然出错了，记得去检查你最近的修改和文章有没有语法错误。<br></font><br></p><h1 id=\"左下角多了一个undefined\"><a href=\"#左下角多了一个undefined\" class=\"headerlink\" title=\"左下角多了一个undefined\"></a>左下角多了一个undefined</h1><p><font size=\"4\"><br>最新版本的看板娘，在layout/_layout.swig的<code>&lt;/body&gt;</code>前加上{ { live2d() } }，会产生一个默认的看板娘。<br>如果在_config.yml文件中只设置一个，这就会产生冲突，导致有一个无法定义，所以会在页面多出一个undefined语句。<br>在最新版本要把<code>&lt;/body&gt;</code>前的{ { live2d() } }删除，这样才不会出错。<br></font><br></p><h1 id=\"文件过大push不了\"><a href=\"#文件过大push不了\" class=\"headerlink\" title=\"文件过大push不了\"></a>文件过大push不了</h1><p><font size=\"4\"><br>更新404页面的时候，我这404里面插入了一个视频，然后在上传的时候发现github不支持超过100M的文件，所以我把视频删了，重新部署一遍博客。<br>但每次部署都会继续上传我删掉的那个视频，为什么呢？<br>我已经把404文件夹里面的视频删了，也把public文件夹里面的视频删了，我还检查了一遍.deploy_git下面的文件夹，都没发现那个视频了。<br>上网重新查了一下hexo的部署方式才知道，执行hexo d，就会把这个public文件夹的东西完完整整拷贝到.deploy_git文件夹里。<br>想起了之前部署失败，应该是.deploy_git文件夹里面还保留了之前没push的信息，才会导致现在也部署不了。<br>解决方法就是执行<code>hexo cl</code>清除一下缓存，或者直接把.deploy_git文件夹删了，<br>这样重新部署就没问题了。<br>顺便一提，其实那个视频我还是插进去了，只不过用了另外一种方法…<br></font><br></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><h1 id=\"部署到github显示的网页和本地测试的网页不一样\"><a href=\"#部署到github显示的网页和本地测试的网页不一样\" class=\"headerlink\" title=\"部署到github显示的网页和本地测试的网页不一样\"></a>部署到github显示的网页和本地测试的网页不一样</h1><p><font size=\"4\"><br>之前设置了网页的背景图片还有側框的边角，同时添加了右上角的github跳转图标和阅读全文的设置。<br>但是在在本地测试完，部署到github时，发现只有github图标和阅读全文的设置生效了，背景图片和边角设置没有体现出来。<br>这是因为github部署的时候缓存加载比较慢，有时候要过一段时间才会显示出你想要的效果，用<code>hexo clean</code>清除一下public文件夹,再重新部署用<code>hexo g -d</code>部署一下，多刷新几次就行了。<br></font><br></p><h1 id=\"生成了空白的html文件\"><a href=\"#生成了空白的html文件\" class=\"headerlink\" title=\"生成了空白的html文件\"></a>生成了空白的html文件</h1><p><font size=\"4\"><br>第一次遇到这个问题的时候，我是直接重新搭建了这个博客的，毕竟一直不知道怎么解决，明明上一步操作还是没问题的，下一步页面突然就崩溃了。<br>后来这个博客又遇到了一次，好在我找到了解决方法：<br>如果找不到index.html文件（在生成的public文件夹里面）的话，要先用<code>npm ls --depth 0</code>检查一下插件情况,如果插件缺失了deploy和generator这两个插件的话就要用<code>npm install</code>重新安装插件。<br><div class=\"note warning\"><p><strong>如果是有html文件，但文件是空白的。那么你就要检查你刚刚修改的配置了，如果你修改一个文件里某一个配置下的某一项，但那一个配置忘记打开的话就会导致这样的情况。</strong></p></div></font></p><p>例如我在主题配置文件里的友情链接links下增加了网易云音乐这一个选项，但是links前面原先有一个#号，我没有删除打开的话，生成的index.html文件就是空白的。<br>而我就是遇到了这种情况，当时不知道是修改了哪一个配置，忘记把#号删了，结果就没有成功生成页面，发现了之后把#号删了就恢复正常了。<br><br></p><h1 id=\"hexo语句发生错误-Template-render-error-unknown-path\"><a href=\"#hexo语句发生错误-Template-render-error-unknown-path\" class=\"headerlink\" title=\"hexo语句发生错误 Template render error: (unknown path)\"></a>hexo语句发生错误 Template render error: (unknown path)</h1><p><font size=\"4\"><br>在我写完另外一篇文章后，打算测试一下，发现无论是hexo g还是hexo s都会报错，于是移除了那篇文章，重新尝试了一下发现可以了。<br>在网上看到似乎不能用}}这样的符号，我回去看那篇文章时发现我有一个}误删了，这才的导致解析不通过。<br>结合之前生成空白html的经历，我发现只要文件里面有一点语法错误都会出现很大问题，如果某次操作突然出错了，记得去检查你最近的修改和文章有没有语法错误。<br></font><br></p><h1 id=\"左下角多了一个undefined\"><a href=\"#左下角多了一个undefined\" class=\"headerlink\" title=\"左下角多了一个undefined\"></a>左下角多了一个undefined</h1><p><font size=\"4\"><br>最新版本的看板娘，在layout/_layout.swig的<code>&lt;/body&gt;</code>前加上{ { live2d() } }，会产生一个默认的看板娘。<br>如果在_config.yml文件中只设置一个，这就会产生冲突，导致有一个无法定义，所以会在页面多出一个undefined语句。<br>在最新版本要把<code>&lt;/body&gt;</code>前的{ { live2d() } }删除，这样才不会出错。<br></font><br></p><h1 id=\"文件过大push不了\"><a href=\"#文件过大push不了\" class=\"headerlink\" title=\"文件过大push不了\"></a>文件过大push不了</h1><p><font size=\"4\"><br>更新404页面的时候，我这404里面插入了一个视频，然后在上传的时候发现github不支持超过100M的文件，所以我把视频删了，重新部署一遍博客。<br>但每次部署都会继续上传我删掉的那个视频，为什么呢？<br>我已经把404文件夹里面的视频删了，也把public文件夹里面的视频删了，我还检查了一遍.deploy_git下面的文件夹，都没发现那个视频了。<br>上网重新查了一下hexo的部署方式才知道，执行hexo d，就会把这个public文件夹的东西完完整整拷贝到.deploy_git文件夹里。<br>想起了之前部署失败，应该是.deploy_git文件夹里面还保留了之前没push的信息，才会导致现在也部署不了。<br>解决方法就是执行<code>hexo cl</code>清除一下缓存，或者直接把.deploy_git文件夹删了，<br>这样重新部署就没问题了。<br>顺便一提，其实那个视频我还是插进去了，只不过用了另外一种方法…<br></font><br></p><!-- rebuild by neat -->"},{"title":"天翼校园网验证码识别","date":"2019-05-24T16:00:00.000Z","top":9809475,"_content":"\n**本菜鸡能力有限，本文章主要目的是为了完成自动登录校园网，不是为了教学......**\n**依靠之前学的一个神经网络，尝试写一个识别天翼验证码的代码**\n其实是为了破解那个不得不吐槽的校园网，不得不捣鼓的东西......\n\n**如果不懂爬虫，神经网络的构造，梯度下降算法和反向传播算法，请先找资料学习相关知识，网上有很多讲解的文章，B站也有很多视频**\n\n**首先训练神经网络需要一点训练数据，而且，写的那个神经网络也不是靠深度学习框架的，所以识别的时候是采取分别识别验证码里面的4个数字的方式。**\n**幸好，天翼的验证码里的数字，非常简单，没有那些奇奇怪怪的加工，每个数字都是一样的，所以训练数据也不用那么多。**\n**写一个爬虫抓取一下验证码图片，然后把图片分割一下，就可以得到训练数据了。**\n**因为验证码里面的数字都长得一样，这里我每个数字就只用了10张图片来训练**\n<img src=\"\\images\\天翼验证码训练集图片.png\" alt=\"训练数据数字0~9\"/>\n\n**接下来是训练神经网络**\n```\nclass neuralNetwork():\n\n    # 初始化神经网络\n    def __init__(self):\n        # 定义输入层节点数量\n        self.inputnodes = 13 * 9\n        # 定义隐藏层节点数量\n        self.hiddennodes = 300\n        # 定义输出层节点数量\n        self.outnodes = 10\n        # 随机初始化权重\n        self.input_hidden_weight = random.normal(0.0, pow(self.hiddennodes, -0.5), (self.hiddennodes, self.inputnodes))\n        self.hidden_out_weight = random.normal(0.0, pow(self.outnodes, -0.5), (self.outnodes, self.hiddennodes))\n        # 设置学习率\n        self.learning_rate = 0.1\n        # 定义激活函数\n        self.activation_function = lambda x: expit(x)\n\n    def train(self, inputs, targets):\n        \"\"\"\n        :param inputs: 输入的图片数组\n        :param targets: 预测得到的结果\n        \"\"\"\n        # 转化输入的数据\n        inputs = nparray(inputs, ndmin=2).T\n        # 转化预测的数据\n        targets = nparray(targets, ndmin=2).T\n        # 神经网络的识别结果\n        hidden_inputs = dot(self.input_hidden_weight, inputs)\n        hidden_outputs = self.activation_function(hidden_inputs)\n        out_inputs = dot(self.hidden_out_weight, hidden_outputs)\n        final_outputs = self.activation_function(out_inputs)\n        # 分配输出层、隐藏层的各节的损失值\n        out_error = targets - final_outputs\n        hidden_error = dot(self.hidden_out_weight.T, out_error)\n        # 更新权重\n        self.hidden_out_weight += self.learning_rate * dot((out_error * final_outputs * (1.0 - final_outputs)),\n                                                           hidden_outputs.T)\n        self.input_hidden_weight += self.learning_rate * dot((hidden_error * hidden_outputs * (1.0 - hidden_outputs)),\n                                                             inputs.T)\n\n    def query(self, inputs):\n        inputs = nparray(inputs, ndmin=2).T\n        hidden_inputs = dot(self.input_hidden_weight, inputs)\n        hidden_outputs = self.activation_function(hidden_inputs)\n        out_inputs = dot(self.hidden_out_weight, hidden_outputs)\n        final_outputs = self.activation_function(out_inputs)\n        max = argmax(final_outputs)\n        return max\n```\n\n**用这个类代表神经网络，激活函数是使用sigmoid函数,这个函数在python里面已经内置在scipy库里面了，直接调用scipy.special的expit()函数就可以了**\n**query函数是神经网络识别图片函数，train函数是训练神经网络的函数，训练时用的算法是梯度下降和反向传播。**\n**把分割的数字图片转化为numpy数据传入train方法就可以对神经网络进行训练。**\n**权重更新方式使用梯度下降算法来获取更优的权重**\n**以下是图片的转化函数**\n```\ndef get_data(image, select):\n    \"\"\"\n    转化图片数据\n    :param image: 图片\n    :param select: 0代表输入整张验证码，返回4个数字的3维numpy数组    1代表输入一个数字，返回一个2维的numpy数组\n    :return: data or imdata\n    \"\"\"\n    if select == 0:\n        # 分割图片\n        numdata = []\n        number = image.crop((7, 3, 55, 16)).convert('L')\n        num1 = number.crop((0, 0, 9, 13))\n        num2 = number.crop((13, 0, 22, 13))\n        num3 = number.crop((26, 0, 35, 13))\n        num4 = number.crop((39, 0, 48, 13))\n        numlist = [num1, num2, num3, num4]\n        for num in numlist:\n            two = num.convert('1')\n            array = nparray(two)\n            list = array.tolist()\n            data = []\n            for l in list:\n                for i in l:\n                    data.append(i)\n            numdata.append(data)\n        data = nparray(numdata) * 0.89 + 0.1\n        return data\n    if select == 1:\n        two = image.convert('1')\n        array = nparray(two)\n        list = array.tolist()\n        data = []\n        for l in list:\n            for i in l:\n                data.append(i)\n        imdata = nparray(data) * 0.89 + 0.1\n        return imdata\n```\n\n**以下是我用到的训练函数**\n```\ndef network_train(network):\n    for ii in range(0, 11):\n        for i in range(0, 10):\n            image = Image.open(\"number/\" + str(i) + \"/\" + str(ii) + \".jpg\")\n            inputs = get_data(image, 1)\n            targes = zeros(10) + 0.1\n            targes[i] = 0.99\n            network.train(inputs, targes)\n    try:\n        os.remove('input_hidden_weight.txt')\n        os.remove('hidden_out_weight.txt')\n        print('重置权重文件')\n    except:\n        print('创建权重文件')\n    savetxt(\"input_hidden_weight.txt\", network.input_hidden_weight)\n    savetxt(\"hidden_out_weight.txt\", network.hidden_out_weight)\n```\n\n**因为这个验证码很简单，所以我没打算分测试数据，把全部图片训练完，这个神经网络就可以调用query方法来识别验证码了。**\n**为了不用每次识别验证码都训练一次，我在把训练出来的模型的权重保存在文件里面，以便以后直接拿文件里面的模型来用。**\n\n**代码文件、训练数据、模型权重文件，我都放在github里面**\n\ngithub代码链接：\nhttps://github.com/arukione/verification-code/tree/master/%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB\n","source":"_posts/天翼校园网验证码识别.md","raw":"---\ntitle: 天翼校园网验证码识别\ndate: 2019-5-25\ntags: \n    - 神经网络\n    - Python\ncategories: AI\ntop: 9809475\n---\n\n**本菜鸡能力有限，本文章主要目的是为了完成自动登录校园网，不是为了教学......**\n**依靠之前学的一个神经网络，尝试写一个识别天翼验证码的代码**\n其实是为了破解那个不得不吐槽的校园网，不得不捣鼓的东西......\n\n**如果不懂爬虫，神经网络的构造，梯度下降算法和反向传播算法，请先找资料学习相关知识，网上有很多讲解的文章，B站也有很多视频**\n\n**首先训练神经网络需要一点训练数据，而且，写的那个神经网络也不是靠深度学习框架的，所以识别的时候是采取分别识别验证码里面的4个数字的方式。**\n**幸好，天翼的验证码里的数字，非常简单，没有那些奇奇怪怪的加工，每个数字都是一样的，所以训练数据也不用那么多。**\n**写一个爬虫抓取一下验证码图片，然后把图片分割一下，就可以得到训练数据了。**\n**因为验证码里面的数字都长得一样，这里我每个数字就只用了10张图片来训练**\n<img src=\"\\images\\天翼验证码训练集图片.png\" alt=\"训练数据数字0~9\"/>\n\n**接下来是训练神经网络**\n```\nclass neuralNetwork():\n\n    # 初始化神经网络\n    def __init__(self):\n        # 定义输入层节点数量\n        self.inputnodes = 13 * 9\n        # 定义隐藏层节点数量\n        self.hiddennodes = 300\n        # 定义输出层节点数量\n        self.outnodes = 10\n        # 随机初始化权重\n        self.input_hidden_weight = random.normal(0.0, pow(self.hiddennodes, -0.5), (self.hiddennodes, self.inputnodes))\n        self.hidden_out_weight = random.normal(0.0, pow(self.outnodes, -0.5), (self.outnodes, self.hiddennodes))\n        # 设置学习率\n        self.learning_rate = 0.1\n        # 定义激活函数\n        self.activation_function = lambda x: expit(x)\n\n    def train(self, inputs, targets):\n        \"\"\"\n        :param inputs: 输入的图片数组\n        :param targets: 预测得到的结果\n        \"\"\"\n        # 转化输入的数据\n        inputs = nparray(inputs, ndmin=2).T\n        # 转化预测的数据\n        targets = nparray(targets, ndmin=2).T\n        # 神经网络的识别结果\n        hidden_inputs = dot(self.input_hidden_weight, inputs)\n        hidden_outputs = self.activation_function(hidden_inputs)\n        out_inputs = dot(self.hidden_out_weight, hidden_outputs)\n        final_outputs = self.activation_function(out_inputs)\n        # 分配输出层、隐藏层的各节的损失值\n        out_error = targets - final_outputs\n        hidden_error = dot(self.hidden_out_weight.T, out_error)\n        # 更新权重\n        self.hidden_out_weight += self.learning_rate * dot((out_error * final_outputs * (1.0 - final_outputs)),\n                                                           hidden_outputs.T)\n        self.input_hidden_weight += self.learning_rate * dot((hidden_error * hidden_outputs * (1.0 - hidden_outputs)),\n                                                             inputs.T)\n\n    def query(self, inputs):\n        inputs = nparray(inputs, ndmin=2).T\n        hidden_inputs = dot(self.input_hidden_weight, inputs)\n        hidden_outputs = self.activation_function(hidden_inputs)\n        out_inputs = dot(self.hidden_out_weight, hidden_outputs)\n        final_outputs = self.activation_function(out_inputs)\n        max = argmax(final_outputs)\n        return max\n```\n\n**用这个类代表神经网络，激活函数是使用sigmoid函数,这个函数在python里面已经内置在scipy库里面了，直接调用scipy.special的expit()函数就可以了**\n**query函数是神经网络识别图片函数，train函数是训练神经网络的函数，训练时用的算法是梯度下降和反向传播。**\n**把分割的数字图片转化为numpy数据传入train方法就可以对神经网络进行训练。**\n**权重更新方式使用梯度下降算法来获取更优的权重**\n**以下是图片的转化函数**\n```\ndef get_data(image, select):\n    \"\"\"\n    转化图片数据\n    :param image: 图片\n    :param select: 0代表输入整张验证码，返回4个数字的3维numpy数组    1代表输入一个数字，返回一个2维的numpy数组\n    :return: data or imdata\n    \"\"\"\n    if select == 0:\n        # 分割图片\n        numdata = []\n        number = image.crop((7, 3, 55, 16)).convert('L')\n        num1 = number.crop((0, 0, 9, 13))\n        num2 = number.crop((13, 0, 22, 13))\n        num3 = number.crop((26, 0, 35, 13))\n        num4 = number.crop((39, 0, 48, 13))\n        numlist = [num1, num2, num3, num4]\n        for num in numlist:\n            two = num.convert('1')\n            array = nparray(two)\n            list = array.tolist()\n            data = []\n            for l in list:\n                for i in l:\n                    data.append(i)\n            numdata.append(data)\n        data = nparray(numdata) * 0.89 + 0.1\n        return data\n    if select == 1:\n        two = image.convert('1')\n        array = nparray(two)\n        list = array.tolist()\n        data = []\n        for l in list:\n            for i in l:\n                data.append(i)\n        imdata = nparray(data) * 0.89 + 0.1\n        return imdata\n```\n\n**以下是我用到的训练函数**\n```\ndef network_train(network):\n    for ii in range(0, 11):\n        for i in range(0, 10):\n            image = Image.open(\"number/\" + str(i) + \"/\" + str(ii) + \".jpg\")\n            inputs = get_data(image, 1)\n            targes = zeros(10) + 0.1\n            targes[i] = 0.99\n            network.train(inputs, targes)\n    try:\n        os.remove('input_hidden_weight.txt')\n        os.remove('hidden_out_weight.txt')\n        print('重置权重文件')\n    except:\n        print('创建权重文件')\n    savetxt(\"input_hidden_weight.txt\", network.input_hidden_weight)\n    savetxt(\"hidden_out_weight.txt\", network.hidden_out_weight)\n```\n\n**因为这个验证码很简单，所以我没打算分测试数据，把全部图片训练完，这个神经网络就可以调用query方法来识别验证码了。**\n**为了不用每次识别验证码都训练一次，我在把训练出来的模型的权重保存在文件里面，以便以后直接拿文件里面的模型来用。**\n\n**代码文件、训练数据、模型权重文件，我都放在github里面**\n\ngithub代码链接：\nhttps://github.com/arukione/verification-code/tree/master/%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB\n","slug":"天翼校园网验证码识别","published":1,"updated":"2019-09-15T06:36:09.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0l54ifv000900vvwkz5lu9s","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><p><strong>本菜鸡能力有限，本文章主要目的是为了完成自动登录校园网，不是为了教学……</strong><br><strong>依靠之前学的一个神经网络，尝试写一个识别天翼验证码的代码</strong><br>其实是为了破解那个不得不吐槽的校园网，不得不捣鼓的东西……</p><p><strong>如果不懂爬虫，神经网络的构造，梯度下降算法和反向传播算法，请先找资料学习相关知识，网上有很多讲解的文章，B站也有很多视频</strong></p><p><strong>首先训练神经网络需要一点训练数据，而且，写的那个神经网络也不是靠深度学习框架的，所以识别的时候是采取分别识别验证码里面的4个数字的方式。</strong><br><strong>幸好，天翼的验证码里的数字，非常简单，没有那些奇奇怪怪的加工，每个数字都是一样的，所以训练数据也不用那么多。</strong><br><strong>写一个爬虫抓取一下验证码图片，然后把图片分割一下，就可以得到训练数据了。</strong><br><strong>因为验证码里面的数字都长得一样，这里我每个数字就只用了10张图片来训练</strong><br><img src=\"\\images\\天翼验证码训练集图片.png\" alt=\"训练数据数字0~9\"></p><p><strong>接下来是训练神经网络</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class neuralNetwork():</span><br><span class=\"line\"></span><br><span class=\"line\">    # 初始化神经网络</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        # 定义输入层节点数量</span><br><span class=\"line\">        self.inputnodes = 13 * 9</span><br><span class=\"line\">        # 定义隐藏层节点数量</span><br><span class=\"line\">        self.hiddennodes = 300</span><br><span class=\"line\">        # 定义输出层节点数量</span><br><span class=\"line\">        self.outnodes = 10</span><br><span class=\"line\">        # 随机初始化权重</span><br><span class=\"line\">        self.input_hidden_weight = random.normal(0.0, pow(self.hiddennodes, -0.5), (self.hiddennodes, self.inputnodes))</span><br><span class=\"line\">        self.hidden_out_weight = random.normal(0.0, pow(self.outnodes, -0.5), (self.outnodes, self.hiddennodes))</span><br><span class=\"line\">        # 设置学习率</span><br><span class=\"line\">        self.learning_rate = 0.1</span><br><span class=\"line\">        # 定义激活函数</span><br><span class=\"line\">        self.activation_function = lambda x: expit(x)</span><br><span class=\"line\"></span><br><span class=\"line\">    def train(self, inputs, targets):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :param inputs: 输入的图片数组</span><br><span class=\"line\">        :param targets: 预测得到的结果</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 转化输入的数据</span><br><span class=\"line\">        inputs = nparray(inputs, ndmin=2).T</span><br><span class=\"line\">        # 转化预测的数据</span><br><span class=\"line\">        targets = nparray(targets, ndmin=2).T</span><br><span class=\"line\">        # 神经网络的识别结果</span><br><span class=\"line\">        hidden_inputs = dot(self.input_hidden_weight, inputs)</span><br><span class=\"line\">        hidden_outputs = self.activation_function(hidden_inputs)</span><br><span class=\"line\">        out_inputs = dot(self.hidden_out_weight, hidden_outputs)</span><br><span class=\"line\">        final_outputs = self.activation_function(out_inputs)</span><br><span class=\"line\">        # 分配输出层、隐藏层的各节的损失值</span><br><span class=\"line\">        out_error = targets - final_outputs</span><br><span class=\"line\">        hidden_error = dot(self.hidden_out_weight.T, out_error)</span><br><span class=\"line\">        # 更新权重</span><br><span class=\"line\">        self.hidden_out_weight += self.learning_rate * dot((out_error * final_outputs * (1.0 - final_outputs)),</span><br><span class=\"line\">                                                           hidden_outputs.T)</span><br><span class=\"line\">        self.input_hidden_weight += self.learning_rate * dot((hidden_error * hidden_outputs * (1.0 - hidden_outputs)),</span><br><span class=\"line\">                                                             inputs.T)</span><br><span class=\"line\"></span><br><span class=\"line\">    def query(self, inputs):</span><br><span class=\"line\">        inputs = nparray(inputs, ndmin=2).T</span><br><span class=\"line\">        hidden_inputs = dot(self.input_hidden_weight, inputs)</span><br><span class=\"line\">        hidden_outputs = self.activation_function(hidden_inputs)</span><br><span class=\"line\">        out_inputs = dot(self.hidden_out_weight, hidden_outputs)</span><br><span class=\"line\">        final_outputs = self.activation_function(out_inputs)</span><br><span class=\"line\">        max = argmax(final_outputs)</span><br><span class=\"line\">        return max</span><br></pre></td></tr></table></figure><p></p><p><strong>用这个类代表神经网络，激活函数是使用sigmoid函数,这个函数在python里面已经内置在scipy库里面了，直接调用scipy.special的expit()函数就可以了</strong><br><strong>query函数是神经网络识别图片函数，train函数是训练神经网络的函数，训练时用的算法是梯度下降和反向传播。</strong><br><strong>把分割的数字图片转化为numpy数据传入train方法就可以对神经网络进行训练。</strong><br><strong>权重更新方式使用梯度下降算法来获取更优的权重</strong><br><strong>以下是图片的转化函数</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def get_data(image, select):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    转化图片数据</span><br><span class=\"line\">    :param image: 图片</span><br><span class=\"line\">    :param select: 0代表输入整张验证码，返回4个数字的3维numpy数组    1代表输入一个数字，返回一个2维的numpy数组</span><br><span class=\"line\">    :return: data or imdata</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    if select == 0:</span><br><span class=\"line\">        # 分割图片</span><br><span class=\"line\">        numdata = []</span><br><span class=\"line\">        number = image.crop((7, 3, 55, 16)).convert(&apos;L&apos;)</span><br><span class=\"line\">        num1 = number.crop((0, 0, 9, 13))</span><br><span class=\"line\">        num2 = number.crop((13, 0, 22, 13))</span><br><span class=\"line\">        num3 = number.crop((26, 0, 35, 13))</span><br><span class=\"line\">        num4 = number.crop((39, 0, 48, 13))</span><br><span class=\"line\">        numlist = [num1, num2, num3, num4]</span><br><span class=\"line\">        for num in numlist:</span><br><span class=\"line\">            two = num.convert(&apos;1&apos;)</span><br><span class=\"line\">            array = nparray(two)</span><br><span class=\"line\">            list = array.tolist()</span><br><span class=\"line\">            data = []</span><br><span class=\"line\">            for l in list:</span><br><span class=\"line\">                for i in l:</span><br><span class=\"line\">                    data.append(i)</span><br><span class=\"line\">            numdata.append(data)</span><br><span class=\"line\">        data = nparray(numdata) * 0.89 + 0.1</span><br><span class=\"line\">        return data</span><br><span class=\"line\">    if select == 1:</span><br><span class=\"line\">        two = image.convert(&apos;1&apos;)</span><br><span class=\"line\">        array = nparray(two)</span><br><span class=\"line\">        list = array.tolist()</span><br><span class=\"line\">        data = []</span><br><span class=\"line\">        for l in list:</span><br><span class=\"line\">            for i in l:</span><br><span class=\"line\">                data.append(i)</span><br><span class=\"line\">        imdata = nparray(data) * 0.89 + 0.1</span><br><span class=\"line\">        return imdata</span><br></pre></td></tr></table></figure><p></p><p><strong>以下是我用到的训练函数</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def network_train(network):</span><br><span class=\"line\">    for ii in range(0, 11):</span><br><span class=\"line\">        for i in range(0, 10):</span><br><span class=\"line\">            image = Image.open(&quot;number/&quot; + str(i) + &quot;/&quot; + str(ii) + &quot;.jpg&quot;)</span><br><span class=\"line\">            inputs = get_data(image, 1)</span><br><span class=\"line\">            targes = zeros(10) + 0.1</span><br><span class=\"line\">            targes[i] = 0.99</span><br><span class=\"line\">            network.train(inputs, targes)</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        os.remove(&apos;input_hidden_weight.txt&apos;)</span><br><span class=\"line\">        os.remove(&apos;hidden_out_weight.txt&apos;)</span><br><span class=\"line\">        print(&apos;重置权重文件&apos;)</span><br><span class=\"line\">    except:</span><br><span class=\"line\">        print(&apos;创建权重文件&apos;)</span><br><span class=\"line\">    savetxt(&quot;input_hidden_weight.txt&quot;, network.input_hidden_weight)</span><br><span class=\"line\">    savetxt(&quot;hidden_out_weight.txt&quot;, network.hidden_out_weight)</span><br></pre></td></tr></table></figure><p></p><p><strong>因为这个验证码很简单，所以我没打算分测试数据，把全部图片训练完，这个神经网络就可以调用query方法来识别验证码了。</strong><br><strong>为了不用每次识别验证码都训练一次，我在把训练出来的模型的权重保存在文件里面，以便以后直接拿文件里面的模型来用。</strong></p><p><strong>代码文件、训练数据、模型权重文件，我都放在github里面</strong></p><p>github代码链接：<br><a href=\"https://github.com/arukione/verification-code/tree/master/%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB\" target=\"_blank\" rel=\"noopener\">https://github.com/arukione/verification-code/tree/master/%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB</a></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><p><strong>本菜鸡能力有限，本文章主要目的是为了完成自动登录校园网，不是为了教学……</strong><br><strong>依靠之前学的一个神经网络，尝试写一个识别天翼验证码的代码</strong><br>其实是为了破解那个不得不吐槽的校园网，不得不捣鼓的东西……</p><p><strong>如果不懂爬虫，神经网络的构造，梯度下降算法和反向传播算法，请先找资料学习相关知识，网上有很多讲解的文章，B站也有很多视频</strong></p><p><strong>首先训练神经网络需要一点训练数据，而且，写的那个神经网络也不是靠深度学习框架的，所以识别的时候是采取分别识别验证码里面的4个数字的方式。</strong><br><strong>幸好，天翼的验证码里的数字，非常简单，没有那些奇奇怪怪的加工，每个数字都是一样的，所以训练数据也不用那么多。</strong><br><strong>写一个爬虫抓取一下验证码图片，然后把图片分割一下，就可以得到训练数据了。</strong><br><strong>因为验证码里面的数字都长得一样，这里我每个数字就只用了10张图片来训练</strong><br><img src=\"\\images\\天翼验证码训练集图片.png\" alt=\"训练数据数字0~9\"></p><p><strong>接下来是训练神经网络</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class neuralNetwork():</span><br><span class=\"line\"></span><br><span class=\"line\">    # 初始化神经网络</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        # 定义输入层节点数量</span><br><span class=\"line\">        self.inputnodes = 13 * 9</span><br><span class=\"line\">        # 定义隐藏层节点数量</span><br><span class=\"line\">        self.hiddennodes = 300</span><br><span class=\"line\">        # 定义输出层节点数量</span><br><span class=\"line\">        self.outnodes = 10</span><br><span class=\"line\">        # 随机初始化权重</span><br><span class=\"line\">        self.input_hidden_weight = random.normal(0.0, pow(self.hiddennodes, -0.5), (self.hiddennodes, self.inputnodes))</span><br><span class=\"line\">        self.hidden_out_weight = random.normal(0.0, pow(self.outnodes, -0.5), (self.outnodes, self.hiddennodes))</span><br><span class=\"line\">        # 设置学习率</span><br><span class=\"line\">        self.learning_rate = 0.1</span><br><span class=\"line\">        # 定义激活函数</span><br><span class=\"line\">        self.activation_function = lambda x: expit(x)</span><br><span class=\"line\"></span><br><span class=\"line\">    def train(self, inputs, targets):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :param inputs: 输入的图片数组</span><br><span class=\"line\">        :param targets: 预测得到的结果</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 转化输入的数据</span><br><span class=\"line\">        inputs = nparray(inputs, ndmin=2).T</span><br><span class=\"line\">        # 转化预测的数据</span><br><span class=\"line\">        targets = nparray(targets, ndmin=2).T</span><br><span class=\"line\">        # 神经网络的识别结果</span><br><span class=\"line\">        hidden_inputs = dot(self.input_hidden_weight, inputs)</span><br><span class=\"line\">        hidden_outputs = self.activation_function(hidden_inputs)</span><br><span class=\"line\">        out_inputs = dot(self.hidden_out_weight, hidden_outputs)</span><br><span class=\"line\">        final_outputs = self.activation_function(out_inputs)</span><br><span class=\"line\">        # 分配输出层、隐藏层的各节的损失值</span><br><span class=\"line\">        out_error = targets - final_outputs</span><br><span class=\"line\">        hidden_error = dot(self.hidden_out_weight.T, out_error)</span><br><span class=\"line\">        # 更新权重</span><br><span class=\"line\">        self.hidden_out_weight += self.learning_rate * dot((out_error * final_outputs * (1.0 - final_outputs)),</span><br><span class=\"line\">                                                           hidden_outputs.T)</span><br><span class=\"line\">        self.input_hidden_weight += self.learning_rate * dot((hidden_error * hidden_outputs * (1.0 - hidden_outputs)),</span><br><span class=\"line\">                                                             inputs.T)</span><br><span class=\"line\"></span><br><span class=\"line\">    def query(self, inputs):</span><br><span class=\"line\">        inputs = nparray(inputs, ndmin=2).T</span><br><span class=\"line\">        hidden_inputs = dot(self.input_hidden_weight, inputs)</span><br><span class=\"line\">        hidden_outputs = self.activation_function(hidden_inputs)</span><br><span class=\"line\">        out_inputs = dot(self.hidden_out_weight, hidden_outputs)</span><br><span class=\"line\">        final_outputs = self.activation_function(out_inputs)</span><br><span class=\"line\">        max = argmax(final_outputs)</span><br><span class=\"line\">        return max</span><br></pre></td></tr></table></figure><p></p><p><strong>用这个类代表神经网络，激活函数是使用sigmoid函数,这个函数在python里面已经内置在scipy库里面了，直接调用scipy.special的expit()函数就可以了</strong><br><strong>query函数是神经网络识别图片函数，train函数是训练神经网络的函数，训练时用的算法是梯度下降和反向传播。</strong><br><strong>把分割的数字图片转化为numpy数据传入train方法就可以对神经网络进行训练。</strong><br><strong>权重更新方式使用梯度下降算法来获取更优的权重</strong><br><strong>以下是图片的转化函数</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def get_data(image, select):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    转化图片数据</span><br><span class=\"line\">    :param image: 图片</span><br><span class=\"line\">    :param select: 0代表输入整张验证码，返回4个数字的3维numpy数组    1代表输入一个数字，返回一个2维的numpy数组</span><br><span class=\"line\">    :return: data or imdata</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    if select == 0:</span><br><span class=\"line\">        # 分割图片</span><br><span class=\"line\">        numdata = []</span><br><span class=\"line\">        number = image.crop((7, 3, 55, 16)).convert(&apos;L&apos;)</span><br><span class=\"line\">        num1 = number.crop((0, 0, 9, 13))</span><br><span class=\"line\">        num2 = number.crop((13, 0, 22, 13))</span><br><span class=\"line\">        num3 = number.crop((26, 0, 35, 13))</span><br><span class=\"line\">        num4 = number.crop((39, 0, 48, 13))</span><br><span class=\"line\">        numlist = [num1, num2, num3, num4]</span><br><span class=\"line\">        for num in numlist:</span><br><span class=\"line\">            two = num.convert(&apos;1&apos;)</span><br><span class=\"line\">            array = nparray(two)</span><br><span class=\"line\">            list = array.tolist()</span><br><span class=\"line\">            data = []</span><br><span class=\"line\">            for l in list:</span><br><span class=\"line\">                for i in l:</span><br><span class=\"line\">                    data.append(i)</span><br><span class=\"line\">            numdata.append(data)</span><br><span class=\"line\">        data = nparray(numdata) * 0.89 + 0.1</span><br><span class=\"line\">        return data</span><br><span class=\"line\">    if select == 1:</span><br><span class=\"line\">        two = image.convert(&apos;1&apos;)</span><br><span class=\"line\">        array = nparray(two)</span><br><span class=\"line\">        list = array.tolist()</span><br><span class=\"line\">        data = []</span><br><span class=\"line\">        for l in list:</span><br><span class=\"line\">            for i in l:</span><br><span class=\"line\">                data.append(i)</span><br><span class=\"line\">        imdata = nparray(data) * 0.89 + 0.1</span><br><span class=\"line\">        return imdata</span><br></pre></td></tr></table></figure><p></p><p><strong>以下是我用到的训练函数</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def network_train(network):</span><br><span class=\"line\">    for ii in range(0, 11):</span><br><span class=\"line\">        for i in range(0, 10):</span><br><span class=\"line\">            image = Image.open(&quot;number/&quot; + str(i) + &quot;/&quot; + str(ii) + &quot;.jpg&quot;)</span><br><span class=\"line\">            inputs = get_data(image, 1)</span><br><span class=\"line\">            targes = zeros(10) + 0.1</span><br><span class=\"line\">            targes[i] = 0.99</span><br><span class=\"line\">            network.train(inputs, targes)</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        os.remove(&apos;input_hidden_weight.txt&apos;)</span><br><span class=\"line\">        os.remove(&apos;hidden_out_weight.txt&apos;)</span><br><span class=\"line\">        print(&apos;重置权重文件&apos;)</span><br><span class=\"line\">    except:</span><br><span class=\"line\">        print(&apos;创建权重文件&apos;)</span><br><span class=\"line\">    savetxt(&quot;input_hidden_weight.txt&quot;, network.input_hidden_weight)</span><br><span class=\"line\">    savetxt(&quot;hidden_out_weight.txt&quot;, network.hidden_out_weight)</span><br></pre></td></tr></table></figure><p></p><p><strong>因为这个验证码很简单，所以我没打算分测试数据，把全部图片训练完，这个神经网络就可以调用query方法来识别验证码了。</strong><br><strong>为了不用每次识别验证码都训练一次，我在把训练出来的模型的权重保存在文件里面，以便以后直接拿文件里面的模型来用。</strong></p><p><strong>代码文件、训练数据、模型权重文件，我都放在github里面</strong></p><p>github代码链接：<br><a href=\"https://github.com/arukione/verification-code/tree/master/%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB\" target=\"_blank\" rel=\"noopener\">https://github.com/arukione/verification-code/tree/master/%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB</a></p><!-- rebuild by neat -->"},{"title":"城院智能路由器","date":"2019-08-25T16:00:00.000Z","top":9809174,"_content":"\n**度过了一年城院生活，宿舍最想吐槽的，就是网络了！**\n一年400块钱，只有20M，还不稳定！？\n使用时间是早上6：00 ~ 晚上00：07，周末不断网，时间还非常精准，\n**每次使用都要登录dr认证页面和天翼认证页面，5分钟不连wifi就断开验证**，要重新连接，这就很烦了。\n不能多个人连接，就算买了路由器，也**同一条网线只能连接一台电脑和两个设备连接**，那我还买路由器干嘛？直接电脑连了网络放热点不好吗...\n值得注意的是**当你的电脑使用WIFI接入网络时会被判定为设备**,如果再有两台手机接入就会被强制注销。\n**超过连接数限制就会被强制注销**，一段时间不能连接网络，关键是，不超限制，**偶尔还被注销了**。\n\n\n可能有一些新生会觉得，这种校园网网上破解方法不是很多吗？\n其实那些方法都和城院的校园网不对点，所以在城院内根本行不通\n以前我也尝试弄过破解，因为学校的限制是学生弄的，所以我觉得应该会有什么漏洞可以钻，\n所以我上网查了很多方法，例如安装锐捷等网络插件，或者使用55号端口偷跑网络，我甚至还试过用自己的服务器绕过验证\n但是都失败了......现在感觉那时候挺傻的，根本就是浪费时间，要想破解校园网还是得针对学校网络敲代码\n![像素瘫倒](/images/表情包/像素瘫倒.jpg)\n**以上是吐槽，还好在师兄的研究下，写了破解程序，推出了校园智能路由器，可以解决上面那些问题！**\n(没错，我就是来帮忙宣传路由器的！反正你们打不到我...)\n![别打了](/images/表情包/别打了.jpg)\n\n**下面是校园智能路由器的宣传**\n<b>\n---\n\n<h6 align='center'><b>\n<h3>校园智能路由器出售</h3>\n\n================\n还在为校园网天天手动验证而烦恼吗？\n还在为校园网只能连有限设备烦恼吗？\n莫得关系，这些都不是问题              \n\n=================================\n智能路由器function\n①循环验证校园网，拒绝手动验证\n②可连接多台设备，                  \n③更多功能私聊我，详细为你解答 \n\n=================================\n智能路由器将采用刷机级路由器\n同时采用集成多功能潘多拉固件\n两大殿堂级的碰撞给你最好的上网体验\n路由器并不是针对wifi进行破解，而是针对学校的限制和网页登录\n对于wifi质量完全没影响！！！\n\n=================================\n智能路由器的两大版本\n①标准版：2.4G频率支持，usb接口，百兆端口，小巧玲珑\n![路由器图片](/images/路由器/路由器1.jpg)![路由器图片](/images/路由器/路由器2.jpg)\n②pro版：独立型四天线，双核cpu，双频wifi\n512m内存，32m闪存，4lan，千兆端口，同时配备usb3.0接口\n![路由器图片](/images/路由器/路由器3.jpg)![路由器图片](/images/路由器/路由器4.jpg)\n欢迎联系咨询\n</b></h6>\n----\n\nemmmm....\n看起来好像和普通的路由器没什么区别，其实是师兄们在路由器写入了破解程序，所以功能比普通的路由器多，\n有了这个路由器就**不用手动登录校园网了，而且一个wifi可以给多台设备使用，不会被强制注销**。\n这样就不用花 **4x400=1600(四人间) 或者 6x400=2400(六人间)** 块钱去每个人办理一条宽带了(还没算上买非破解路由器的钱)。\n一个宿舍办理**一条宽带 + 一个破解路由器**，这样可以把支出降低到**700以下**，\n就算是6人间办理两条宽带买两个路由器花的钱也**不会超过1500**，\n**比起原先没破解的时候，现在弄了破解可以省下很多钱了。**\n\n\n附上师兄的联系方式：\n\n微信号：jiehaobin （晚上活动白天睡觉）\n如果这位师兄联系不上~~(猝死了)~~可以加另外一位师兄的微信：ChenShisan_13\n![二维码](/images/路由器/路由器微信.jpg \"微信二维码\")","source":"_posts/城院智能路由器.md","raw":"---\ntitle: 城院智能路由器\ndate: 2019-8-26\ntags: 东莞理工学院城市学院\ncategories: 其它文章\ntop: 9809174\n---\n\n**度过了一年城院生活，宿舍最想吐槽的，就是网络了！**\n一年400块钱，只有20M，还不稳定！？\n使用时间是早上6：00 ~ 晚上00：07，周末不断网，时间还非常精准，\n**每次使用都要登录dr认证页面和天翼认证页面，5分钟不连wifi就断开验证**，要重新连接，这就很烦了。\n不能多个人连接，就算买了路由器，也**同一条网线只能连接一台电脑和两个设备连接**，那我还买路由器干嘛？直接电脑连了网络放热点不好吗...\n值得注意的是**当你的电脑使用WIFI接入网络时会被判定为设备**,如果再有两台手机接入就会被强制注销。\n**超过连接数限制就会被强制注销**，一段时间不能连接网络，关键是，不超限制，**偶尔还被注销了**。\n\n\n可能有一些新生会觉得，这种校园网网上破解方法不是很多吗？\n其实那些方法都和城院的校园网不对点，所以在城院内根本行不通\n以前我也尝试弄过破解，因为学校的限制是学生弄的，所以我觉得应该会有什么漏洞可以钻，\n所以我上网查了很多方法，例如安装锐捷等网络插件，或者使用55号端口偷跑网络，我甚至还试过用自己的服务器绕过验证\n但是都失败了......现在感觉那时候挺傻的，根本就是浪费时间，要想破解校园网还是得针对学校网络敲代码\n![像素瘫倒](/images/表情包/像素瘫倒.jpg)\n**以上是吐槽，还好在师兄的研究下，写了破解程序，推出了校园智能路由器，可以解决上面那些问题！**\n(没错，我就是来帮忙宣传路由器的！反正你们打不到我...)\n![别打了](/images/表情包/别打了.jpg)\n\n**下面是校园智能路由器的宣传**\n<b>\n---\n\n<h6 align='center'><b>\n<h3>校园智能路由器出售</h3>\n\n================\n还在为校园网天天手动验证而烦恼吗？\n还在为校园网只能连有限设备烦恼吗？\n莫得关系，这些都不是问题              \n\n=================================\n智能路由器function\n①循环验证校园网，拒绝手动验证\n②可连接多台设备，                  \n③更多功能私聊我，详细为你解答 \n\n=================================\n智能路由器将采用刷机级路由器\n同时采用集成多功能潘多拉固件\n两大殿堂级的碰撞给你最好的上网体验\n路由器并不是针对wifi进行破解，而是针对学校的限制和网页登录\n对于wifi质量完全没影响！！！\n\n=================================\n智能路由器的两大版本\n①标准版：2.4G频率支持，usb接口，百兆端口，小巧玲珑\n![路由器图片](/images/路由器/路由器1.jpg)![路由器图片](/images/路由器/路由器2.jpg)\n②pro版：独立型四天线，双核cpu，双频wifi\n512m内存，32m闪存，4lan，千兆端口，同时配备usb3.0接口\n![路由器图片](/images/路由器/路由器3.jpg)![路由器图片](/images/路由器/路由器4.jpg)\n欢迎联系咨询\n</b></h6>\n----\n\nemmmm....\n看起来好像和普通的路由器没什么区别，其实是师兄们在路由器写入了破解程序，所以功能比普通的路由器多，\n有了这个路由器就**不用手动登录校园网了，而且一个wifi可以给多台设备使用，不会被强制注销**。\n这样就不用花 **4x400=1600(四人间) 或者 6x400=2400(六人间)** 块钱去每个人办理一条宽带了(还没算上买非破解路由器的钱)。\n一个宿舍办理**一条宽带 + 一个破解路由器**，这样可以把支出降低到**700以下**，\n就算是6人间办理两条宽带买两个路由器花的钱也**不会超过1500**，\n**比起原先没破解的时候，现在弄了破解可以省下很多钱了。**\n\n\n附上师兄的联系方式：\n\n微信号：jiehaobin （晚上活动白天睡觉）\n如果这位师兄联系不上~~(猝死了)~~可以加另外一位师兄的微信：ChenShisan_13\n![二维码](/images/路由器/路由器微信.jpg \"微信二维码\")","slug":"城院智能路由器","published":1,"updated":"2019-09-17T12:08:48.716Z","_id":"ck0l54ifx000a00vvgn0f4a00","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- build time:Tue Sep 17 2019 21:39:26 GMT+0800 (GMT+08:00) --><p><strong>度过了一年城院生活，宿舍最想吐槽的，就是网络了！</strong><br>一年400块钱，只有20M，还不稳定！？<br>使用时间是早上6：00 ~ 晚上00：07，周末不断网，时间还非常精准，<br><strong>每次使用都要登录dr认证页面和天翼认证页面，5分钟不连wifi就断开验证</strong>，要重新连接，这就很烦了。<br>不能多个人连接，就算买了路由器，也<strong>同一条网线只能连接一台电脑和两个设备连接</strong>，那我还买路由器干嘛？直接电脑连了网络放热点不好吗…<br>值得注意的是<strong>当你的电脑使用WIFI接入网络时会被判定为设备</strong>,如果再有两台手机接入就会被强制注销。<br><strong>超过连接数限制就会被强制注销</strong>，一段时间不能连接网络，关键是，不超限制，<strong>偶尔还被注销了</strong>。</p><p>可能有一些新生会觉得，这种校园网网上破解方法不是很多吗？<br>其实那些方法都和城院的校园网不对点，所以在城院内根本行不通<br>以前我也尝试弄过破解，因为学校的限制是学生弄的，所以我觉得应该会有什么漏洞可以钻，<br>所以我上网查了很多方法，例如安装锐捷等网络插件，或者使用55号端口偷跑网络，我甚至还试过用自己的服务器绕过验证<br>但是都失败了……现在感觉那时候挺傻的，根本就是浪费时间，要想破解校园网还是得针对学校网络敲代码<br><img src=\"/images/表情包/像素瘫倒.jpg\" alt=\"像素瘫倒\"><br><strong>以上是吐槽，还好在师兄的研究下，写了破解程序，推出了校园智能路由器，可以解决上面那些问题！</strong><br>(没错，我就是来帮忙宣传路由器的！反正你们打不到我…)<br><img src=\"/images/表情包/别打了.jpg\" alt=\"别打了\"></p><p><strong>下面是校园智能路由器的宣传</strong></p><h2><a href=\"#\" class=\"headerlink\"></a><b></b></h2><p></p><h6 align=\"center\"><b><p></p><h3>校园智能路由器出售</h3><p>================<br>还在为校园网天天手动验证而烦恼吗？<br>还在为校园网只能连有限设备烦恼吗？<br>莫得关系，这些都不是问题</p><p>=================================<br>智能路由器function<br>①循环验证校园网，拒绝手动验证<br>②可连接多台设备，<br>③更多功能私聊我，详细为你解答</p><p>=================================<br>智能路由器将采用刷机级路由器<br>同时采用集成多功能潘多拉固件<br>两大殿堂级的碰撞给你最好的上网体验<br>路由器并不是针对wifi进行破解，而是针对学校的限制和网页登录<br>对于wifi质量完全没影响！！！</p><p>=================================<br>智能路由器的两大版本<br>①标准版：2.4G频率支持，usb接口，百兆端口，小巧玲珑<br><img src=\"/images/路由器/路由器1.jpg\" alt=\"路由器图片\"><img src=\"/images/路由器/路由器2.jpg\" alt=\"路由器图片\"><br>②pro版：独立型四天线，双核cpu，双频wifi<br>512m内存，32m闪存，4lan，千兆端口，同时配备usb3.0接口<br><img src=\"/images/路由器/路由器3.jpg\" alt=\"路由器图片\"><img src=\"/images/路由器/路由器4.jpg\" alt=\"路由器图片\"><br>欢迎联系咨询</p><h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\"></a></h2></b></h6><p>emmmm….<br>看起来好像和普通的路由器没什么区别，其实是师兄们在路由器写入了破解程序，所以功能比普通的路由器多，<br>有了这个路由器就<strong>不用手动登录校园网了，而且一个wifi可以给多台设备使用，不会被强制注销</strong>。<br>这样就不用花 <strong>4x400=1600(四人间) 或者 6x400=2400(六人间)</strong> 块钱去每个人办理一条宽带了(还没算上买非破解路由器的钱)。<br>一个宿舍办理<strong>一条宽带 + 一个破解路由器</strong>，这样可以把支出降低到<strong>700以下</strong>，<br>就算是6人间办理两条宽带买两个路由器花的钱也<strong>不会超过1500</strong>，<br><strong>比起原先没破解的时候，现在弄了破解可以省下很多钱了。</strong></p><p>附上师兄的联系方式：</p><p>微信号：jiehaobin （晚上活动白天睡觉）<br>如果这位师兄联系不上<del>(猝死了)</del>可以加另外一位师兄的微信：ChenShisan_13<br><img src=\"/images/路由器/路由器微信.jpg\" alt=\"二维码\" title=\"微信二维码\"></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Tue Sep 17 2019 21:39:26 GMT+0800 (GMT+08:00) --><p><strong>度过了一年城院生活，宿舍最想吐槽的，就是网络了！</strong><br>一年400块钱，只有20M，还不稳定！？<br>使用时间是早上6：00 ~ 晚上00：07，周末不断网，时间还非常精准，<br><strong>每次使用都要登录dr认证页面和天翼认证页面，5分钟不连wifi就断开验证</strong>，要重新连接，这就很烦了。<br>不能多个人连接，就算买了路由器，也<strong>同一条网线只能连接一台电脑和两个设备连接</strong>，那我还买路由器干嘛？直接电脑连了网络放热点不好吗…<br>值得注意的是<strong>当你的电脑使用WIFI接入网络时会被判定为设备</strong>,如果再有两台手机接入就会被强制注销。<br><strong>超过连接数限制就会被强制注销</strong>，一段时间不能连接网络，关键是，不超限制，<strong>偶尔还被注销了</strong>。</p><p>可能有一些新生会觉得，这种校园网网上破解方法不是很多吗？<br>其实那些方法都和城院的校园网不对点，所以在城院内根本行不通<br>以前我也尝试弄过破解，因为学校的限制是学生弄的，所以我觉得应该会有什么漏洞可以钻，<br>所以我上网查了很多方法，例如安装锐捷等网络插件，或者使用55号端口偷跑网络，我甚至还试过用自己的服务器绕过验证<br>但是都失败了……现在感觉那时候挺傻的，根本就是浪费时间，要想破解校园网还是得针对学校网络敲代码<br><img src=\"/images/表情包/像素瘫倒.jpg\" alt=\"像素瘫倒\"><br><strong>以上是吐槽，还好在师兄的研究下，写了破解程序，推出了校园智能路由器，可以解决上面那些问题！</strong><br>(没错，我就是来帮忙宣传路由器的！反正你们打不到我…)<br><img src=\"/images/表情包/别打了.jpg\" alt=\"别打了\"></p><p><strong>下面是校园智能路由器的宣传</strong></p><h2><a href=\"#\" class=\"headerlink\"></a><b></b></h2><p></p><h6 align=\"center\"><b><p></p><h3>校园智能路由器出售</h3><p>================<br>还在为校园网天天手动验证而烦恼吗？<br>还在为校园网只能连有限设备烦恼吗？<br>莫得关系，这些都不是问题</p><p>=================================<br>智能路由器function<br>①循环验证校园网，拒绝手动验证<br>②可连接多台设备，<br>③更多功能私聊我，详细为你解答</p><p>=================================<br>智能路由器将采用刷机级路由器<br>同时采用集成多功能潘多拉固件<br>两大殿堂级的碰撞给你最好的上网体验<br>路由器并不是针对wifi进行破解，而是针对学校的限制和网页登录<br>对于wifi质量完全没影响！！！</p><p>=================================<br>智能路由器的两大版本<br>①标准版：2.4G频率支持，usb接口，百兆端口，小巧玲珑<br><img src=\"/images/路由器/路由器1.jpg\" alt=\"路由器图片\"><img src=\"/images/路由器/路由器2.jpg\" alt=\"路由器图片\"><br>②pro版：独立型四天线，双核cpu，双频wifi<br>512m内存，32m闪存，4lan，千兆端口，同时配备usb3.0接口<br><img src=\"/images/路由器/路由器3.jpg\" alt=\"路由器图片\"><img src=\"/images/路由器/路由器4.jpg\" alt=\"路由器图片\"><br>欢迎联系咨询</p><h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\"></a></h2></b></h6><p>emmmm….<br>看起来好像和普通的路由器没什么区别，其实是师兄们在路由器写入了破解程序，所以功能比普通的路由器多，<br>有了这个路由器就<strong>不用手动登录校园网了，而且一个wifi可以给多台设备使用，不会被强制注销</strong>。<br>这样就不用花 <strong>4x400=1600(四人间) 或者 6x400=2400(六人间)</strong> 块钱去每个人办理一条宽带了(还没算上买非破解路由器的钱)。<br>一个宿舍办理<strong>一条宽带 + 一个破解路由器</strong>，这样可以把支出降低到<strong>700以下</strong>，<br>就算是6人间办理两条宽带买两个路由器花的钱也<strong>不会超过1500</strong>，<br><strong>比起原先没破解的时候，现在弄了破解可以省下很多钱了。</strong></p><p>附上师兄的联系方式：</p><p>微信号：jiehaobin （晚上活动白天睡觉）<br>如果这位师兄联系不上<del>(猝死了)</del>可以加另外一位师兄的微信：ChenShisan_13<br><img src=\"/images/路由器/路由器微信.jpg\" alt=\"二维码\" title=\"微信二维码\"></p><!-- rebuild by neat -->"},{"title":"我的学习旅程","date":"2019-04-03T16:00:00.000Z","top":2,"_content":"<div align=\"center\"><h2 >2018年</h2>\n**加强自己对计算机的认识，更深层地去理解计算机的工作原理**\n**从C语言开始认识程序**\n**接下来是自己买了服务器搭建梯子，第一次接触脚本**\n**慢慢的听到了许多自己没接触过的东西，例如github、node.js、还有前端啊，但是自己都不知道是什么东西**\n**自己买了前端的书学习，知道了如何构建网站**\n**参与了wiki的建设，发现了更多自己不知道的知识**\n**和vultr的客服交流，开启了服务器25号端口**\n**学习java，认识到了面向对象**\n\n<h2>2019年</h2>\n**访问了HackOne网站，开始对网络安全产生兴趣**\n**接触linux系统**\n**学习了github，明白了github的作用和使用方法**\n**接触python，发现python的优点**\n**购买了域名，尝试搭建博客**\n**初次使用git和githubDesktop，并搭建了自己的博客**\n**用githubDesktop给博客做备份**\n**学习linux系统和python、java，开始接触数据库**\n**学习数据库和python**\n**使用python写一个爬虫，借了数据库的书进行进一步学习和练习**\n**学习AI，入门机器学习**\n**第一次写了一个可以识别数字的神经网络**\n**学习python数据结构**\n**接触网络和使用刷入固件的路由器**\n<h3>七月</h3>\n**暑假开始使用ubuntu系统**\n**进一步学习机器学习算法，入门TensorFlow深度学习框架**\n**学习卷积神经网络结构(CNN)**\n**学习对抗神经网络（DCGAN）**\n**使用tesra平台，尝试在系统用GPU训练网络，结果安装驱动的时候把ubuntu系统搞坏了（呜呜呜）**\n**开始使用debian系统**\n</div>","source":"_posts/我的学习旅程.md","raw":"---\ntitle: 我的学习旅程\ndate: 2019-4-4\ntags: 编程学习\ncategories: 学习旅程\ntop: 2\n---\n<div align=\"center\"><h2 >2018年</h2>\n**加强自己对计算机的认识，更深层地去理解计算机的工作原理**\n**从C语言开始认识程序**\n**接下来是自己买了服务器搭建梯子，第一次接触脚本**\n**慢慢的听到了许多自己没接触过的东西，例如github、node.js、还有前端啊，但是自己都不知道是什么东西**\n**自己买了前端的书学习，知道了如何构建网站**\n**参与了wiki的建设，发现了更多自己不知道的知识**\n**和vultr的客服交流，开启了服务器25号端口**\n**学习java，认识到了面向对象**\n\n<h2>2019年</h2>\n**访问了HackOne网站，开始对网络安全产生兴趣**\n**接触linux系统**\n**学习了github，明白了github的作用和使用方法**\n**接触python，发现python的优点**\n**购买了域名，尝试搭建博客**\n**初次使用git和githubDesktop，并搭建了自己的博客**\n**用githubDesktop给博客做备份**\n**学习linux系统和python、java，开始接触数据库**\n**学习数据库和python**\n**使用python写一个爬虫，借了数据库的书进行进一步学习和练习**\n**学习AI，入门机器学习**\n**第一次写了一个可以识别数字的神经网络**\n**学习python数据结构**\n**接触网络和使用刷入固件的路由器**\n<h3>七月</h3>\n**暑假开始使用ubuntu系统**\n**进一步学习机器学习算法，入门TensorFlow深度学习框架**\n**学习卷积神经网络结构(CNN)**\n**学习对抗神经网络（DCGAN）**\n**使用tesra平台，尝试在系统用GPU训练网络，结果安装驱动的时候把ubuntu系统搞坏了（呜呜呜）**\n**开始使用debian系统**\n</div>","slug":"我的学习旅程","published":1,"updated":"2019-09-15T06:36:09.663Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0l54ije000t00vv48kjxs54","content":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><div align=\"center\"><h2>2018年</h2><br><strong>加强自己对计算机的认识，更深层地去理解计算机的工作原理</strong><br><strong>从C语言开始认识程序</strong><br><strong>接下来是自己买了服务器搭建梯子，第一次接触脚本</strong><br><strong>慢慢的听到了许多自己没接触过的东西，例如github、node.js、还有前端啊，但是自己都不知道是什么东西</strong><br><strong>自己买了前端的书学习，知道了如何构建网站</strong><br><strong>参与了wiki的建设，发现了更多自己不知道的知识</strong><br><strong>和vultr的客服交流，开启了服务器25号端口</strong><br><strong>学习java，认识到了面向对象</strong><br><br><h2>2019年</h2><br><strong>访问了HackOne网站，开始对网络安全产生兴趣</strong><br><strong>接触linux系统</strong><br><strong>学习了github，明白了github的作用和使用方法</strong><br><strong>接触python，发现python的优点</strong><br><strong>购买了域名，尝试搭建博客</strong><br><strong>初次使用git和githubDesktop，并搭建了自己的博客</strong><br><strong>用githubDesktop给博客做备份</strong><br><strong>学习linux系统和python、java，开始接触数据库</strong><br><strong>学习数据库和python</strong><br><strong>使用python写一个爬虫，借了数据库的书进行进一步学习和练习</strong><br><strong>学习AI，入门机器学习</strong><br><strong>第一次写了一个可以识别数字的神经网络</strong><br><strong>学习python数据结构</strong><br><strong>接触网络和使用刷入固件的路由器</strong><br><h3>七月</h3><br><strong>暑假开始使用ubuntu系统</strong><br><strong>进一步学习机器学习算法，入门TensorFlow深度学习框架</strong><br><strong>学习卷积神经网络结构(CNN)</strong><br><strong>学习对抗神经网络（DCGAN）</strong><br><strong>使用tesra平台，尝试在系统用GPU训练网络，结果安装驱动的时候把ubuntu系统搞坏了（呜呜呜）</strong><br><strong>开始使用debian系统</strong><br></div><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:34:41 GMT+0800 (GMT+08:00) --><div align=\"center\"><h2>2018年</h2><br><strong>加强自己对计算机的认识，更深层地去理解计算机的工作原理</strong><br><strong>从C语言开始认识程序</strong><br><strong>接下来是自己买了服务器搭建梯子，第一次接触脚本</strong><br><strong>慢慢的听到了许多自己没接触过的东西，例如github、node.js、还有前端啊，但是自己都不知道是什么东西</strong><br><strong>自己买了前端的书学习，知道了如何构建网站</strong><br><strong>参与了wiki的建设，发现了更多自己不知道的知识</strong><br><strong>和vultr的客服交流，开启了服务器25号端口</strong><br><strong>学习java，认识到了面向对象</strong><br><br><h2>2019年</h2><br><strong>访问了HackOne网站，开始对网络安全产生兴趣</strong><br><strong>接触linux系统</strong><br><strong>学习了github，明白了github的作用和使用方法</strong><br><strong>接触python，发现python的优点</strong><br><strong>购买了域名，尝试搭建博客</strong><br><strong>初次使用git和githubDesktop，并搭建了自己的博客</strong><br><strong>用githubDesktop给博客做备份</strong><br><strong>学习linux系统和python、java，开始接触数据库</strong><br><strong>学习数据库和python</strong><br><strong>使用python写一个爬虫，借了数据库的书进行进一步学习和练习</strong><br><strong>学习AI，入门机器学习</strong><br><strong>第一次写了一个可以识别数字的神经网络</strong><br><strong>学习python数据结构</strong><br><strong>接触网络和使用刷入固件的路由器</strong><br><h3>七月</h3><br><strong>暑假开始使用ubuntu系统</strong><br><strong>进一步学习机器学习算法，入门TensorFlow深度学习框架</strong><br><strong>学习卷积神经网络结构(CNN)</strong><br><strong>学习对抗神经网络（DCGAN）</strong><br><strong>使用tesra平台，尝试在系统用GPU训练网络，结果安装驱动的时候把ubuntu系统搞坏了（呜呜呜）</strong><br><strong>开始使用debian系统</strong><br></div><!-- rebuild by neat -->"},{"title":"机器学习资源分享","date":"2019-04-03T16:00:00.000Z","top":3,"_content":"<div align=\"center\">\n    **我只想说虽然很有兴趣，但是学习深度学习太难了！！！**\n    **所以在这里和大家分享点学习资源，希望能给学习机器学习、深度学习的小伙伴帮助。**\n\n    **B站机器学习视频：**\n        **上交ACM机器学习：https://www.bilibili.com/video/av58580135**\n        **吴恩达（Ng）机器学习：https://www.bilibili.com/video/av9912938**\n        **斯坦福 CS224n 自然语言处理：https://www.bilibili.com/video/av46216519**\n\n    \n    **ApacheCN学习组织：https://github.com/apachecn/AiLearning**\n    **斯坦福 CS224n 自然语言处理中文笔记：https://github.com/apachecn/stanford-cs224n-notes-zh**\n\n    **知乎卷积神经网络讲解：https://zhuanlan.zhihu.com/c_141391545**\n\n    **神经网络&CNN论文（需要翻墙）：http://cs231n.github.io/**\n    我把论文下载为压缩包，给国内的小伙伴们下载学习：[maching learning.7z](./repositories/maching\\ learning/maching\\ learning.7z)\n\n    **一个有点好玩、能帮助理解的数学可视化视频：**\n        **深度学习（Deep Learning）：https://space.bilibili.com/88461692/channel/detail?cid=26587**\n        **微积分：https://space.bilibili.com/88461692/channel/detail?cid=13407**\n        **在B站的全部视频：https://space.bilibili.com/88461692?spm_id_from=333.788.b_765f7570696e666f.1**\n</div>","source":"_posts/机器学习资源分享.md","raw":"---\ntitle: 机器学习资源分享\ndate: 2019-4-4\ntags: \n    -编程学习\n    -神经网络\n    -机器学习\ncategories: 学习旅程\ntop: 3\n---\n<div align=\"center\">\n    **我只想说虽然很有兴趣，但是学习深度学习太难了！！！**\n    **所以在这里和大家分享点学习资源，希望能给学习机器学习、深度学习的小伙伴帮助。**\n\n    **B站机器学习视频：**\n        **上交ACM机器学习：https://www.bilibili.com/video/av58580135**\n        **吴恩达（Ng）机器学习：https://www.bilibili.com/video/av9912938**\n        **斯坦福 CS224n 自然语言处理：https://www.bilibili.com/video/av46216519**\n\n    \n    **ApacheCN学习组织：https://github.com/apachecn/AiLearning**\n    **斯坦福 CS224n 自然语言处理中文笔记：https://github.com/apachecn/stanford-cs224n-notes-zh**\n\n    **知乎卷积神经网络讲解：https://zhuanlan.zhihu.com/c_141391545**\n\n    **神经网络&CNN论文（需要翻墙）：http://cs231n.github.io/**\n    我把论文下载为压缩包，给国内的小伙伴们下载学习：[maching learning.7z](./repositories/maching\\ learning/maching\\ learning.7z)\n\n    **一个有点好玩、能帮助理解的数学可视化视频：**\n        **深度学习（Deep Learning）：https://space.bilibili.com/88461692/channel/detail?cid=26587**\n        **微积分：https://space.bilibili.com/88461692/channel/detail?cid=13407**\n        **在B站的全部视频：https://space.bilibili.com/88461692?spm_id_from=333.788.b_765f7570696e666f.1**\n</div>","slug":"机器学习资源分享","published":1,"updated":"2019-09-15T15:40:40.417Z","_id":"ck0l54ilx000y00vv6nevjoye","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- build time:Sun Sep 15 2019 23:42:01 GMT+0800 (GMT+08:00) --><div align=\"center\"><br><strong>我只想说虽然很有兴趣，但是学习深度学习太难了！！！</strong><br><strong>所以在这里和大家分享点学习资源，希望能给学习机器学习、深度学习的小伙伴帮助。</strong><br><br><strong>B站机器学习视频：</strong><br><strong>上交ACM机器学习：<a href=\"https://www.bilibili.com/video/av58580135\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/av58580135</a></strong><br><strong>吴恩达（Ng）机器学习：<a href=\"https://www.bilibili.com/video/av9912938\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/av9912938</a></strong><br><strong>斯坦福 CS224n 自然语言处理：<a href=\"https://www.bilibili.com/video/av46216519\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/av46216519</a></strong><br><br><br><strong>ApacheCN学习组织：<a href=\"https://github.com/apachecn/AiLearning\" target=\"_blank\" rel=\"noopener\">https://github.com/apachecn/AiLearning</a></strong><br><strong>斯坦福 CS224n 自然语言处理中文笔记：<a href=\"https://github.com/apachecn/stanford-cs224n-notes-zh\" target=\"_blank\" rel=\"noopener\">https://github.com/apachecn/stanford-cs224n-notes-zh</a></strong><br><br><strong>知乎卷积神经网络讲解：<a href=\"https://zhuanlan.zhihu.com/c_141391545\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/c_141391545</a></strong><br><br><strong>神经网络&amp;CNN论文（需要翻墙）：<a href=\"http://cs231n.github.io/\" target=\"_blank\" rel=\"noopener\">http://cs231n.github.io/</a></strong><br>我把论文下载为压缩包，给国内的小伙伴们下载学习：<a href=\"./repositories/maching\\ learning/maching\\ learning.7z\">maching learning.7z</a><br><br><strong>一个有点好玩、能帮助理解的数学可视化视频：</strong><br><strong>深度学习（Deep Learning）：<a href=\"https://space.bilibili.com/88461692/channel/detail?cid=26587\" target=\"_blank\" rel=\"noopener\">https://space.bilibili.com/88461692/channel/detail?cid=26587</a></strong><br><strong>微积分：<a href=\"https://space.bilibili.com/88461692/channel/detail?cid=13407\" target=\"_blank\" rel=\"noopener\">https://space.bilibili.com/88461692/channel/detail?cid=13407</a></strong><br><strong>在B站的全部视频：<a href=\"https://space.bilibili.com/88461692?spm_id_from=333.788.b_765f7570696e666f.1\" target=\"_blank\" rel=\"noopener\">https://space.bilibili.com/88461692?spm_id_from=333.788.b_765f7570696e666f.1</a></strong><br></div><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:42:01 GMT+0800 (GMT+08:00) --><div align=\"center\"><br><strong>我只想说虽然很有兴趣，但是学习深度学习太难了！！！</strong><br><strong>所以在这里和大家分享点学习资源，希望能给学习机器学习、深度学习的小伙伴帮助。</strong><br><br><strong>B站机器学习视频：</strong><br><strong>上交ACM机器学习：<a href=\"https://www.bilibili.com/video/av58580135\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/av58580135</a></strong><br><strong>吴恩达（Ng）机器学习：<a href=\"https://www.bilibili.com/video/av9912938\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/av9912938</a></strong><br><strong>斯坦福 CS224n 自然语言处理：<a href=\"https://www.bilibili.com/video/av46216519\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/av46216519</a></strong><br><br><br><strong>ApacheCN学习组织：<a href=\"https://github.com/apachecn/AiLearning\" target=\"_blank\" rel=\"noopener\">https://github.com/apachecn/AiLearning</a></strong><br><strong>斯坦福 CS224n 自然语言处理中文笔记：<a href=\"https://github.com/apachecn/stanford-cs224n-notes-zh\" target=\"_blank\" rel=\"noopener\">https://github.com/apachecn/stanford-cs224n-notes-zh</a></strong><br><br><strong>知乎卷积神经网络讲解：<a href=\"https://zhuanlan.zhihu.com/c_141391545\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/c_141391545</a></strong><br><br><strong>神经网络&amp;CNN论文（需要翻墙）：<a href=\"http://cs231n.github.io/\" target=\"_blank\" rel=\"noopener\">http://cs231n.github.io/</a></strong><br>我把论文下载为压缩包，给国内的小伙伴们下载学习：<a href=\"./repositories/maching\\ learning/maching\\ learning.7z\">maching learning.7z</a><br><br><strong>一个有点好玩、能帮助理解的数学可视化视频：</strong><br><strong>深度学习（Deep Learning）：<a href=\"https://space.bilibili.com/88461692/channel/detail?cid=26587\" target=\"_blank\" rel=\"noopener\">https://space.bilibili.com/88461692/channel/detail?cid=26587</a></strong><br><strong>微积分：<a href=\"https://space.bilibili.com/88461692/channel/detail?cid=13407\" target=\"_blank\" rel=\"noopener\">https://space.bilibili.com/88461692/channel/detail?cid=13407</a></strong><br><strong>在B站的全部视频：<a href=\"https://space.bilibili.com/88461692?spm_id_from=333.788.b_765f7570696e666f.1\" target=\"_blank\" rel=\"noopener\">https://space.bilibili.com/88461692?spm_id_from=333.788.b_765f7570696e666f.1</a></strong><br></div><!-- rebuild by neat -->"},{"title":"数据结构基础","date":"2019-09-10T16:00:00.000Z","top":9809089,"_content":"\n## 基本概念和术语\n\n**数据(Data)：**客观事物的符号表示，是所有能输入到计算机中并被计算机程序处理的符号的总称 (别问我这个解释，我也看不太懂，只可意会不可言传)\n\n**数据元素(Data Element)：**数据的基本单位，在计算机中通常作为一个整体进行考虑和处理\n\n**数据项(Data Item)：**组成数据元素的、有独立含义的、不可分割的最小单位\n\n**数据对象(Data Object)：**是性质相同的数据元素的集合，是数据的一个子集\n\n{% note info %}\n数据是什么？如何理解数据对象？什么是性质相同的数据元素的集合？\n数据对象相当于数据的一部分内容，而这部分内容里面的元素都有相同的特点，举个例子：\n\n数据                                                 一个班级里面的学生\n数据对象                                        一个班里学生的信息表\n数据元素                                        学生信息表的每一条数据都是数据元素\n数据项                                             学生信息表里面的每一项信息\n\n这里面，学生的信息表是学生的一个部分内容，学生可以包含很多内容，除了信息表，还有成绩单，身份内容，这些都算是学生这个数据的一部分，也就是数据的子集，即数据对象。而学生信息表里面会含有很多个信息项，例如姓名学号、专业、性别等等，这些信息项就是数据项，有着独立的含义。信息表里面的每一个学生的数据，都算是一个数据元素，这些学生的数据构和数据项构造成了信息表，所以数据对象是数据元素的集合。\n{% endnote %}\n\n### 数据结构\n\n**数据结构(Data Stucture)：是相互之间存在一种或多种特定关系的数据元素的集合。**\n数据结构其实就是带有“结构”的数据元素的集合。不过说是数据元素的集合，我们平时的理解更多的是倾向于结构，学得主要也是结构，但这个名词本身指的还是集合！\n数据结构包括逻辑结构和储存结构两个层次。\n\n#### 逻辑结构\n\n**逻辑结构是对于数据来讲的，从逻辑关系上描述数据，和数据的储存无关，独立于计算机。**\n**数据的逻辑结构分为：线性结构和非线性结构。**\n\n四类基本逻辑结构：\n\n**集合结构：**数据元素除了属于同一集合外，没有其他关系\n**线性结构：**数据元素之间存在一对一的关系\n**树结构：**数据元素之间存在一对多的关系\n**图结构或网状结构：**数据元素之间存在多对多的关系\n\n下面图示，会更容易理解\n\n![数据的逻辑结构层次图](/images/数据的逻辑结构.png)\n\n#### 储存结构\n\n**储存结构也称为物理结构，指的是数据对象在计算机中的存储方式。**\n通常要求数据对象在存入计算机时既要存储数据元素的数据，也要存储数据元素之间的逻辑关系，数据元素在计算机内用一个结点来表示。\n\n数据元素在计算机中的两种基本储存结构：\n\n**顺序存储结构：**借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系，要求所有的元素依次存放在一片连续的存储空间中\n\n**链式存储结构：**无需占用一整块存储空间，为了表示结点之间的关系，给每个结点附加指针字段，用于存放后继元素的存储地址。\n\n\n```\n课外补充：\n逻辑结构与数据元素本身的形式、内容、相对位置、个数无关。\n一些表面上很不相同的数据可以有相同的逻辑结构\n通常要求同一逻辑结构中的所有数据元素具有相同的特性，这意味着不仅数据元素所包含的数据项的个数要相同，而且对应数据项的类型要一致\n```\n\n## 算法和算法分析\n\n**算法：**是为了解决某类问题而规定的一个有限长的操作序列\n一个算法必须满足的五个重要特征：**有穷性、确定性、可行性、输入、输出**。\n\n一个算法的优劣评价的方面：**正确性、可读性、健壮性、高效性**。\n高效性包括时间和空间两个方面：\n时间高效是指算法设计合理，执行效率高，可以用**时间复杂度**来度量\n空间高效是指算法占用存储容量合理，可以用**空间复杂度**来度量\n**时间复杂度和空间复杂度是衡量算法的两个主要指标。**\n\n衡量算法效率的方法主要有两种：事后统计法和事前分析估算法。\n通常采用事前分析估算法，通过计算算法的渐进复杂度来衡量算法的效率。\n\n### 渐进时间复杂度\n**一般情况下对于算法中基本语句的执行的是问题规模n的某个函数f(n)，我们用\"O\"来表示数量级，算法的时间量度记作**\n**T(n) = O(f(n))**\n**它表示随问题规模n的增大，算法执行时间的增长率和 f(n) 的增长率相同，称做算法的渐渐时间复杂度，简称时间复杂度(Time Complexity).**\n\n**问题规模：**问题规模是算法求解问题输入量的多少，是问题大小的本质表示，一般用整数n表示\n**语句频度：**一条语句的重复执行次数\n\n「 以下代码来自书中 」\n\n**一个算法的执行时间大致上等于所有语句执行时间的总和，而语句的执行时间则为该条语句的财富执行次数和执行一次所需时间的乘积。**\n\n```\n两个n阶矩阵的乘积算法\n设每条语句执行一次所需时间均为单位时间，n为执行规模\n\nfor(i=1; i<=n; i++)                                                     //频度为 n+1\n    for(j=1; j<=n; j++){                                                //频度为 n*(n+1)\n        c[i][j] = 0;                                                    //频度为 n^2\n        for(k=1; k<=n; k++)                                             //频度为 n^2 * (n+1)\n        c[i][j] = c[i][j] + a[i][k] * b[k][j];                          //频度为 n^3\n    }\n\n该算法中所有语句频度的和 f(n) = 2n^3 + 3n^2 + 2n + 1 \n```\n\n**为了客观反映一个算法的执行时间，可以通过算法中“基本语句”(重复执行次数和算法的执行时间成正比的语句，它对算法运行时间的贡献最大) 执行次数来度量算法的工作量。**\n**通常，算法的执行时间随问题规模增长而增长，因此对算法的评价只需考虑其随问题规模增长的趋势。**\n```\n上面那个例子,当执行规模n趋向无穷大时\nf(n) / n^3  的极限等于2\n也就是当n充分大时，f(n) 和 n^3 的比是一个不等于0的常数\n即 f(n) 和 n^3 同阶(数量级Order of Magnitude相同)\n时间复杂度T(n) = O(f(n)) = O(n^3)\n```\n\n```\n关于常量阶\n当语句频度为1时，算法执行时间是一个与问题规模n无关的常数，即T(n) = O(1)，称为常量阶。\n只要算法执行时间不随问题规模n增长而增长，算法中语句的频度就是某个常数，无论这个常数多大，算法的时间复杂度都是O(1)。\n例如：for(i=0;i<10000;i++){x++;s=0;}\n\n\n关于线性阶\n循环体内两条基本语句的频度均为 f(n)=n，算法的时间复杂度为 T(n) = O(n)，称为线性阶。\n当算法的基本语句频度最大为 n^2 时，T(n) = O(n^2)， 则为平方阶；\n同样，当频度最大为 n^3 时，则为立方阶。\n\n\n对数阶示例\n\ni = 1;\nwhile (i <= n)\n    i = i*3;\n\n设循环体里面的基本语句的频度为 f(n)\n也就是执行了 f(n) 次 i*3\n所以执行完 i的值为 3^f(n)\n由于 i<=n，所以 3^f(n) <= n\n可得到 f(n) <= log_3 n\n所以这个程序的时间复杂度为f(log3 n)\n\n\n最好、最坏、平均时间复杂度\n对于某些问题，算法的基本语句的频度不仅仅和问题的规模有关，还依赖于其他因素，例如：未知的输入值、随机的初始化等等。\n这些问题的算法，在计算时间复杂度的时候需要考虑各种情况。\n称算法在最好情况下的时间复杂度为最好时间复杂度；最坏情况下算法的时间复杂度为最坏时间复杂度，分别指的是算法计算量可能达到的最小值和最大值。\n算法的平均时间复杂度是指算法在所有情况下，按照输入实例以等概率出现时，算法计算量的加权平均值。\n一般来说，人们更关心的是平均情况下和最坏情况下的时间复杂度，但是算法的平均时间复杂度难以确定。\n```\n\n### 渐进空间复杂度\n\n**和时间复杂度类似，渐进空间复杂度(Space Complexity)作为算法所需存储空间的量度，它也是问题规模n的函数，记作S(n) = O(f(n))**\n在分析时，输入数据所占的具体存储量取决于问题，和算法无关，所以秩序分析该算法在实现是所需要的辅助空间就行了。\n若算法实现时所需的辅助存储空间相对于输入数据量而言是个常数，与问题本身无关，则称这个算法为原地工作，辅助空间为O(1)。\n\n```\n示例：\n\nfor(i=0;i<n/2;i++){\n    t = a[i];\n    a[i] = a[n-i-1];\n    a[n-i-1] = t;\n}\n\n由于算法只需借助一个变量t，与问题规模n的大小无关，所以其空间复杂度为O(1)\n\n\nfor(i=0;i<n;i++)\n    b[i] = a[n-i-1];\nfor(i=0;i<n/2;i++)\n    a[i] = b[i];\n\n算法需要借助一个大小为n的辅助数组b，所以其空间复杂度为O(n)\n```\n\n>参考：人民邮电出版社《数据结构    C语言版|第二版》严蔚敏\n\n","source":"_posts/数据结构基础.md","raw":"---\ntitle: 数据结构基础\ndate: 2019-9-11\ntags: \n    -编程学习\n    -数据结构\ncategories: 学习旅程\ntop: 9809089\n---\n\n## 基本概念和术语\n\n**数据(Data)：**客观事物的符号表示，是所有能输入到计算机中并被计算机程序处理的符号的总称 (别问我这个解释，我也看不太懂，只可意会不可言传)\n\n**数据元素(Data Element)：**数据的基本单位，在计算机中通常作为一个整体进行考虑和处理\n\n**数据项(Data Item)：**组成数据元素的、有独立含义的、不可分割的最小单位\n\n**数据对象(Data Object)：**是性质相同的数据元素的集合，是数据的一个子集\n\n{% note info %}\n数据是什么？如何理解数据对象？什么是性质相同的数据元素的集合？\n数据对象相当于数据的一部分内容，而这部分内容里面的元素都有相同的特点，举个例子：\n\n数据                                                 一个班级里面的学生\n数据对象                                        一个班里学生的信息表\n数据元素                                        学生信息表的每一条数据都是数据元素\n数据项                                             学生信息表里面的每一项信息\n\n这里面，学生的信息表是学生的一个部分内容，学生可以包含很多内容，除了信息表，还有成绩单，身份内容，这些都算是学生这个数据的一部分，也就是数据的子集，即数据对象。而学生信息表里面会含有很多个信息项，例如姓名学号、专业、性别等等，这些信息项就是数据项，有着独立的含义。信息表里面的每一个学生的数据，都算是一个数据元素，这些学生的数据构和数据项构造成了信息表，所以数据对象是数据元素的集合。\n{% endnote %}\n\n### 数据结构\n\n**数据结构(Data Stucture)：是相互之间存在一种或多种特定关系的数据元素的集合。**\n数据结构其实就是带有“结构”的数据元素的集合。不过说是数据元素的集合，我们平时的理解更多的是倾向于结构，学得主要也是结构，但这个名词本身指的还是集合！\n数据结构包括逻辑结构和储存结构两个层次。\n\n#### 逻辑结构\n\n**逻辑结构是对于数据来讲的，从逻辑关系上描述数据，和数据的储存无关，独立于计算机。**\n**数据的逻辑结构分为：线性结构和非线性结构。**\n\n四类基本逻辑结构：\n\n**集合结构：**数据元素除了属于同一集合外，没有其他关系\n**线性结构：**数据元素之间存在一对一的关系\n**树结构：**数据元素之间存在一对多的关系\n**图结构或网状结构：**数据元素之间存在多对多的关系\n\n下面图示，会更容易理解\n\n![数据的逻辑结构层次图](/images/数据的逻辑结构.png)\n\n#### 储存结构\n\n**储存结构也称为物理结构，指的是数据对象在计算机中的存储方式。**\n通常要求数据对象在存入计算机时既要存储数据元素的数据，也要存储数据元素之间的逻辑关系，数据元素在计算机内用一个结点来表示。\n\n数据元素在计算机中的两种基本储存结构：\n\n**顺序存储结构：**借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系，要求所有的元素依次存放在一片连续的存储空间中\n\n**链式存储结构：**无需占用一整块存储空间，为了表示结点之间的关系，给每个结点附加指针字段，用于存放后继元素的存储地址。\n\n\n```\n课外补充：\n逻辑结构与数据元素本身的形式、内容、相对位置、个数无关。\n一些表面上很不相同的数据可以有相同的逻辑结构\n通常要求同一逻辑结构中的所有数据元素具有相同的特性，这意味着不仅数据元素所包含的数据项的个数要相同，而且对应数据项的类型要一致\n```\n\n## 算法和算法分析\n\n**算法：**是为了解决某类问题而规定的一个有限长的操作序列\n一个算法必须满足的五个重要特征：**有穷性、确定性、可行性、输入、输出**。\n\n一个算法的优劣评价的方面：**正确性、可读性、健壮性、高效性**。\n高效性包括时间和空间两个方面：\n时间高效是指算法设计合理，执行效率高，可以用**时间复杂度**来度量\n空间高效是指算法占用存储容量合理，可以用**空间复杂度**来度量\n**时间复杂度和空间复杂度是衡量算法的两个主要指标。**\n\n衡量算法效率的方法主要有两种：事后统计法和事前分析估算法。\n通常采用事前分析估算法，通过计算算法的渐进复杂度来衡量算法的效率。\n\n### 渐进时间复杂度\n**一般情况下对于算法中基本语句的执行的是问题规模n的某个函数f(n)，我们用\"O\"来表示数量级，算法的时间量度记作**\n**T(n) = O(f(n))**\n**它表示随问题规模n的增大，算法执行时间的增长率和 f(n) 的增长率相同，称做算法的渐渐时间复杂度，简称时间复杂度(Time Complexity).**\n\n**问题规模：**问题规模是算法求解问题输入量的多少，是问题大小的本质表示，一般用整数n表示\n**语句频度：**一条语句的重复执行次数\n\n「 以下代码来自书中 」\n\n**一个算法的执行时间大致上等于所有语句执行时间的总和，而语句的执行时间则为该条语句的财富执行次数和执行一次所需时间的乘积。**\n\n```\n两个n阶矩阵的乘积算法\n设每条语句执行一次所需时间均为单位时间，n为执行规模\n\nfor(i=1; i<=n; i++)                                                     //频度为 n+1\n    for(j=1; j<=n; j++){                                                //频度为 n*(n+1)\n        c[i][j] = 0;                                                    //频度为 n^2\n        for(k=1; k<=n; k++)                                             //频度为 n^2 * (n+1)\n        c[i][j] = c[i][j] + a[i][k] * b[k][j];                          //频度为 n^3\n    }\n\n该算法中所有语句频度的和 f(n) = 2n^3 + 3n^2 + 2n + 1 \n```\n\n**为了客观反映一个算法的执行时间，可以通过算法中“基本语句”(重复执行次数和算法的执行时间成正比的语句，它对算法运行时间的贡献最大) 执行次数来度量算法的工作量。**\n**通常，算法的执行时间随问题规模增长而增长，因此对算法的评价只需考虑其随问题规模增长的趋势。**\n```\n上面那个例子,当执行规模n趋向无穷大时\nf(n) / n^3  的极限等于2\n也就是当n充分大时，f(n) 和 n^3 的比是一个不等于0的常数\n即 f(n) 和 n^3 同阶(数量级Order of Magnitude相同)\n时间复杂度T(n) = O(f(n)) = O(n^3)\n```\n\n```\n关于常量阶\n当语句频度为1时，算法执行时间是一个与问题规模n无关的常数，即T(n) = O(1)，称为常量阶。\n只要算法执行时间不随问题规模n增长而增长，算法中语句的频度就是某个常数，无论这个常数多大，算法的时间复杂度都是O(1)。\n例如：for(i=0;i<10000;i++){x++;s=0;}\n\n\n关于线性阶\n循环体内两条基本语句的频度均为 f(n)=n，算法的时间复杂度为 T(n) = O(n)，称为线性阶。\n当算法的基本语句频度最大为 n^2 时，T(n) = O(n^2)， 则为平方阶；\n同样，当频度最大为 n^3 时，则为立方阶。\n\n\n对数阶示例\n\ni = 1;\nwhile (i <= n)\n    i = i*3;\n\n设循环体里面的基本语句的频度为 f(n)\n也就是执行了 f(n) 次 i*3\n所以执行完 i的值为 3^f(n)\n由于 i<=n，所以 3^f(n) <= n\n可得到 f(n) <= log_3 n\n所以这个程序的时间复杂度为f(log3 n)\n\n\n最好、最坏、平均时间复杂度\n对于某些问题，算法的基本语句的频度不仅仅和问题的规模有关，还依赖于其他因素，例如：未知的输入值、随机的初始化等等。\n这些问题的算法，在计算时间复杂度的时候需要考虑各种情况。\n称算法在最好情况下的时间复杂度为最好时间复杂度；最坏情况下算法的时间复杂度为最坏时间复杂度，分别指的是算法计算量可能达到的最小值和最大值。\n算法的平均时间复杂度是指算法在所有情况下，按照输入实例以等概率出现时，算法计算量的加权平均值。\n一般来说，人们更关心的是平均情况下和最坏情况下的时间复杂度，但是算法的平均时间复杂度难以确定。\n```\n\n### 渐进空间复杂度\n\n**和时间复杂度类似，渐进空间复杂度(Space Complexity)作为算法所需存储空间的量度，它也是问题规模n的函数，记作S(n) = O(f(n))**\n在分析时，输入数据所占的具体存储量取决于问题，和算法无关，所以秩序分析该算法在实现是所需要的辅助空间就行了。\n若算法实现时所需的辅助存储空间相对于输入数据量而言是个常数，与问题本身无关，则称这个算法为原地工作，辅助空间为O(1)。\n\n```\n示例：\n\nfor(i=0;i<n/2;i++){\n    t = a[i];\n    a[i] = a[n-i-1];\n    a[n-i-1] = t;\n}\n\n由于算法只需借助一个变量t，与问题规模n的大小无关，所以其空间复杂度为O(1)\n\n\nfor(i=0;i<n;i++)\n    b[i] = a[n-i-1];\nfor(i=0;i<n/2;i++)\n    a[i] = b[i];\n\n算法需要借助一个大小为n的辅助数组b，所以其空间复杂度为O(n)\n```\n\n>参考：人民邮电出版社《数据结构    C语言版|第二版》严蔚敏\n\n","slug":"数据结构基础","published":1,"updated":"2019-09-15T15:40:29.161Z","_id":"ck0l54im0000z00vv506vbpfp","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- build time:Sun Sep 15 2019 23:42:01 GMT+0800 (GMT+08:00) --><h2 id=\"基本概念和术语\"><a href=\"#基本概念和术语\" class=\"headerlink\" title=\"基本概念和术语\"></a>基本概念和术语</h2><p><strong>数据(Data)：</strong>客观事物的符号表示，是所有能输入到计算机中并被计算机程序处理的符号的总称 (别问我这个解释，我也看不太懂，只可意会不可言传)</p><p><strong>数据元素(Data Element)：</strong>数据的基本单位，在计算机中通常作为一个整体进行考虑和处理</p><p><strong>数据项(Data Item)：</strong>组成数据元素的、有独立含义的、不可分割的最小单位</p><p><strong>数据对象(Data Object)：</strong>是性质相同的数据元素的集合，是数据的一个子集</p><div class=\"note info\"><p>数据是什么？如何理解数据对象？什么是性质相同的数据元素的集合？<br>数据对象相当于数据的一部分内容，而这部分内容里面的元素都有相同的特点，举个例子：</p><p>数据 一个班级里面的学生<br>数据对象 一个班里学生的信息表<br>数据元素 学生信息表的每一条数据都是数据元素<br>数据项 学生信息表里面的每一项信息</p><p>这里面，学生的信息表是学生的一个部分内容，学生可以包含很多内容，除了信息表，还有成绩单，身份内容，这些都算是学生这个数据的一部分，也就是数据的子集，即数据对象。而学生信息表里面会含有很多个信息项，例如姓名学号、专业、性别等等，这些信息项就是数据项，有着独立的含义。信息表里面的每一个学生的数据，都算是一个数据元素，这些学生的数据构和数据项构造成了信息表，所以数据对象是数据元素的集合。</p></div><h3 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h3><p><strong>数据结构(Data Stucture)：是相互之间存在一种或多种特定关系的数据元素的集合。</strong><br>数据结构其实就是带有“结构”的数据元素的集合。不过说是数据元素的集合，我们平时的理解更多的是倾向于结构，学得主要也是结构，但这个名词本身指的还是集合！<br>数据结构包括逻辑结构和储存结构两个层次。</p><h4 id=\"逻辑结构\"><a href=\"#逻辑结构\" class=\"headerlink\" title=\"逻辑结构\"></a>逻辑结构</h4><p><strong>逻辑结构是对于数据来讲的，从逻辑关系上描述数据，和数据的储存无关，独立于计算机。</strong><br><strong>数据的逻辑结构分为：线性结构和非线性结构。</strong></p><p>四类基本逻辑结构：</p><p><strong>集合结构：</strong>数据元素除了属于同一集合外，没有其他关系<br><strong>线性结构：</strong>数据元素之间存在一对一的关系<br><strong>树结构：</strong>数据元素之间存在一对多的关系<br><strong>图结构或网状结构：</strong>数据元素之间存在多对多的关系</p><p>下面图示，会更容易理解</p><p><img src=\"/images/数据的逻辑结构.png\" alt=\"数据的逻辑结构层次图\"></p><h4 id=\"储存结构\"><a href=\"#储存结构\" class=\"headerlink\" title=\"储存结构\"></a>储存结构</h4><p><strong>储存结构也称为物理结构，指的是数据对象在计算机中的存储方式。</strong><br>通常要求数据对象在存入计算机时既要存储数据元素的数据，也要存储数据元素之间的逻辑关系，数据元素在计算机内用一个结点来表示。</p><p>数据元素在计算机中的两种基本储存结构：</p><p><strong>顺序存储结构：</strong>借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系，要求所有的元素依次存放在一片连续的存储空间中</p><p><strong>链式存储结构：</strong>无需占用一整块存储空间，为了表示结点之间的关系，给每个结点附加指针字段，用于存放后继元素的存储地址。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">课外补充：</span><br><span class=\"line\">逻辑结构与数据元素本身的形式、内容、相对位置、个数无关。</span><br><span class=\"line\">一些表面上很不相同的数据可以有相同的逻辑结构</span><br><span class=\"line\">通常要求同一逻辑结构中的所有数据元素具有相同的特性，这意味着不仅数据元素所包含的数据项的个数要相同，而且对应数据项的类型要一致</span><br></pre></td></tr></table></figure><h2 id=\"算法和算法分析\"><a href=\"#算法和算法分析\" class=\"headerlink\" title=\"算法和算法分析\"></a>算法和算法分析</h2><p><strong>算法：</strong>是为了解决某类问题而规定的一个有限长的操作序列<br>一个算法必须满足的五个重要特征：<strong>有穷性、确定性、可行性、输入、输出</strong>。</p><p>一个算法的优劣评价的方面：<strong>正确性、可读性、健壮性、高效性</strong>。<br>高效性包括时间和空间两个方面：<br>时间高效是指算法设计合理，执行效率高，可以用<strong>时间复杂度</strong>来度量<br>空间高效是指算法占用存储容量合理，可以用<strong>空间复杂度</strong>来度量<br><strong>时间复杂度和空间复杂度是衡量算法的两个主要指标。</strong></p><p>衡量算法效率的方法主要有两种：事后统计法和事前分析估算法。<br>通常采用事前分析估算法，通过计算算法的渐进复杂度来衡量算法的效率。</p><h3 id=\"渐进时间复杂度\"><a href=\"#渐进时间复杂度\" class=\"headerlink\" title=\"渐进时间复杂度\"></a>渐进时间复杂度</h3><p><strong>一般情况下对于算法中基本语句的执行的是问题规模n的某个函数f(n)，我们用”O”来表示数量级，算法的时间量度记作</strong><br><strong>T(n) = O(f(n))</strong><br><strong>它表示随问题规模n的增大，算法执行时间的增长率和 f(n) 的增长率相同，称做算法的渐渐时间复杂度，简称时间复杂度(Time Complexity).</strong></p><p><strong>问题规模：</strong>问题规模是算法求解问题输入量的多少，是问题大小的本质表示，一般用整数n表示<br><strong>语句频度：</strong>一条语句的重复执行次数</p><p>「 以下代码来自书中 」</p><p><strong>一个算法的执行时间大致上等于所有语句执行时间的总和，而语句的执行时间则为该条语句的财富执行次数和执行一次所需时间的乘积。</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">两个n阶矩阵的乘积算法</span><br><span class=\"line\">设每条语句执行一次所需时间均为单位时间，n为执行规模</span><br><span class=\"line\"></span><br><span class=\"line\">for(i=1; i&lt;=n; i++)                                                     //频度为 n+1</span><br><span class=\"line\">    for(j=1; j&lt;=n; j++)&#123;                                                //频度为 n*(n+1)</span><br><span class=\"line\">        c[i][j] = 0;                                                    //频度为 n^2</span><br><span class=\"line\">        for(k=1; k&lt;=n; k++)                                             //频度为 n^2 * (n+1)</span><br><span class=\"line\">        c[i][j] = c[i][j] + a[i][k] * b[k][j];                          //频度为 n^3</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">该算法中所有语句频度的和 f(n) = 2n^3 + 3n^2 + 2n + 1</span><br></pre></td></tr></table></figure><p><strong>为了客观反映一个算法的执行时间，可以通过算法中“基本语句”(重复执行次数和算法的执行时间成正比的语句，它对算法运行时间的贡献最大) 执行次数来度量算法的工作量。</strong><br><strong>通常，算法的执行时间随问题规模增长而增长，因此对算法的评价只需考虑其随问题规模增长的趋势。</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">上面那个例子,当执行规模n趋向无穷大时</span><br><span class=\"line\">f(n) / n^3  的极限等于2</span><br><span class=\"line\">也就是当n充分大时，f(n) 和 n^3 的比是一个不等于0的常数</span><br><span class=\"line\">即 f(n) 和 n^3 同阶(数量级Order of Magnitude相同)</span><br><span class=\"line\">时间复杂度T(n) = O(f(n)) = O(n^3)</span><br></pre></td></tr></table></figure><p></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关于常量阶</span><br><span class=\"line\">当语句频度为1时，算法执行时间是一个与问题规模n无关的常数，即T(n) = O(1)，称为常量阶。</span><br><span class=\"line\">只要算法执行时间不随问题规模n增长而增长，算法中语句的频度就是某个常数，无论这个常数多大，算法的时间复杂度都是O(1)。</span><br><span class=\"line\">例如：for(i=0;i&lt;10000;i++)&#123;x++;s=0;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">关于线性阶</span><br><span class=\"line\">循环体内两条基本语句的频度均为 f(n)=n，算法的时间复杂度为 T(n) = O(n)，称为线性阶。</span><br><span class=\"line\">当算法的基本语句频度最大为 n^2 时，T(n) = O(n^2)， 则为平方阶；</span><br><span class=\"line\">同样，当频度最大为 n^3 时，则为立方阶。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">对数阶示例</span><br><span class=\"line\"></span><br><span class=\"line\">i = 1;</span><br><span class=\"line\">while (i &lt;= n)</span><br><span class=\"line\">    i = i*3;</span><br><span class=\"line\"></span><br><span class=\"line\">设循环体里面的基本语句的频度为 f(n)</span><br><span class=\"line\">也就是执行了 f(n) 次 i*3</span><br><span class=\"line\">所以执行完 i的值为 3^f(n)</span><br><span class=\"line\">由于 i&lt;=n，所以 3^f(n) &lt;= n</span><br><span class=\"line\">可得到 f(n) &lt;= log_3 n</span><br><span class=\"line\">所以这个程序的时间复杂度为f(log3 n)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">最好、最坏、平均时间复杂度</span><br><span class=\"line\">对于某些问题，算法的基本语句的频度不仅仅和问题的规模有关，还依赖于其他因素，例如：未知的输入值、随机的初始化等等。</span><br><span class=\"line\">这些问题的算法，在计算时间复杂度的时候需要考虑各种情况。</span><br><span class=\"line\">称算法在最好情况下的时间复杂度为最好时间复杂度；最坏情况下算法的时间复杂度为最坏时间复杂度，分别指的是算法计算量可能达到的最小值和最大值。</span><br><span class=\"line\">算法的平均时间复杂度是指算法在所有情况下，按照输入实例以等概率出现时，算法计算量的加权平均值。</span><br><span class=\"line\">一般来说，人们更关心的是平均情况下和最坏情况下的时间复杂度，但是算法的平均时间复杂度难以确定。</span><br></pre></td></tr></table></figure><h3 id=\"渐进空间复杂度\"><a href=\"#渐进空间复杂度\" class=\"headerlink\" title=\"渐进空间复杂度\"></a>渐进空间复杂度</h3><p><strong>和时间复杂度类似，渐进空间复杂度(Space Complexity)作为算法所需存储空间的量度，它也是问题规模n的函数，记作S(n) = O(f(n))</strong><br>在分析时，输入数据所占的具体存储量取决于问题，和算法无关，所以秩序分析该算法在实现是所需要的辅助空间就行了。<br>若算法实现时所需的辅助存储空间相对于输入数据量而言是个常数，与问题本身无关，则称这个算法为原地工作，辅助空间为O(1)。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\"></span><br><span class=\"line\">for(i=0;i&lt;n/2;i++)&#123;</span><br><span class=\"line\">    t = a[i];</span><br><span class=\"line\">    a[i] = a[n-i-1];</span><br><span class=\"line\">    a[n-i-1] = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">由于算法只需借助一个变量t，与问题规模n的大小无关，所以其空间复杂度为O(1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">for(i=0;i&lt;n;i++)</span><br><span class=\"line\">    b[i] = a[n-i-1];</span><br><span class=\"line\">for(i=0;i&lt;n/2;i++)</span><br><span class=\"line\">    a[i] = b[i];</span><br><span class=\"line\"></span><br><span class=\"line\">算法需要借助一个大小为n的辅助数组b，所以其空间复杂度为O(n)</span><br></pre></td></tr></table></figure><blockquote><p>参考：人民邮电出版社《数据结构 C语言版|第二版》严蔚敏</p></blockquote><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Sep 15 2019 23:42:01 GMT+0800 (GMT+08:00) --><h2 id=\"基本概念和术语\"><a href=\"#基本概念和术语\" class=\"headerlink\" title=\"基本概念和术语\"></a>基本概念和术语</h2><p><strong>数据(Data)：</strong>客观事物的符号表示，是所有能输入到计算机中并被计算机程序处理的符号的总称 (别问我这个解释，我也看不太懂，只可意会不可言传)</p><p><strong>数据元素(Data Element)：</strong>数据的基本单位，在计算机中通常作为一个整体进行考虑和处理</p><p><strong>数据项(Data Item)：</strong>组成数据元素的、有独立含义的、不可分割的最小单位</p><p><strong>数据对象(Data Object)：</strong>是性质相同的数据元素的集合，是数据的一个子集</p><div class=\"note info\"><p>数据是什么？如何理解数据对象？什么是性质相同的数据元素的集合？<br>数据对象相当于数据的一部分内容，而这部分内容里面的元素都有相同的特点，举个例子：</p><p>数据 一个班级里面的学生<br>数据对象 一个班里学生的信息表<br>数据元素 学生信息表的每一条数据都是数据元素<br>数据项 学生信息表里面的每一项信息</p><p>这里面，学生的信息表是学生的一个部分内容，学生可以包含很多内容，除了信息表，还有成绩单，身份内容，这些都算是学生这个数据的一部分，也就是数据的子集，即数据对象。而学生信息表里面会含有很多个信息项，例如姓名学号、专业、性别等等，这些信息项就是数据项，有着独立的含义。信息表里面的每一个学生的数据，都算是一个数据元素，这些学生的数据构和数据项构造成了信息表，所以数据对象是数据元素的集合。</p></div><h3 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h3><p><strong>数据结构(Data Stucture)：是相互之间存在一种或多种特定关系的数据元素的集合。</strong><br>数据结构其实就是带有“结构”的数据元素的集合。不过说是数据元素的集合，我们平时的理解更多的是倾向于结构，学得主要也是结构，但这个名词本身指的还是集合！<br>数据结构包括逻辑结构和储存结构两个层次。</p><h4 id=\"逻辑结构\"><a href=\"#逻辑结构\" class=\"headerlink\" title=\"逻辑结构\"></a>逻辑结构</h4><p><strong>逻辑结构是对于数据来讲的，从逻辑关系上描述数据，和数据的储存无关，独立于计算机。</strong><br><strong>数据的逻辑结构分为：线性结构和非线性结构。</strong></p><p>四类基本逻辑结构：</p><p><strong>集合结构：</strong>数据元素除了属于同一集合外，没有其他关系<br><strong>线性结构：</strong>数据元素之间存在一对一的关系<br><strong>树结构：</strong>数据元素之间存在一对多的关系<br><strong>图结构或网状结构：</strong>数据元素之间存在多对多的关系</p><p>下面图示，会更容易理解</p><p><img src=\"/images/数据的逻辑结构.png\" alt=\"数据的逻辑结构层次图\"></p><h4 id=\"储存结构\"><a href=\"#储存结构\" class=\"headerlink\" title=\"储存结构\"></a>储存结构</h4><p><strong>储存结构也称为物理结构，指的是数据对象在计算机中的存储方式。</strong><br>通常要求数据对象在存入计算机时既要存储数据元素的数据，也要存储数据元素之间的逻辑关系，数据元素在计算机内用一个结点来表示。</p><p>数据元素在计算机中的两种基本储存结构：</p><p><strong>顺序存储结构：</strong>借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系，要求所有的元素依次存放在一片连续的存储空间中</p><p><strong>链式存储结构：</strong>无需占用一整块存储空间，为了表示结点之间的关系，给每个结点附加指针字段，用于存放后继元素的存储地址。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">课外补充：</span><br><span class=\"line\">逻辑结构与数据元素本身的形式、内容、相对位置、个数无关。</span><br><span class=\"line\">一些表面上很不相同的数据可以有相同的逻辑结构</span><br><span class=\"line\">通常要求同一逻辑结构中的所有数据元素具有相同的特性，这意味着不仅数据元素所包含的数据项的个数要相同，而且对应数据项的类型要一致</span><br></pre></td></tr></table></figure><h2 id=\"算法和算法分析\"><a href=\"#算法和算法分析\" class=\"headerlink\" title=\"算法和算法分析\"></a>算法和算法分析</h2><p><strong>算法：</strong>是为了解决某类问题而规定的一个有限长的操作序列<br>一个算法必须满足的五个重要特征：<strong>有穷性、确定性、可行性、输入、输出</strong>。</p><p>一个算法的优劣评价的方面：<strong>正确性、可读性、健壮性、高效性</strong>。<br>高效性包括时间和空间两个方面：<br>时间高效是指算法设计合理，执行效率高，可以用<strong>时间复杂度</strong>来度量<br>空间高效是指算法占用存储容量合理，可以用<strong>空间复杂度</strong>来度量<br><strong>时间复杂度和空间复杂度是衡量算法的两个主要指标。</strong></p><p>衡量算法效率的方法主要有两种：事后统计法和事前分析估算法。<br>通常采用事前分析估算法，通过计算算法的渐进复杂度来衡量算法的效率。</p><h3 id=\"渐进时间复杂度\"><a href=\"#渐进时间复杂度\" class=\"headerlink\" title=\"渐进时间复杂度\"></a>渐进时间复杂度</h3><p><strong>一般情况下对于算法中基本语句的执行的是问题规模n的某个函数f(n)，我们用”O”来表示数量级，算法的时间量度记作</strong><br><strong>T(n) = O(f(n))</strong><br><strong>它表示随问题规模n的增大，算法执行时间的增长率和 f(n) 的增长率相同，称做算法的渐渐时间复杂度，简称时间复杂度(Time Complexity).</strong></p><p><strong>问题规模：</strong>问题规模是算法求解问题输入量的多少，是问题大小的本质表示，一般用整数n表示<br><strong>语句频度：</strong>一条语句的重复执行次数</p><p>「 以下代码来自书中 」</p><p><strong>一个算法的执行时间大致上等于所有语句执行时间的总和，而语句的执行时间则为该条语句的财富执行次数和执行一次所需时间的乘积。</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">两个n阶矩阵的乘积算法</span><br><span class=\"line\">设每条语句执行一次所需时间均为单位时间，n为执行规模</span><br><span class=\"line\"></span><br><span class=\"line\">for(i=1; i&lt;=n; i++)                                                     //频度为 n+1</span><br><span class=\"line\">    for(j=1; j&lt;=n; j++)&#123;                                                //频度为 n*(n+1)</span><br><span class=\"line\">        c[i][j] = 0;                                                    //频度为 n^2</span><br><span class=\"line\">        for(k=1; k&lt;=n; k++)                                             //频度为 n^2 * (n+1)</span><br><span class=\"line\">        c[i][j] = c[i][j] + a[i][k] * b[k][j];                          //频度为 n^3</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">该算法中所有语句频度的和 f(n) = 2n^3 + 3n^2 + 2n + 1</span><br></pre></td></tr></table></figure><p><strong>为了客观反映一个算法的执行时间，可以通过算法中“基本语句”(重复执行次数和算法的执行时间成正比的语句，它对算法运行时间的贡献最大) 执行次数来度量算法的工作量。</strong><br><strong>通常，算法的执行时间随问题规模增长而增长，因此对算法的评价只需考虑其随问题规模增长的趋势。</strong><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">上面那个例子,当执行规模n趋向无穷大时</span><br><span class=\"line\">f(n) / n^3  的极限等于2</span><br><span class=\"line\">也就是当n充分大时，f(n) 和 n^3 的比是一个不等于0的常数</span><br><span class=\"line\">即 f(n) 和 n^3 同阶(数量级Order of Magnitude相同)</span><br><span class=\"line\">时间复杂度T(n) = O(f(n)) = O(n^3)</span><br></pre></td></tr></table></figure><p></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关于常量阶</span><br><span class=\"line\">当语句频度为1时，算法执行时间是一个与问题规模n无关的常数，即T(n) = O(1)，称为常量阶。</span><br><span class=\"line\">只要算法执行时间不随问题规模n增长而增长，算法中语句的频度就是某个常数，无论这个常数多大，算法的时间复杂度都是O(1)。</span><br><span class=\"line\">例如：for(i=0;i&lt;10000;i++)&#123;x++;s=0;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">关于线性阶</span><br><span class=\"line\">循环体内两条基本语句的频度均为 f(n)=n，算法的时间复杂度为 T(n) = O(n)，称为线性阶。</span><br><span class=\"line\">当算法的基本语句频度最大为 n^2 时，T(n) = O(n^2)， 则为平方阶；</span><br><span class=\"line\">同样，当频度最大为 n^3 时，则为立方阶。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">对数阶示例</span><br><span class=\"line\"></span><br><span class=\"line\">i = 1;</span><br><span class=\"line\">while (i &lt;= n)</span><br><span class=\"line\">    i = i*3;</span><br><span class=\"line\"></span><br><span class=\"line\">设循环体里面的基本语句的频度为 f(n)</span><br><span class=\"line\">也就是执行了 f(n) 次 i*3</span><br><span class=\"line\">所以执行完 i的值为 3^f(n)</span><br><span class=\"line\">由于 i&lt;=n，所以 3^f(n) &lt;= n</span><br><span class=\"line\">可得到 f(n) &lt;= log_3 n</span><br><span class=\"line\">所以这个程序的时间复杂度为f(log3 n)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">最好、最坏、平均时间复杂度</span><br><span class=\"line\">对于某些问题，算法的基本语句的频度不仅仅和问题的规模有关，还依赖于其他因素，例如：未知的输入值、随机的初始化等等。</span><br><span class=\"line\">这些问题的算法，在计算时间复杂度的时候需要考虑各种情况。</span><br><span class=\"line\">称算法在最好情况下的时间复杂度为最好时间复杂度；最坏情况下算法的时间复杂度为最坏时间复杂度，分别指的是算法计算量可能达到的最小值和最大值。</span><br><span class=\"line\">算法的平均时间复杂度是指算法在所有情况下，按照输入实例以等概率出现时，算法计算量的加权平均值。</span><br><span class=\"line\">一般来说，人们更关心的是平均情况下和最坏情况下的时间复杂度，但是算法的平均时间复杂度难以确定。</span><br></pre></td></tr></table></figure><h3 id=\"渐进空间复杂度\"><a href=\"#渐进空间复杂度\" class=\"headerlink\" title=\"渐进空间复杂度\"></a>渐进空间复杂度</h3><p><strong>和时间复杂度类似，渐进空间复杂度(Space Complexity)作为算法所需存储空间的量度，它也是问题规模n的函数，记作S(n) = O(f(n))</strong><br>在分析时，输入数据所占的具体存储量取决于问题，和算法无关，所以秩序分析该算法在实现是所需要的辅助空间就行了。<br>若算法实现时所需的辅助存储空间相对于输入数据量而言是个常数，与问题本身无关，则称这个算法为原地工作，辅助空间为O(1)。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\"></span><br><span class=\"line\">for(i=0;i&lt;n/2;i++)&#123;</span><br><span class=\"line\">    t = a[i];</span><br><span class=\"line\">    a[i] = a[n-i-1];</span><br><span class=\"line\">    a[n-i-1] = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">由于算法只需借助一个变量t，与问题规模n的大小无关，所以其空间复杂度为O(1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">for(i=0;i&lt;n;i++)</span><br><span class=\"line\">    b[i] = a[n-i-1];</span><br><span class=\"line\">for(i=0;i&lt;n/2;i++)</span><br><span class=\"line\">    a[i] = b[i];</span><br><span class=\"line\"></span><br><span class=\"line\">算法需要借助一个大小为n的辅助数组b，所以其空间复杂度为O(n)</span><br></pre></td></tr></table></figure><blockquote><p>参考：人民邮电出版社《数据结构 C语言版|第二版》严蔚敏</p></blockquote><!-- rebuild by neat -->"},{"title":"城院网络断开原因分析","date":"2019-09-16T16:00:00.000Z","top":9809083,"_content":"\n在城院的你，使用校园网，是否有过网络没被注销却突然断开、进不去验证网页，或者是网络一断一断的经历？\n用了一年网络，遇到了各种各样的情况。\n先不提学校对于网络连接数的限制和强制注销。有时候在使用网络的时候，发现网络突然断了，wifi明明连着，却上不了网。\n有过被强制注销经历的同学，应该想：\"我又被强制注销了？我明明没有超过限制啊？\"或者是买了破解路由器的同学：\"我用的不是破解路由器吗？路由器坏了？\"\n但是实际上，这种网络断开的情况和校园网被注销没什么关系。\n\n被注销校园网的时候，上网遇到的应该是这样的\n![网络注销图片](/images/路由器/网络断开.png)\n\n用破解路由器的同学就会发现，断网的时候显示不是这样的，一直在转圈圈，或者提示没有网络连接。\n一些同学可能会尝试打开验证网页重新验证试试，但是发现打不开验证网页。\n所以说这其实不是被注销了网络，而是你已经完全没网了。\n什么？我网线坏了？\n不，其实是学校网络坏了。\n\n**我们来看看我们平时在宿舍是怎样才能使用网络的：**\n**在验证网页192.168.100.1登录校园网**\n**在天翼页面登录电信网络**\n**可以上网了**\n\n**为什么要登录两个页面呢？**\n第一个页面登录后，其实是没有网络的，但是你可以发现，你可以进入正方教务系统！\n没错，这个网页就是让你进入学校内网的。\n而第二个天翼的网页登录完，你就可以使用电信的宽带了，也是就你可以正常上网了。\n**我们都必须先进入内网，才能登录电信的网络。**\n![学校网络图片](/images/路由器/网络图1.png)\n\n**我们分析刚刚上面那种断网的情况，我们会发现一个问题，我打开浏览器没有提示要我登录，也不能进入验证页面。**\n**那么这种情况，就只可能是你没有连接上学校的服务器，所以既上不了网，又无法验证。**\n![学校网络图片](/images/路由器/网络图2.png)\n\n**我明明连了网线了啊？怎么会连接不上学校的服务器呢？为什么我宿友可以使用网络，我就不可以呢？**\n还记得学校的连接数限制吗？为什么他可以限制你的网络呢，他怎么认出你的？\n我们在宿舍使用网络的时候，都得先用账号登录内网，进入到服务器，而你连接服务器就是通过宿舍的网口，服务器会检测使用这个网口的设备的数量，一旦超过限制，就会把你通过这个网口登录的账号注销掉，从而让你无法继续使用网络。\n而学校服务器同时处理的不仅仅是你这个网口的连接，是整个学校宿舍的全部网口。**有时候服务器应付不来，刚好处理不到你的数据，即便你原本是登录着的，服务器没办法把数据传给你，你照样上不了网。**\n就像你登录了QQ，突然没网络了，你发送不了消息，但是你会发现你网络恢复后你的QQ还是登录着的，而消息没有发送出去。\n**服务器的处理端口的程序是不变的，出现一次问题，可能会引发一系列其它问题，直到恢复正轨。所以有时候会一断一断的，有时候会请求不出网页，有时候会直接提示没网络连接，甚至可能会错误地强制注销掉账号。如果断开时间久了，也会退出你的校园网账号。**\n**就和ping一个网站一样，这种情况是随机性的，所以你断网了，或者路由器断网了，不代表别人会断网。**你平时打开那个网址好好的，但是ping的时候就会出现发送数据包失败的情况。因为浏览器有重复请求的功能，而我们宿舍的网口没有。\n![学校网络图片](/images/路由器/网络图3.png)\n","source":"_posts/城院网络断开原因分析.md","raw":"---\ntitle: 城院网络断开原因分析\ndate: 2019-9-17\ntags: 东莞理工学院城市学院\ncategories: 其它文章\ntop: 9809083\n---\n\n在城院的你，使用校园网，是否有过网络没被注销却突然断开、进不去验证网页，或者是网络一断一断的经历？\n用了一年网络，遇到了各种各样的情况。\n先不提学校对于网络连接数的限制和强制注销。有时候在使用网络的时候，发现网络突然断了，wifi明明连着，却上不了网。\n有过被强制注销经历的同学，应该想：\"我又被强制注销了？我明明没有超过限制啊？\"或者是买了破解路由器的同学：\"我用的不是破解路由器吗？路由器坏了？\"\n但是实际上，这种网络断开的情况和校园网被注销没什么关系。\n\n被注销校园网的时候，上网遇到的应该是这样的\n![网络注销图片](/images/路由器/网络断开.png)\n\n用破解路由器的同学就会发现，断网的时候显示不是这样的，一直在转圈圈，或者提示没有网络连接。\n一些同学可能会尝试打开验证网页重新验证试试，但是发现打不开验证网页。\n所以说这其实不是被注销了网络，而是你已经完全没网了。\n什么？我网线坏了？\n不，其实是学校网络坏了。\n\n**我们来看看我们平时在宿舍是怎样才能使用网络的：**\n**在验证网页192.168.100.1登录校园网**\n**在天翼页面登录电信网络**\n**可以上网了**\n\n**为什么要登录两个页面呢？**\n第一个页面登录后，其实是没有网络的，但是你可以发现，你可以进入正方教务系统！\n没错，这个网页就是让你进入学校内网的。\n而第二个天翼的网页登录完，你就可以使用电信的宽带了，也是就你可以正常上网了。\n**我们都必须先进入内网，才能登录电信的网络。**\n![学校网络图片](/images/路由器/网络图1.png)\n\n**我们分析刚刚上面那种断网的情况，我们会发现一个问题，我打开浏览器没有提示要我登录，也不能进入验证页面。**\n**那么这种情况，就只可能是你没有连接上学校的服务器，所以既上不了网，又无法验证。**\n![学校网络图片](/images/路由器/网络图2.png)\n\n**我明明连了网线了啊？怎么会连接不上学校的服务器呢？为什么我宿友可以使用网络，我就不可以呢？**\n还记得学校的连接数限制吗？为什么他可以限制你的网络呢，他怎么认出你的？\n我们在宿舍使用网络的时候，都得先用账号登录内网，进入到服务器，而你连接服务器就是通过宿舍的网口，服务器会检测使用这个网口的设备的数量，一旦超过限制，就会把你通过这个网口登录的账号注销掉，从而让你无法继续使用网络。\n而学校服务器同时处理的不仅仅是你这个网口的连接，是整个学校宿舍的全部网口。**有时候服务器应付不来，刚好处理不到你的数据，即便你原本是登录着的，服务器没办法把数据传给你，你照样上不了网。**\n就像你登录了QQ，突然没网络了，你发送不了消息，但是你会发现你网络恢复后你的QQ还是登录着的，而消息没有发送出去。\n**服务器的处理端口的程序是不变的，出现一次问题，可能会引发一系列其它问题，直到恢复正轨。所以有时候会一断一断的，有时候会请求不出网页，有时候会直接提示没网络连接，甚至可能会错误地强制注销掉账号。如果断开时间久了，也会退出你的校园网账号。**\n**就和ping一个网站一样，这种情况是随机性的，所以你断网了，或者路由器断网了，不代表别人会断网。**你平时打开那个网址好好的，但是ping的时候就会出现发送数据包失败的情况。因为浏览器有重复请求的功能，而我们宿舍的网口没有。\n![学校网络图片](/images/路由器/网络图3.png)\n","slug":"城院网络断开原因分析","published":1,"updated":"2019-09-18T05:16:22.756Z","_id":"ck0nvw0nc000090vv945hkvr6","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- build time:Wed Sep 18 2019 13:16:36 GMT+0800 (GMT+08:00) --><p>在城院的你，使用校园网，是否有过网络没被注销却突然断开、进不去验证网页，或者是网络一断一断的经历？<br>用了一年网络，遇到了各种各样的情况。<br>先不提学校对于网络连接数的限制和强制注销。有时候在使用网络的时候，发现网络突然断了，wifi明明连着，却上不了网。<br>有过被强制注销经历的同学，应该想：”我又被强制注销了？我明明没有超过限制啊？”或者是买了破解路由器的同学：”我用的不是破解路由器吗？路由器坏了？”<br>但是实际上，这种网络断开的情况和校园网被注销没什么关系。</p><p>被注销校园网的时候，上网遇到的应该是这样的<br><img src=\"/images/路由器/网络断开.png\" alt=\"网络注销图片\"></p><p>用破解路由器的同学就会发现，断网的时候显示不是这样的，一直在转圈圈，或者提示没有网络连接。<br>一些同学可能会尝试打开验证网页重新验证试试，但是发现打不开验证网页。<br>所以说这其实不是被注销了网络，而是你已经完全没网了。<br>什么？我网线坏了？<br>不，其实是学校网络坏了。</p><p><strong>我们来看看我们平时在宿舍是怎样才能使用网络的：</strong><br><strong>在验证网页192.168.100.1登录校园网</strong><br><strong>在天翼页面登录电信网络</strong><br><strong>可以上网了</strong></p><p><strong>为什么要登录两个页面呢？</strong><br>第一个页面登录后，其实是没有网络的，但是你可以发现，你可以进入正方教务系统！<br>没错，这个网页就是让你进入学校内网的。<br>而第二个天翼的网页登录完，你就可以使用电信的宽带了，也是就你可以正常上网了。<br><strong>我们都必须先进入内网，才能登录电信的网络。</strong><br><img src=\"/images/路由器/网络图1.png\" alt=\"学校网络图片\"></p><p><strong>我们分析刚刚上面那种断网的情况，我们会发现一个问题，我打开浏览器没有提示要我登录，也不能进入验证页面。</strong><br><strong>那么这种情况，就只可能是你没有连接上学校的服务器，所以既上不了网，又无法验证。</strong><br><img src=\"/images/路由器/网络图2.png\" alt=\"学校网络图片\"></p><p><strong>我明明连了网线了啊？怎么会连接不上学校的服务器呢？为什么我宿友可以使用网络，我就不可以呢？</strong><br>还记得学校的连接数限制吗？为什么他可以限制你的网络呢，他怎么认出你的？<br>我们在宿舍使用网络的时候，都得先用账号登录内网，进入到服务器，而你连接服务器就是通过宿舍的网口，服务器会检测使用这个网口的设备的数量，一旦超过限制，就会把你通过这个网口登录的账号注销掉，从而让你无法继续使用网络。<br>而学校服务器同时处理的不仅仅是你这个网口的连接，是整个学校宿舍的全部网口。<strong>有时候服务器应付不来，刚好处理不到你的数据，即便你原本是登录着的，服务器没办法把数据传给你，你照样上不了网。</strong><br>就像你登录了QQ，突然没网络了，你发送不了消息，但是你会发现你网络恢复后你的QQ还是登录着的，而消息没有发送出去。<br><strong>服务器的处理端口的程序是不变的，出现一次问题，可能会引发一系列其它问题，直到恢复正轨。所以有时候会一断一断的，有时候会请求不出网页，有时候会直接提示没网络连接，甚至可能会错误地强制注销掉账号。如果断开时间久了，也会退出你的校园网账号。</strong><br><strong>就和ping一个网站一样，这种情况是随机性的，所以你断网了，或者路由器断网了，不代表别人会断网。</strong>你平时打开那个网址好好的，但是ping的时候就会出现发送数据包失败的情况。因为浏览器有重复请求的功能，而我们宿舍的网口没有。<br><img src=\"/images/路由器/网络图3.png\" alt=\"学校网络图片\"></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Wed Sep 18 2019 13:16:36 GMT+0800 (GMT+08:00) --><p>在城院的你，使用校园网，是否有过网络没被注销却突然断开、进不去验证网页，或者是网络一断一断的经历？<br>用了一年网络，遇到了各种各样的情况。<br>先不提学校对于网络连接数的限制和强制注销。有时候在使用网络的时候，发现网络突然断了，wifi明明连着，却上不了网。<br>有过被强制注销经历的同学，应该想：”我又被强制注销了？我明明没有超过限制啊？”或者是买了破解路由器的同学：”我用的不是破解路由器吗？路由器坏了？”<br>但是实际上，这种网络断开的情况和校园网被注销没什么关系。</p><p>被注销校园网的时候，上网遇到的应该是这样的<br><img src=\"/images/路由器/网络断开.png\" alt=\"网络注销图片\"></p><p>用破解路由器的同学就会发现，断网的时候显示不是这样的，一直在转圈圈，或者提示没有网络连接。<br>一些同学可能会尝试打开验证网页重新验证试试，但是发现打不开验证网页。<br>所以说这其实不是被注销了网络，而是你已经完全没网了。<br>什么？我网线坏了？<br>不，其实是学校网络坏了。</p><p><strong>我们来看看我们平时在宿舍是怎样才能使用网络的：</strong><br><strong>在验证网页192.168.100.1登录校园网</strong><br><strong>在天翼页面登录电信网络</strong><br><strong>可以上网了</strong></p><p><strong>为什么要登录两个页面呢？</strong><br>第一个页面登录后，其实是没有网络的，但是你可以发现，你可以进入正方教务系统！<br>没错，这个网页就是让你进入学校内网的。<br>而第二个天翼的网页登录完，你就可以使用电信的宽带了，也是就你可以正常上网了。<br><strong>我们都必须先进入内网，才能登录电信的网络。</strong><br><img src=\"/images/路由器/网络图1.png\" alt=\"学校网络图片\"></p><p><strong>我们分析刚刚上面那种断网的情况，我们会发现一个问题，我打开浏览器没有提示要我登录，也不能进入验证页面。</strong><br><strong>那么这种情况，就只可能是你没有连接上学校的服务器，所以既上不了网，又无法验证。</strong><br><img src=\"/images/路由器/网络图2.png\" alt=\"学校网络图片\"></p><p><strong>我明明连了网线了啊？怎么会连接不上学校的服务器呢？为什么我宿友可以使用网络，我就不可以呢？</strong><br>还记得学校的连接数限制吗？为什么他可以限制你的网络呢，他怎么认出你的？<br>我们在宿舍使用网络的时候，都得先用账号登录内网，进入到服务器，而你连接服务器就是通过宿舍的网口，服务器会检测使用这个网口的设备的数量，一旦超过限制，就会把你通过这个网口登录的账号注销掉，从而让你无法继续使用网络。<br>而学校服务器同时处理的不仅仅是你这个网口的连接，是整个学校宿舍的全部网口。<strong>有时候服务器应付不来，刚好处理不到你的数据，即便你原本是登录着的，服务器没办法把数据传给你，你照样上不了网。</strong><br>就像你登录了QQ，突然没网络了，你发送不了消息，但是你会发现你网络恢复后你的QQ还是登录着的，而消息没有发送出去。<br><strong>服务器的处理端口的程序是不变的，出现一次问题，可能会引发一系列其它问题，直到恢复正轨。所以有时候会一断一断的，有时候会请求不出网页，有时候会直接提示没网络连接，甚至可能会错误地强制注销掉账号。如果断开时间久了，也会退出你的校园网账号。</strong><br><strong>就和ping一个网站一样，这种情况是随机性的，所以你断网了，或者路由器断网了，不代表别人会断网。</strong>你平时打开那个网址好好的，但是ping的时候就会出现发送数据包失败的情况。因为浏览器有重复请求的功能，而我们宿舍的网口没有。<br><img src=\"/images/路由器/网络图3.png\" alt=\"学校网络图片\"></p><!-- rebuild by neat -->"}],"PostAsset":[],"PostCategory":[{"post_id":"ck0l54ifa000200vvzgkpexmt","category_id":"ck0l54ifl000600vvs8g31rnd","_id":"ck0l54ifz000d00vvskj8iovw"},{"post_id":"ck0l54ifs000800vv38qtbnj1","category_id":"ck0l54ify000b00vvhsmkzb05","_id":"ck0l54ig1000i00vvfktx0jty"},{"post_id":"ck0l54ifv000900vvwkz5lu9s","category_id":"ck0l54ifz000e00vvj8g8ajil","_id":"ck0l54ig2000l00vvn8fo96zn"},{"post_id":"ck0l54ije000t00vv48kjxs54","category_id":"ck0l54iji000u00vv8ozixls9","_id":"ck0l54ijj000x00vv1gl1qcis"},{"post_id":"ck0l54ife000400vvi48h0b57","category_id":"ck0l5dfwr001a00vvjpefd78v","_id":"ck0l5dfwr001c00vvrnieapax"},{"post_id":"ck0l54ilx000y00vv6nevjoye","category_id":"ck0l54iji000u00vv8ozixls9","_id":"ck0l5dz0p000118vv36de245v"},{"post_id":"ck0l54im0000z00vv506vbpfp","category_id":"ck0l54iji000u00vv8ozixls9","_id":"ck0l5dz2g000318vvf633x1tp"},{"post_id":"ck0nvw0nc000090vv945hkvr6","category_id":"ck0nvw0ni000190vvg8afy3dj","_id":"ck0nvw0nl000490vvadexecku"},{"post_id":"ck0l54ifx000a00vvgn0f4a00","category_id":"ck0nvw0ni000190vvg8afy3dj","_id":"ck0nvw0s3000690vvb1sgp2pz"}],"PostTag":[{"post_id":"ck0l54ifa000200vvzgkpexmt","tag_id":"ck0l54ifr000700vvygia7bpb","_id":"ck0l54ig0000g00vvjkcynffi"},{"post_id":"ck0l54ifa000200vvzgkpexmt","tag_id":"ck0l54ify000c00vvlb77ynjg","_id":"ck0l54ig0000h00vvw269zeyv"},{"post_id":"ck0l54ifs000800vv38qtbnj1","tag_id":"ck0l54ig1000j00vv05km6lke","_id":"ck0l54ig3000o00vvrvz0iey7"},{"post_id":"ck0l54ifs000800vv38qtbnj1","tag_id":"ck0l54ig2000m00vvh1b9ls3c","_id":"ck0l54ig4000p00vvg4fbifty"},{"post_id":"ck0l54ifv000900vvwkz5lu9s","tag_id":"ck0l54ig3000n00vvj2w170xc","_id":"ck0l54ig7000r00vvzxume1cu"},{"post_id":"ck0l54ifv000900vvwkz5lu9s","tag_id":"ck0l54ig0000f00vvhscpxlq6","_id":"ck0l54ig7000s00vv0sfevnqa"},{"post_id":"ck0l54ije000t00vv48kjxs54","tag_id":"ck0l54iji000v00vvytel5nhw","_id":"ck0l54ijj000w00vvoqj36t45"},{"post_id":"ck0l54ife000400vvi48h0b57","tag_id":"ck0l54ig0000f00vvhscpxlq6","_id":"ck0l5dfwr001b00vvhkwlhhav"},{"post_id":"ck0l54ilx000y00vv6nevjoye","tag_id":"ck0l54im3001100vvulm8hqlf","_id":"ck0l5dz0o000018vvhy46d76d"},{"post_id":"ck0l54im0000z00vv506vbpfp","tag_id":"ck0l54im6001300vv3urap76h","_id":"ck0l5dz2f000218vvi8kpzzh1"},{"post_id":"ck0nvw0nc000090vv945hkvr6","tag_id":"ck0nvw0nk000290vv7zsoa2il","_id":"ck0nvw0nl000390vvl633k7a3"},{"post_id":"ck0l54ifx000a00vvgn0f4a00","tag_id":"ck0nvw0nk000290vv7zsoa2il","_id":"ck0nvw0s2000590vv5dng9ix9"}],"Tag":[{"name":"MySQL","_id":"ck0l54ifr000700vvygia7bpb"},{"name":"windows命令","_id":"ck0l54ify000c00vvlb77ynjg"},{"name":"Python","_id":"ck0l54ig0000f00vvhscpxlq6"},{"name":"博客建设","_id":"ck0l54ig1000j00vv05km6lke"},{"name":"Hexo-NexT","_id":"ck0l54ig2000m00vvh1b9ls3c"},{"name":"神经网络","_id":"ck0l54ig3000n00vvj2w170xc"},{"name":"编程学习","_id":"ck0l54iji000v00vvytel5nhw"},{"name":"-编程学习 -神经网络 -机器学习","_id":"ck0l54im3001100vvulm8hqlf"},{"name":"-编程学习 -数据结构","_id":"ck0l54im6001300vv3urap76h"},{"name":"-编程学习 数据结构","_id":"ck0l5bp9x001800vvyx7ws1i8"},{"name":"东莞理工学院城市学院","_id":"ck0nvw0nk000290vv7zsoa2il"}]}}